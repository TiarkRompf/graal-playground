// constants: <function1>,playground.interpreter.BytecodeInterpreter_Simple@e624e1e,HotSpotMethod<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>,Array(CONST_0, x0),true,void java.lang.AbstractStringBuilder.expandCapacity(int),public java.lang.String java.lang.Object.toString(),public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(),public void java.io.PrintStream.println(java.lang.String),public java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder.append(java.lang.String),false
class Generated(CONST_0: playground.interpreter.TestInterpreter1$$anonfun$testB$1$$anonfun$1,CONST_1: playground.interpreter.BytecodeInterpreter_Simple,CONST_2: com.oracle.graal.hotspot.meta.HotSpotResolvedJavaMethod,CONST_3: Array[playground.interpreter.Base_Simple$Rep],CONST_4: java.lang.Boolean,CONST_5: java.lang.reflect.Method,CONST_6: java.lang.reflect.Method,CONST_7: java.lang.reflect.Method,CONST_8: java.lang.reflect.Method,CONST_9: java.lang.reflect.Method,CONST_10: java.lang.Boolean) extends (Int=>Int){
import sun.misc.Unsafe
val unsafe = { val fld = classOf[Unsafe].getDeclaredField("theUnsafe"); fld.setAccessible(true); fld.get(classOf[Unsafe]).asInstanceOf[Unsafe]; }
type char = Char
def apply(ARG: Int): Int = { object BODY {
var RES = null.asInstanceOf[Int]
          val x0: Int = ARG
          val x1: Int = x0.asInstanceOf[Int]
          val x2: Unit = block_0(null,null,null,null,CONST_0,x1,null,null) // 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x3: Object = null // stub return value int
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_0(r:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x4: Boolean = p2_3 eq null
          val x6: Object = if (x4) {          val x5: Object = throw new NullPointerException()
x5} else {p2_3}
          val x7: Unit = block_1(null,null,null,null,p2_3,p2_4,null,null,p2_0,p2_1,p2_2,p2_3,p2_4,null,null) // 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x7
}
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_1(r:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x8: Boolean = p3_3 eq null
          val x10: Object = if (x8) {          val x9: Object = throw new NullPointerException()
x9} else {p3_3}
          val x11: Object = unsafe.getObject(x10,16)
          val x12: Boolean = x11 eq null
          val x14: Object = if (x12) {          val x13: Object = throw new NullPointerException()
x13} else {x11}
          val x15: Unit = block_2(null,null,null,null,x11,8,null,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,null,null,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x15
}
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_2(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Any,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x16: Object = unsafe.getObject(Class.forName("java.lang.System"),208)
          val x17: Object = unsafe.allocateInstance(classOf[scala.collection.mutable.StringBuilder])
          val x18: Boolean = x17 eq null
          val x20: Object = if (x18) {          val x19: Object = throw new NullPointerException()
x19} else {x17}
          val x21: Unit = block_3(null,null,null,null,x17,null,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,x16,x17,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x21
}
// *** begin block 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_3(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x22: Boolean = p5_3 eq null
          val x24: Object = if (x22) {          val x23: Object = throw new NullPointerException()
x23} else {p5_3}
          val x25: Unit = block_4(null,null,null,null,p5_3,16,"",null,null,null,null,null,p5_0,p5_1,p5_2,p5_3,null,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x25
}
// *** begin block 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_4(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x26: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x27: Boolean = p6_5 eq null
          val x29: Object = if (x27) {          val x28: Object = throw new NullPointerException()
x28} else {p6_5}
          val x30: Unit = block_5(null,null,null,null,p6_5,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_3,x26,x26,null,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x30
}
// *** begin block 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_5(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Object,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x31: Boolean = p7_3 eq null
          val x33: Object = if (x31) {          val x32: Object = throw new NullPointerException()
x32} else {p7_3}
          val x34: Object = unsafe.getObject(x33,16)
          val x35: Boolean = x34 eq null
          val x37: Object = if (x35) {          val x36: Object = throw new NullPointerException()
x36} else {x34}
          val x38: Int = java.lang.reflect.Array.getLength(x37)
          val x39: Unit = block_6(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,x38,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x39
}
// *** begin block 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_6(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Object,p6_9:Int,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x40: Int = p6_4 + p6_9
          val x41: Boolean = p6_8 eq null
          val x43: Object = if (x41) {          val x42: Object = throw new NullPointerException()
x42} else {p6_8}
          val x44: Unit = block_7(null,null,null,null,p6_8,x40,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,null,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x44
}
// *** begin block 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_7(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x45: Boolean = p7_3 eq null
          val x47: Object = if (x45) {          val x46: Object = throw new NullPointerException()
x46} else {p7_3}
          val x48: Unit = block_8(null,null,null,null,p7_3,p7_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x48
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_8(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x49: Boolean = p8_3 eq null
          val x51: Object = if (x49) {          val x50: Object = throw new NullPointerException()
x50} else {p8_3}
          val x52: Unit = block_9(null,null,null,null,p8_3,p8_0,p8_1,p8_2,p8_3,p8_4,null,p8_6,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x52
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_9(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x53: Unit = block_10(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x53
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_10(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x54: Object = new Array[char](p8_4)
          val x55: Boolean = p8_3 eq null
          val x57: Object = if (x55) {          val x56: Object = throw new NullPointerException()
x56} else {p8_3}
          val x58: Unit = unsafe.putObject(x57,24, x54)
          val x59: Unit = block_11(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x59
}
// *** begin block 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_11(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x60: Unit = block_12(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x60
}
// *** begin block 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_12(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x61: Boolean = p6_7 eq null
          val x63: Object = if (x61) {          val x62: Object = throw new NullPointerException()
x62} else {p6_7}
          val x64: Unit = block_13(null,null,null,null,p6_7,p6_5,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,null,null,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x64
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_13(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x65: Boolean = p7_3 eq null
          val x67: Object = if (x65) {          val x66: Object = throw new NullPointerException()
x66} else {p7_3}
          val x68: Unit = block_14(null,null,null,null,p7_3,p7_4,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x68
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_14(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x71: Unit = if (CONST_4) {          val x69: Unit = block_15(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x69} else {          val x70: Unit = block_16(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x70}
x71
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_15(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x72: Boolean = p8_4 eq null
          val x74: Object = if (x72) {          val x73: Object = throw new NullPointerException()
x73} else {p8_4}
          val x75: Unit = block_17(null,null,null,null,p8_4,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x75
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_16(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x76: Boolean = "null" eq null
          val x78: Object = if (x76) {          val x77: Object = throw new NullPointerException()
x77} else {"null"}
          val x79: Unit = block_17(null,null,null,null,"null",null,p8_0,p8_1,p8_2,p8_3,"null",p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x79
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_17(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x80: Boolean = p9_3 eq null
          val x82: Object = if (x80) {          val x81: Object = throw new NullPointerException()
x81} else {p9_3}
          val x83: Object = unsafe.getObject(x82,16)
          val x84: Boolean = x83 eq null
          val x86: Object = if (x84) {          val x85: Object = throw new NullPointerException()
x85} else {x83}
          val x87: Int = java.lang.reflect.Array.getLength(x86)
          val x88: Unit = block_18(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x87,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x88
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_18(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x89: Boolean = p8_3 eq null
          val x91: Object = if (x89) {          val x90: Object = throw new NullPointerException()
x90} else {p8_3}
          val x92: Int = unsafe.getInt(x91,16)
          val x93: Int = p8_6 + x92
          val x94: Boolean = p8_3 eq null
          val x96: Object = if (x94) {          val x95: Object = throw new NullPointerException()
x95} else {p8_3}
          val x97: Unit = block_19(null,null,null,null,p8_3,x93,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_6,null,null,null,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x97
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_19(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x98: Boolean = p9_3 eq null
          val x100: Object = if (x98) {          val x99: Object = throw new NullPointerException()
x99} else {p9_3}
          val x101: Object = unsafe.getObject(x100,24)
          val x102: Boolean = x101 eq null
          val x104: Object = if (x102) {          val x103: Object = throw new NullPointerException()
x103} else {x101}
          val x105: Int = java.lang.reflect.Array.getLength(x104)
          val x106: Int = -x105
          val x107: Int = x106 + p9_4
          val x108: Boolean = x107 <= 0
          val x111: Unit = if (x108) {          val x109: Unit = block_20(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x109} else {          val x110: Unit = block_21(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x110}
x111
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_20(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x112: Unit = block_22(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x112
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_21(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x113: Boolean = p9_3 eq null
          val x115: Object = if (x113) {          val x114: Object = throw new NullPointerException()
x114} else {p9_3}
          val x116: Unit = CONST_5.invoke(p9_3.asInstanceOf[AnyRef],p9_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x117: Unit = block_20(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x117
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_22(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x118: Boolean = p8_3 eq null
          val x120: Object = if (x118) {          val x119: Object = throw new NullPointerException()
x119} else {p8_3}
          val x121: Object = unsafe.getObject(x120,24)
          val x122: Boolean = p8_3 eq null
          val x124: Object = if (x122) {          val x123: Object = throw new NullPointerException()
x123} else {p8_3}
          val x125: Int = unsafe.getInt(x124,16)
          val x126: Boolean = p8_4 eq null
          val x128: Object = if (x126) {          val x127: Object = throw new NullPointerException()
x127} else {p8_4}
          val x129: Unit = block_23(null,null,null,null,p8_4,0,p8_5,x121,x125,null,null,null,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x129
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_23(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x130: Boolean = p9_4 >= 0
          val x133: Unit = if (x130) {          val x131: Unit = block_24(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x131} else {          val x132: Unit = block_25(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x132}
x133
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_24(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x134: Boolean = p9_3 eq null
          val x136: Object = if (x134) {          val x135: Object = throw new NullPointerException()
x135} else {p9_3}
          val x137: Object = unsafe.getObject(x136,16)
          val x138: Boolean = x137 eq null
          val x140: Object = if (x138) {          val x139: Object = throw new NullPointerException()
x139} else {x137}
          val x141: Int = java.lang.reflect.Array.getLength(x140)
          val x142: Boolean = x141 >= p9_5
          val x145: Unit = if (x142) {          val x143: Unit = block_26(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x143} else {          val x144: Unit = block_27(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x144}
x145
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_25(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x146: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x147: Boolean = x146 eq null
          val x149: Object = if (x147) {          val x148: Object = throw new NullPointerException()
x148} else {x146}
          val x150: Unit = block_28(null,null,null,null,x146,p9_4,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x146,null,null,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x150
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_26(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x151: Boolean = p9_5 >= p9_4
          val x154: Unit = if (x151) {          val x152: Unit = block_29(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x152} else {          val x153: Unit = block_30(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x153}
x154
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_27(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x155: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x156: Boolean = x155 eq null
          val x158: Object = if (x156) {          val x157: Object = throw new NullPointerException()
x157} else {x155}
          val x159: Unit = block_31(null,null,null,null,x155,p9_5,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x155,null,null,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x159
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_28(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x160: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x161: Boolean = x160 eq null
          val x163: Object = if (x161) {          val x162: Object = throw new NullPointerException()
x162} else {x160}
          val x164: Unit = block_32(null,null,null,null,x160,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x160,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x164
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_29(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x165: Boolean = p9_3 eq null
          val x167: Object = if (x165) {          val x166: Object = throw new NullPointerException()
x166} else {p9_3}
          val x168: Object = unsafe.getObject(x167,16)
          val x169: Int = -p9_4
          val x170: Int = x169 + p9_5
          val x171: Unit = java.lang.System.arraycopy(x168,p9_4,p9_6,p9_7,x170).asInstanceOf[Object]
          val x172: Unit = block_33(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,null,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x172
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_30(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x173: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x174: Int = -p9_4
          val x175: Int = x174 + p9_5
          val x176: Boolean = x173 eq null
          val x178: Object = if (x176) {          val x177: Object = throw new NullPointerException()
x177} else {x173}
          val x179: Unit = block_34(null,null,null,null,x173,x175,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x173,null,null,null,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x179
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_31(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x180: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x181: Boolean = x180 eq null
          val x183: Object = if (x181) {          val x182: Object = throw new NullPointerException()
x182} else {x180}
          val x184: Unit = block_35(null,null,null,null,x180,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x180,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x184
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_32(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x185: Boolean = p11_3 eq null
          val x187: Object = if (x185) {          val x186: Object = throw new NullPointerException()
x186} else {p11_3}
          val x188: Unit = block_36(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x188
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_33(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x189: Unit = block_37(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x189
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_34(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x190: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x191: Boolean = x190 eq null
          val x193: Object = if (x191) {          val x192: Object = throw new NullPointerException()
x192} else {x190}
          val x194: Unit = block_38(null,null,null,null,x190,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x190,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x194
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_35(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x195: Boolean = p11_3 eq null
          val x197: Object = if (x195) {          val x196: Object = throw new NullPointerException()
x196} else {p11_3}
          val x198: Unit = block_39(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x198
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_36(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x199: Boolean = p12_3 eq null
          val x201: Object = if (x199) {          val x200: Object = throw new NullPointerException()
x200} else {p12_3}
          val x202: Unit = block_40(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x202
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_37(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x203: Boolean = p8_3 eq null
          val x205: Object = if (x203) {          val x204: Object = throw new NullPointerException()
x204} else {p8_3}
          val x206: Int = unsafe.getInt(x205,16)
          val x207: Int = p8_5 + x206
          val x208: Boolean = p8_3 eq null
          val x210: Object = if (x208) {          val x209: Object = throw new NullPointerException()
x209} else {p8_3}
          val x211: Unit = unsafe.putInt(x210,16, x207)
          val x212: Unit = block_41(r,p7_0,p7_1,p7_2,p7_3,p7_4,p8_3,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x212
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_38(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x213: Boolean = p11_3 eq null
          val x215: Object = if (x213) {          val x214: Object = throw new NullPointerException()
x214} else {p11_3}
          val x216: Unit = block_42(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x216
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_39(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x217: Boolean = p12_3 eq null
          val x219: Object = if (x217) {          val x218: Object = throw new NullPointerException()
x218} else {p12_3}
          val x220: Unit = block_43(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x220
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_40(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x221: Unit = block_44(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x221
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_41(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Object,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x222: Unit = block_45(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p7_3,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x222
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_42(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x223: Boolean = p12_3 eq null
          val x225: Object = if (x223) {          val x224: Object = throw new NullPointerException()
x224} else {p12_3}
          val x226: Unit = block_46(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x226
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_43(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x227: Unit = block_47(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x227
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_44(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x228: Object = new Array[char](p12_4)
          val x229: Boolean = p12_3 eq null
          val x231: Object = if (x229) {          val x230: Object = throw new NullPointerException()
x230} else {p12_3}
          val x232: Unit = unsafe.putObject(x231,24, x228)
          val x233: Unit = block_48(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x233
}
// *** begin block 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_45(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x234: Boolean = p6_6 eq null
          val x236: Object = if (x234) {          val x235: Object = throw new NullPointerException()
x235} else {p6_6}
          val x237: Unit = block_49(null,null,null,null,p6_6,p6_7,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,null,null,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x237
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_46(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x238: Unit = block_50(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x238
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_47(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x239: Object = new Array[char](p12_4)
          val x240: Boolean = p12_3 eq null
          val x242: Object = if (x240) {          val x241: Object = throw new NullPointerException()
x241} else {p12_3}
          val x243: Unit = unsafe.putObject(x242,24, x239)
          val x244: Unit = block_51(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x244
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_48(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x245: Unit = block_52(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x245
}
// *** begin block 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_49(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x246: Boolean = p7_3 eq null
          val x248: Object = if (x246) {          val x247: Object = throw new NullPointerException()
x247} else {p7_3}
          val x249: Unit = unsafe.putObject(x248,16, p7_4)
          val x250: Boolean = p7_3 eq null
          val x252: Object = if (x250) {          val x251: Object = throw new NullPointerException()
x251} else {p7_3}
          val x253: Unit = block_53(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x253
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_50(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x254: Object = new Array[char](p12_4)
          val x255: Boolean = p12_3 eq null
          val x257: Object = if (x255) {          val x256: Object = throw new NullPointerException()
x256} else {p12_3}
          val x258: Unit = unsafe.putObject(x257,24, x254)
          val x259: Unit = block_54(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x259
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_51(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x260: Unit = block_55(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x260
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_52(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x261: Boolean = p10_6 eq null
          val x263: Object = if (x261) {          val x262: Object = throw new NullPointerException()
x262} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x264: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x264
}
// *** begin block 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_53(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x265: Unit = block_56(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x265
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_54(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x266: Unit = block_57(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x266
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_55(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x267: Boolean = p10_6 eq null
          val x269: Object = if (x267) {          val x268: Object = throw new NullPointerException()
x268} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x270: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x270
}
// *** begin block 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_56(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x271: Unit = block_58(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x271
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_57(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x272: Boolean = p10_6 eq null
          val x274: Object = if (x272) {          val x273: Object = throw new NullPointerException()
x273} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x275: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x275
}
// *** begin block 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_58(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x276: Unit = block_59(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x276
}
// *** begin block 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_59(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x277: Unit = block_60(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x277
}
// *** begin block 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_60(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x278: Unit = block_61(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x278
}
// *** begin block 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_61(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x279: Unit = block_62(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x279
}
// *** begin block 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_62(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x280: Unit = block_63(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x280
}
// *** begin block 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_63(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x281: Unit = block_64(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x281
}
// *** begin block 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_64(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x282: Unit = block_65(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x282
}
// *** begin block 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_65(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x283: Unit = block_66(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x283
}
// *** begin block 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_66(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x284: Unit = block_67(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x284
}
// *** begin block 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_67(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x285: Unit = block_68(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x285
}
// *** begin block 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_68(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x286: Unit = block_69(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x286
}
// *** begin block 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_69(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x287: Unit = block_70(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x287
}
// *** begin block 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_70(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x288: Unit = block_71(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x288
}
// *** begin block 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_71(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x289: Unit = block_72(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x289
}
// *** begin block 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_72(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x290: Unit = block_73(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x290
}
// *** begin block 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_73(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x291: Unit = block_74(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x291
}
// *** begin block 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_74(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x292: Unit = block_75(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x292
}
// *** begin block 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_75(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x293: Unit = block_76(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x293
}
// *** begin block 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_76(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x294: Unit = block_77(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x294
}
// *** begin block 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_77(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x295: Unit = block_78(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x295
}
// *** begin block 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_78(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x296: Unit = block_79(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x296
}
// *** begin block 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_79(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x297: Unit = block_80(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x297
}
// *** begin block 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_80(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x298: Unit = block_81(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x298
}
// *** begin block 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_81(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x299: Unit = block_82(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x299
}
// *** begin block 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_82(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x300: Unit = block_83(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x300
}
// *** begin block 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_83(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x301: Unit = block_84(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x301
}
// *** begin block 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_84(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x302: Unit = block_85(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x302
}
// *** begin block 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_85(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x303: Unit = block_86(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x303
}
// *** begin block 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_86(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x304: Unit = block_87(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x304
}
// *** begin block 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_87(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x305: Unit = block_88(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x305
}
// *** begin block 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_88(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x306: Unit = block_89(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x306
}
// *** begin block 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_89(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x307: Unit = block_90(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x307
}
// *** begin block 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_90(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x308: Unit = block_91(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x308
}
// *** begin block 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_91(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x309: Unit = block_92(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x309
}
// *** begin block 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_92(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x310: Unit = block_93(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x310
}
// *** begin block 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_93(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x311: Unit = block_94(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x311
}
// *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_94(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x312: Unit = block_95(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x312
}
// *** begin block 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_95(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x313: Unit = block_96(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x313
}
// *** begin block 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_96(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x314: Unit = block_97(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x314
}
// *** begin block 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_97(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x315: Unit = block_98(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x315
}
// *** begin block 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_98(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x316: Unit = block_99(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x316
}
// *** begin block 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_99(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x317: Unit = block_100(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x317
}
// *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_100(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x318: Unit = block_101(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x318
}
// *** begin block 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_101(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x319: Unit = block_102(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x319
}
// *** begin block 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_102(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x320: Unit = block_103(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x320
}
// *** begin block 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_103(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x321: Unit = block_104(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x321
}
// *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_104(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x322: Unit = block_105(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x322
}
// *** begin block 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_105(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x323: Unit = block_106(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x323
}
// *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_106(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x324: Unit = block_107(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x324
}
// *** begin block 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_107(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x325: Unit = block_108(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x325
}
// *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_108(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x326: Unit = block_109(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x326
}
// *** begin block 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_109(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x327: Unit = block_110(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x327
}
// *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_110(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x328: Unit = block_111(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x328
}
// *** begin block 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_111(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x329: Unit = block_112(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x329
}
// *** begin block 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_112(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x330: Unit = block_113(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x330
}
// *** begin block 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_113(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x331: Unit = block_114(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x331
}
// *** begin block 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_114(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x332: Unit = block_115(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x332
}
// *** begin block 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_115(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x333: Unit = block_116(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x333
}
// *** begin block 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_116(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x334: Unit = block_117(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x334
}
// *** begin block 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_117(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x335: Unit = block_118(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x335
}
// *** begin block 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_118(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x336: Unit = block_119(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x336
}
// *** begin block 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_119(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x337: Unit = block_120(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x337
}
// *** begin block 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_120(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x338: Unit = block_121(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x338
}
// *** begin block 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_121(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x339: Unit = block_122(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x339
}
// *** begin block 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_122(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x340: Unit = block_123(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x340
}
// *** begin block 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_123(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x341: Unit = block_124(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x341
}
// *** begin block 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_124(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x342: Boolean = p4_6 eq null
          val x344: Object = if (x342) {          val x343: Object = throw new NullPointerException()
x343} else {p4_6}
          val x345: Unit = block_125(null,null,null,null,p4_6,"hello: ",null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x345
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_125(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x346: Boolean = p5_3 eq null
          val x348: Object = if (x346) {          val x347: Object = throw new NullPointerException()
x347} else {p5_3}
          val x349: Unit = block_126(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x349
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_126(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x350: Boolean = p6_3 eq null
          val x352: Object = if (x350) {          val x351: Object = throw new NullPointerException()
x351} else {p6_3}
          val x353: Object = unsafe.getObject(x352,16)
          val x354: Unit = block_127(r,p5_0,p5_1,p5_2,p5_3,p5_4,x353,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x354
}
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_127(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x355: Unit = block_128(null,null,null,null,p5_4,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x355
}
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_128(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x358: Unit = if (CONST_4) {          val x356: Unit = block_129(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x356} else {          val x357: Unit = block_130(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x357}
x358
}
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_129(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x359: Boolean = p6_3 eq null
          val x361: Object = if (x359) {          val x360: Object = throw new NullPointerException()
x360} else {p6_3}
          val x362: Object = CONST_6.invoke(p6_3) // java.lang.Object.toString
          val x363: Unit = block_131(r,p6_0,p6_1,p6_2,p6_3,x362,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x363
}
// *** begin block 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_130(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x364: Unit = block_131(r,p6_0,p6_1,p6_2,p6_3,"null",p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x364
}
// *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_131(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x365: Unit = block_132(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x365
}
// *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_132(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x366: Boolean = p5_5 eq null
          val x368: Object = if (x366) {          val x367: Object = throw new NullPointerException()
x367} else {p5_5}
          val x369: Unit = block_133(null,null,null,null,p5_5,p5_6,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x369
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_133(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x370: Boolean = p6_3 eq null
          val x372: Object = if (x370) {          val x371: Object = throw new NullPointerException()
x371} else {p6_3}
          val x373: Unit = block_134(null,null,null,null,p6_3,p6_4,null,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x373
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_134(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x376: Unit = if (CONST_4) {          val x374: Unit = block_135(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x374} else {          val x375: Unit = block_136(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x375}
x376
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_135(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x377: Boolean = p7_4 eq null
          val x379: Object = if (x377) {          val x378: Object = throw new NullPointerException()
x378} else {p7_4}
          val x380: Unit = block_137(null,null,null,null,p7_4,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x380
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_136(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x381: Boolean = "null" eq null
          val x383: Object = if (x381) {          val x382: Object = throw new NullPointerException()
x382} else {"null"}
          val x384: Unit = block_137(null,null,null,null,"null",null,p7_0,p7_1,p7_2,p7_3,"null",p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x384
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_137(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x385: Boolean = p8_3 eq null
          val x387: Object = if (x385) {          val x386: Object = throw new NullPointerException()
x386} else {p8_3}
          val x388: Object = unsafe.getObject(x387,16)
          val x389: Boolean = x388 eq null
          val x391: Object = if (x389) {          val x390: Object = throw new NullPointerException()
x390} else {x388}
          val x392: Int = java.lang.reflect.Array.getLength(x391)
          val x393: Unit = block_138(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,x392,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x393
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_138(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x394: Boolean = p7_3 eq null
          val x396: Object = if (x394) {          val x395: Object = throw new NullPointerException()
x395} else {p7_3}
          val x397: Int = unsafe.getInt(x396,16)
          val x398: Int = p7_6 + x397
          val x399: Boolean = p7_3 eq null
          val x401: Object = if (x399) {          val x400: Object = throw new NullPointerException()
x400} else {p7_3}
          val x402: Unit = block_139(null,null,null,null,p7_3,x398,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_6,null,null,null,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x402
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_139(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x403: Boolean = p8_3 eq null
          val x405: Object = if (x403) {          val x404: Object = throw new NullPointerException()
x404} else {p8_3}
          val x406: Object = unsafe.getObject(x405,24)
          val x407: Boolean = x406 eq null
          val x409: Object = if (x407) {          val x408: Object = throw new NullPointerException()
x408} else {x406}
          val x410: Int = java.lang.reflect.Array.getLength(x409)
          val x411: Int = -x410
          val x412: Int = x411 + p8_4
          val x413: Boolean = x412 <= 0
          val x416: Unit = if (x413) {          val x414: Unit = block_140(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x414} else {          val x415: Unit = block_141(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x415}
x416
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_140(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x417: Unit = block_142(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x417
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_141(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x418: Boolean = p8_3 eq null
          val x420: Object = if (x418) {          val x419: Object = throw new NullPointerException()
x419} else {p8_3}
          val x421: Unit = CONST_5.invoke(p8_3.asInstanceOf[AnyRef],p8_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x422: Unit = block_140(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x422
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_142(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x423: Boolean = p7_3 eq null
          val x425: Object = if (x423) {          val x424: Object = throw new NullPointerException()
x424} else {p7_3}
          val x426: Object = unsafe.getObject(x425,24)
          val x427: Boolean = p7_3 eq null
          val x429: Object = if (x427) {          val x428: Object = throw new NullPointerException()
x428} else {p7_3}
          val x430: Int = unsafe.getInt(x429,16)
          val x431: Boolean = p7_4 eq null
          val x433: Object = if (x431) {          val x432: Object = throw new NullPointerException()
x432} else {p7_4}
          val x434: Unit = block_143(null,null,null,null,p7_4,0,p7_5,x426,x430,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x434
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_143(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x435: Boolean = p8_4 >= 0
          val x438: Unit = if (x435) {          val x436: Unit = block_144(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x436} else {          val x437: Unit = block_145(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x437}
x438
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_144(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x439: Boolean = p8_3 eq null
          val x441: Object = if (x439) {          val x440: Object = throw new NullPointerException()
x440} else {p8_3}
          val x442: Object = unsafe.getObject(x441,16)
          val x443: Boolean = x442 eq null
          val x445: Object = if (x443) {          val x444: Object = throw new NullPointerException()
x444} else {x442}
          val x446: Int = java.lang.reflect.Array.getLength(x445)
          val x447: Boolean = x446 >= p8_5
          val x450: Unit = if (x447) {          val x448: Unit = block_146(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x448} else {          val x449: Unit = block_147(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x449}
x450
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_145(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x451: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x452: Boolean = x451 eq null
          val x454: Object = if (x452) {          val x453: Object = throw new NullPointerException()
x453} else {x451}
          val x455: Unit = block_148(null,null,null,null,x451,p8_4,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x451,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x455
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_146(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x456: Boolean = p8_5 >= p8_4
          val x459: Unit = if (x456) {          val x457: Unit = block_149(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x457} else {          val x458: Unit = block_150(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x458}
x459
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_147(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x460: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x461: Boolean = x460 eq null
          val x463: Object = if (x461) {          val x462: Object = throw new NullPointerException()
x462} else {x460}
          val x464: Unit = block_151(null,null,null,null,x460,p8_5,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x460,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x464
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_148(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x465: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x466: Boolean = x465 eq null
          val x468: Object = if (x466) {          val x467: Object = throw new NullPointerException()
x467} else {x465}
          val x469: Unit = block_152(null,null,null,null,x465,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x465,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x469
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_149(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x470: Boolean = p8_3 eq null
          val x472: Object = if (x470) {          val x471: Object = throw new NullPointerException()
x471} else {p8_3}
          val x473: Object = unsafe.getObject(x472,16)
          val x474: Int = -p8_4
          val x475: Int = x474 + p8_5
          val x476: Unit = java.lang.System.arraycopy(x473,p8_4,p8_6,p8_7,x475).asInstanceOf[Object]
          val x477: Unit = block_153(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x477
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_150(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x478: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x479: Int = -p8_4
          val x480: Int = x479 + p8_5
          val x481: Boolean = x478 eq null
          val x483: Object = if (x481) {          val x482: Object = throw new NullPointerException()
x482} else {x478}
          val x484: Unit = block_154(null,null,null,null,x478,x480,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x478,null,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x484
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_151(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x485: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x486: Boolean = x485 eq null
          val x488: Object = if (x486) {          val x487: Object = throw new NullPointerException()
x487} else {x485}
          val x489: Unit = block_155(null,null,null,null,x485,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x485,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x489
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_152(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x490: Boolean = p10_3 eq null
          val x492: Object = if (x490) {          val x491: Object = throw new NullPointerException()
x491} else {p10_3}
          val x493: Unit = block_156(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x493
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_153(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x494: Unit = block_157(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x494
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_154(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x495: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x496: Boolean = x495 eq null
          val x498: Object = if (x496) {          val x497: Object = throw new NullPointerException()
x497} else {x495}
          val x499: Unit = block_158(null,null,null,null,x495,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x495,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x499
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_155(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x500: Boolean = p10_3 eq null
          val x502: Object = if (x500) {          val x501: Object = throw new NullPointerException()
x501} else {p10_3}
          val x503: Unit = block_159(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x503
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_156(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x504: Boolean = p11_3 eq null
          val x506: Object = if (x504) {          val x505: Object = throw new NullPointerException()
x505} else {p11_3}
          val x507: Unit = block_160(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x507
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_157(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x508: Boolean = p7_3 eq null
          val x510: Object = if (x508) {          val x509: Object = throw new NullPointerException()
x509} else {p7_3}
          val x511: Int = unsafe.getInt(x510,16)
          val x512: Int = p7_5 + x511
          val x513: Boolean = p7_3 eq null
          val x515: Object = if (x513) {          val x514: Object = throw new NullPointerException()
x514} else {p7_3}
          val x516: Unit = unsafe.putInt(x515,16, x512)
          val x517: Unit = block_161(r,p6_0,p6_1,p6_2,p6_3,p6_4,p7_3,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x517
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_158(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x518: Boolean = p10_3 eq null
          val x520: Object = if (x518) {          val x519: Object = throw new NullPointerException()
x519} else {p10_3}
          val x521: Unit = block_162(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x521
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_159(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x522: Boolean = p11_3 eq null
          val x524: Object = if (x522) {          val x523: Object = throw new NullPointerException()
x523} else {p11_3}
          val x525: Unit = block_163(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x525
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_160(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x526: Unit = block_164(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x526
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_161(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Object,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x527: Unit = block_165(r,p5_0,p5_1,p5_2,p5_3,p5_4,p6_3,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x527
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_162(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x528: Boolean = p11_3 eq null
          val x530: Object = if (x528) {          val x529: Object = throw new NullPointerException()
x529} else {p11_3}
          val x531: Unit = block_166(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x531
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_163(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x532: Unit = block_167(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x532
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_164(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x533: Object = new Array[char](p11_4)
          val x534: Boolean = p11_3 eq null
          val x536: Object = if (x534) {          val x535: Object = throw new NullPointerException()
x535} else {p11_3}
          val x537: Unit = unsafe.putObject(x536,24, x533)
          val x538: Unit = block_168(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x538
}
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_165(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x539: Unit = block_169(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_3,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x539
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_166(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x540: Unit = block_170(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x540
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_167(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x541: Object = new Array[char](p11_4)
          val x542: Boolean = p11_3 eq null
          val x544: Object = if (x542) {          val x543: Object = throw new NullPointerException()
x543} else {p11_3}
          val x545: Unit = unsafe.putObject(x544,24, x541)
          val x546: Unit = block_171(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x546
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_168(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x547: Unit = block_172(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x547
}
// *** begin block 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_169(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x548: Unit = block_173(null,null,null,null,p4_4,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x548
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_170(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x549: Object = new Array[char](p11_4)
          val x550: Boolean = p11_3 eq null
          val x552: Object = if (x550) {          val x551: Object = throw new NullPointerException()
x551} else {p11_3}
          val x553: Unit = unsafe.putObject(x552,24, x549)
          val x554: Unit = block_174(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x554
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_171(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x555: Unit = block_175(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x555
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_172(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x556: Boolean = p9_6 eq null
          val x558: Object = if (x556) {          val x557: Object = throw new NullPointerException()
x557} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x559: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x559
}
// *** begin block 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_173(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x560: Unit = block_176(null,null,null,null,p5_3,null,null,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x560
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_174(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x561: Unit = block_177(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x561
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_175(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x562: Boolean = p9_6 eq null
          val x564: Object = if (x562) {          val x563: Object = throw new NullPointerException()
x563} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x565: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x565
}
// *** begin block 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_176(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x566: Boolean = unsafe.getBoolean(Class.forName("java.lang.Integer"),260)
          val x567: Int = if (x566) {1} else {0}
          val x570: Unit = if (CONST_4) {          val x568: Unit = block_178(r,p6_0,p6_1,p6_2,p6_3,null,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x568} else {          val x569: Unit = block_179(r,p6_0,p6_1,p6_2,p6_3,null,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x569}
x570
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_177(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x571: Boolean = p9_6 eq null
          val x573: Object = if (x571) {          val x572: Object = throw new NullPointerException()
x572} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x574: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x574
}
// *** begin block 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_178(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x575: Boolean = -128 > p6_3
          val x578: Unit = if (x575) {          val x576: Unit = block_180(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x576} else {          val x577: Unit = block_181(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x577}
x578
}
// *** begin block 6:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_179(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x579: Int = unsafe.getInt(Class.forName("java.lang.Integer$IntegerCache"),212)
          val x580: Boolean = 127 <= x579
          val x583: Unit = if (x580) {          val x581: Unit = block_178(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x581} else {          val x582: Unit = block_182(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 14:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x582}
x583
}
// *** begin block 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_180(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x584: Object = unsafe.allocateInstance(classOf[java.lang.Integer])
          val x585: Boolean = x584 eq null
          val x587: Object = if (x585) {          val x586: Object = throw new NullPointerException()
x586} else {x584}
          val x588: Unit = block_183(null,null,null,null,x584,p6_3,null,null,p6_0,p6_1,p6_2,p6_3,x584,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x588
}
// *** begin block 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_181(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x589: Int = unsafe.getInt(Class.forName("java.lang.Integer$IntegerCache"),212)
          val x590: Boolean = x589 < p6_3
          val x593: Unit = if (x590) {          val x591: Unit = block_180(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x591} else {          val x592: Unit = block_184(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x592}
x593
}
// *** begin block 14:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_182(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x594: Object = unsafe.allocateInstance(classOf[java.lang.AssertionError])
          val x595: Boolean = x594 eq null
          val x597: Object = if (x595) {          val x596: Object = throw new NullPointerException()
x596} else {x594}
          val x598: Unit = block_185(null,null,null,null,x594,null,p6_0,p6_1,p6_2,p6_3,x594,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x598
}
// *** begin block 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_183(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x599: Boolean = p7_3 eq null
          val x601: Object = if (x599) {          val x600: Object = throw new NullPointerException()
x600} else {p7_3}
          val x602: Unit = block_186(null,null,null,null,p7_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x602
}
// *** begin block 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_184(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x603: Object = unsafe.getObject(Class.forName("java.lang.Integer$IntegerCache"),200)
          val x604: Int = 128 + p6_3
          val x605: Long = x604.toLong
          val x606: Boolean = x603 eq null
          val x608: Object = if (x606) {          val x607: Object = throw new NullPointerException()
x607} else {x603}
          val x609: java.lang.Class[_ <: Any] = x603.getClass()
          val x610: Boolean = !x609.isArray()
          val x612: Unit = if (x610) {          val x611: Unit = throw new ArrayStoreException(x609.getName())
x611} else {()}
          val x613: Boolean = x605 < 0
          val x617: Boolean = if (x613) {x613} else {          val x614: Int = java.lang.reflect.Array.getLength(x603)
          val x615: Long = x614.toLong
          val x616: Boolean = x605 >= x615
x616}
          val x620: Unit = if (x617) {          val x618: Int = x605.toInt
          val x619: Unit = throw new ArrayIndexOutOfBoundsException(x618)
x619} else {()}
          val x621: Long = 8 * x605
          val x622: Long = 24 + x621
          val x623: Object = unsafe.getObject(x603,x622)
          val x624: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,x623,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x624
}
// *** begin block 0:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_185(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x625: Boolean = p7_3 eq null
          val x627: Object = if (x625) {          val x626: Object = throw new NullPointerException()
x626} else {p7_3}
          val x628: Unit = block_188(null,null,null,null,p7_3,null,p7_0,p7_1,p7_2,p7_3,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x628
}
// *** begin block 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_186(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x629: Boolean = p8_3 eq null
          val x631: Object = if (x629) {          val x630: Object = throw new NullPointerException()
x630} else {p8_3}
          val x632: Unit = block_189(null,null,null,null,p8_3,p8_0,p8_1,p8_2,p8_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x632
}
// *** begin block 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_187(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x633: Unit = block_190(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p5_4,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x633
}
// *** begin block 0:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_188(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x634: Boolean = p8_3 eq null
          val x636: Object = if (x634) {          val x635: Object = throw new NullPointerException()
x635} else {p8_3}
          val x637: Unit = block_191(null,null,null,null,p8_3,null,null,p8_0,p8_1,p8_2,p8_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x637
}
// *** begin block 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_189(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x638: Unit = block_192(r,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x638
}
// *** begin block 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_190(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Object,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x639: Boolean = p4_6 eq null
          val x641: Object = if (x639) {          val x640: Object = throw new NullPointerException()
x640} else {p4_6}
          val x642: Unit = block_193(null,null,null,null,p4_6,p4_7,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x642
}
// *** begin block 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_191(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x643: Boolean = p9_3 eq null
          val x645: Object = if (x643) {          val x644: Object = throw new NullPointerException()
x644} else {p9_3}
          val x646: Unit = block_194(null,null,null,null,p9_3,p9_0,p9_1,p9_2,p9_3,null,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x646
}
// *** begin block 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_192(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x647: Unit = block_195(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x647
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_193(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x648: Boolean = p5_3 eq null
          val x650: Object = if (x648) {          val x649: Object = throw new NullPointerException()
x649} else {p5_3}
          val x651: Unit = block_196(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x651
}
// *** begin block 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_194(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x652: Unit = block_197(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x652
}
// *** begin block 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_195(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x653: Boolean = p7_3 eq null
          val x655: Object = if (x653) {          val x654: Object = throw new NullPointerException()
x654} else {p7_3}
          val x656: Unit = unsafe.putInt(x655,16, p7_4)
          val x657: Unit = block_198(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x657
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_196(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x658: Boolean = p6_3 eq null
          val x660: Object = if (x658) {          val x659: Object = throw new NullPointerException()
x659} else {p6_3}
          val x661: Object = unsafe.getObject(x660,16)
          val x662: Unit = block_199(r,p5_0,p5_1,p5_2,p5_3,p5_4,x661,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x662
}
// *** begin block 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_197(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x663: Boolean = p9_3 eq null
          val x665: Object = if (x663) {          val x664: Object = throw new NullPointerException()
x664} else {p9_3}
          val x666: Unit = unsafe.putObject(x665,32, p9_3)
          val x667: Object = unsafe.getObject(Class.forName("java.lang.Throwable"),200)
          val x668: Boolean = p9_3 eq null
          val x670: Object = if (x668) {          val x669: Object = throw new NullPointerException()
x669} else {p9_3}
          val x671: Unit = unsafe.putObject(x670,40, x667)
          val x672: Object = unsafe.getObject(Class.forName("java.lang.Throwable"),208)
          val x673: Boolean = p9_3 eq null
          val x675: Object = if (x673) {          val x674: Object = throw new NullPointerException()
x674} else {p9_3}
          val x676: Unit = unsafe.putObject(x675,48, x672)
          val x677: Boolean = p9_3 eq null
          val x679: Object = if (x677) {          val x678: Object = throw new NullPointerException()
x678} else {p9_3}
          val x680: Object = CONST_7.invoke(p9_3) // java.lang.Throwable.fillInStackTrace
          val x681: Unit = block_200(r,p9_0,p9_1,p9_2,p9_3,x680,null,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x681
}
// *** begin block 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_198(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x682: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x682
}
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_199(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x683: Unit = block_201(null,null,null,null,p5_4,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x683
}
// *** begin block 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_200(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x684: Unit = block_202(r,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x684
}
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_201(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x687: Unit = if (CONST_4) {          val x685: Unit = block_203(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x685} else {          val x686: Unit = block_204(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x686}
x687
}
// *** begin block 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_202(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x688: Unit = block_205(r,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x688
}
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_203(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x689: Boolean = p6_3 eq null
          val x691: Object = if (x689) {          val x690: Object = throw new NullPointerException()
x690} else {p6_3}
          val x692: Object = CONST_6.invoke(p6_3) // java.lang.Object.toString
          val x693: Unit = block_206(r,p6_0,p6_1,p6_2,p6_3,x692,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x693
}
// *** begin block 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_204(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x694: Unit = block_206(r,p6_0,p6_1,p6_2,p6_3,"null",p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x694
}
// *** begin block 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_205(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x695: Unit = block_207(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x695
}
// *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_206(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x696: Unit = block_208(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x696
}
// *** begin block 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_207(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x697: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x697
}
// *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_208(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x698: Boolean = p5_5 eq null
          val x700: Object = if (x698) {          val x699: Object = throw new NullPointerException()
x699} else {p5_5}
          val x701: Unit = block_209(null,null,null,null,p5_5,p5_6,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x701
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_209(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x702: Boolean = p6_3 eq null
          val x704: Object = if (x702) {          val x703: Object = throw new NullPointerException()
x703} else {p6_3}
          val x705: Unit = block_210(null,null,null,null,p6_3,p6_4,null,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x705
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_210(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x708: Unit = if (CONST_4) {          val x706: Unit = block_211(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x706} else {          val x707: Unit = block_212(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x707}
x708
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_211(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x709: Boolean = p7_4 eq null
          val x711: Object = if (x709) {          val x710: Object = throw new NullPointerException()
x710} else {p7_4}
          val x712: Unit = block_213(null,null,null,null,p7_4,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x712
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_212(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x713: Boolean = "null" eq null
          val x715: Object = if (x713) {          val x714: Object = throw new NullPointerException()
x714} else {"null"}
          val x716: Unit = block_213(null,null,null,null,"null",null,p7_0,p7_1,p7_2,p7_3,"null",p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x716
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_213(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x717: Boolean = p8_3 eq null
          val x719: Object = if (x717) {          val x718: Object = throw new NullPointerException()
x718} else {p8_3}
          val x720: Object = unsafe.getObject(x719,16)
          val x721: Boolean = x720 eq null
          val x723: Object = if (x721) {          val x722: Object = throw new NullPointerException()
x722} else {x720}
          val x724: Int = java.lang.reflect.Array.getLength(x723)
          val x725: Unit = block_214(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,x724,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x725
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_214(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x726: Boolean = p7_3 eq null
          val x728: Object = if (x726) {          val x727: Object = throw new NullPointerException()
x727} else {p7_3}
          val x729: Int = unsafe.getInt(x728,16)
          val x730: Int = p7_6 + x729
          val x731: Boolean = p7_3 eq null
          val x733: Object = if (x731) {          val x732: Object = throw new NullPointerException()
x732} else {p7_3}
          val x734: Unit = block_215(null,null,null,null,p7_3,x730,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_6,null,null,null,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x734
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_215(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x735: Boolean = p8_3 eq null
          val x737: Object = if (x735) {          val x736: Object = throw new NullPointerException()
x736} else {p8_3}
          val x738: Object = unsafe.getObject(x737,24)
          val x739: Boolean = x738 eq null
          val x741: Object = if (x739) {          val x740: Object = throw new NullPointerException()
x740} else {x738}
          val x742: Int = java.lang.reflect.Array.getLength(x741)
          val x743: Int = -x742
          val x744: Int = x743 + p8_4
          val x745: Boolean = x744 <= 0
          val x748: Unit = if (x745) {          val x746: Unit = block_216(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x746} else {          val x747: Unit = block_217(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x747}
x748
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_216(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x749: Unit = block_218(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x749
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_217(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x750: Boolean = p8_3 eq null
          val x752: Object = if (x750) {          val x751: Object = throw new NullPointerException()
x751} else {p8_3}
          val x753: Unit = CONST_5.invoke(p8_3.asInstanceOf[AnyRef],p8_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x754: Unit = block_216(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x754
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_218(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x755: Boolean = p7_3 eq null
          val x757: Object = if (x755) {          val x756: Object = throw new NullPointerException()
x756} else {p7_3}
          val x758: Object = unsafe.getObject(x757,24)
          val x759: Boolean = p7_3 eq null
          val x761: Object = if (x759) {          val x760: Object = throw new NullPointerException()
x760} else {p7_3}
          val x762: Int = unsafe.getInt(x761,16)
          val x763: Boolean = p7_4 eq null
          val x765: Object = if (x763) {          val x764: Object = throw new NullPointerException()
x764} else {p7_4}
          val x766: Unit = block_219(null,null,null,null,p7_4,0,p7_5,x758,x762,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x766
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_219(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x767: Boolean = p8_4 >= 0
          val x770: Unit = if (x767) {          val x768: Unit = block_220(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x768} else {          val x769: Unit = block_221(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x769}
x770
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_220(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x771: Boolean = p8_3 eq null
          val x773: Object = if (x771) {          val x772: Object = throw new NullPointerException()
x772} else {p8_3}
          val x774: Object = unsafe.getObject(x773,16)
          val x775: Boolean = x774 eq null
          val x777: Object = if (x775) {          val x776: Object = throw new NullPointerException()
x776} else {x774}
          val x778: Int = java.lang.reflect.Array.getLength(x777)
          val x779: Boolean = x778 >= p8_5
          val x782: Unit = if (x779) {          val x780: Unit = block_222(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x780} else {          val x781: Unit = block_223(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x781}
x782
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_221(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x783: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x784: Boolean = x783 eq null
          val x786: Object = if (x784) {          val x785: Object = throw new NullPointerException()
x785} else {x783}
          val x787: Unit = block_224(null,null,null,null,x783,p8_4,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x783,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x787
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_222(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x788: Boolean = p8_5 >= p8_4
          val x791: Unit = if (x788) {          val x789: Unit = block_225(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x789} else {          val x790: Unit = block_226(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x790}
x791
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_223(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x792: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x793: Boolean = x792 eq null
          val x795: Object = if (x793) {          val x794: Object = throw new NullPointerException()
x794} else {x792}
          val x796: Unit = block_227(null,null,null,null,x792,p8_5,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x792,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x796
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_224(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x797: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x798: Boolean = x797 eq null
          val x800: Object = if (x798) {          val x799: Object = throw new NullPointerException()
x799} else {x797}
          val x801: Unit = block_228(null,null,null,null,x797,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x797,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x801
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_225(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x802: Boolean = p8_3 eq null
          val x804: Object = if (x802) {          val x803: Object = throw new NullPointerException()
x803} else {p8_3}
          val x805: Object = unsafe.getObject(x804,16)
          val x806: Int = -p8_4
          val x807: Int = x806 + p8_5
          val x808: Unit = java.lang.System.arraycopy(x805,p8_4,p8_6,p8_7,x807).asInstanceOf[Object]
          val x809: Unit = block_229(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x809
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_226(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x810: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x811: Int = -p8_4
          val x812: Int = x811 + p8_5
          val x813: Boolean = x810 eq null
          val x815: Object = if (x813) {          val x814: Object = throw new NullPointerException()
x814} else {x810}
          val x816: Unit = block_230(null,null,null,null,x810,x812,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x810,null,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x816
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_227(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x817: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x818: Boolean = x817 eq null
          val x820: Object = if (x818) {          val x819: Object = throw new NullPointerException()
x819} else {x817}
          val x821: Unit = block_231(null,null,null,null,x817,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x817,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x821
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_228(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x822: Boolean = p10_3 eq null
          val x824: Object = if (x822) {          val x823: Object = throw new NullPointerException()
x823} else {p10_3}
          val x825: Unit = block_232(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x825
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_229(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x826: Unit = block_233(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x826
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_230(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x827: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x828: Boolean = x827 eq null
          val x830: Object = if (x828) {          val x829: Object = throw new NullPointerException()
x829} else {x827}
          val x831: Unit = block_234(null,null,null,null,x827,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x827,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x831
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_231(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x832: Boolean = p10_3 eq null
          val x834: Object = if (x832) {          val x833: Object = throw new NullPointerException()
x833} else {p10_3}
          val x835: Unit = block_235(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x835
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_232(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x836: Boolean = p11_3 eq null
          val x838: Object = if (x836) {          val x837: Object = throw new NullPointerException()
x837} else {p11_3}
          val x839: Unit = block_236(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x839
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_233(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x840: Boolean = p7_3 eq null
          val x842: Object = if (x840) {          val x841: Object = throw new NullPointerException()
x841} else {p7_3}
          val x843: Int = unsafe.getInt(x842,16)
          val x844: Int = p7_5 + x843
          val x845: Boolean = p7_3 eq null
          val x847: Object = if (x845) {          val x846: Object = throw new NullPointerException()
x846} else {p7_3}
          val x848: Unit = unsafe.putInt(x847,16, x844)
          val x849: Unit = block_237(r,p6_0,p6_1,p6_2,p6_3,p6_4,p7_3,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x849
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_234(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x850: Boolean = p10_3 eq null
          val x852: Object = if (x850) {          val x851: Object = throw new NullPointerException()
x851} else {p10_3}
          val x853: Unit = block_238(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x853
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_235(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x854: Boolean = p11_3 eq null
          val x856: Object = if (x854) {          val x855: Object = throw new NullPointerException()
x855} else {p11_3}
          val x857: Unit = block_239(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x857
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_236(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x858: Unit = block_240(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x858
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_237(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Object,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x859: Unit = block_241(r,p5_0,p5_1,p5_2,p5_3,p5_4,p6_3,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x859
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_238(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x860: Boolean = p11_3 eq null
          val x862: Object = if (x860) {          val x861: Object = throw new NullPointerException()
x861} else {p11_3}
          val x863: Unit = block_242(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x863
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_239(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x864: Unit = block_243(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x864
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_240(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x865: Object = new Array[char](p11_4)
          val x866: Boolean = p11_3 eq null
          val x868: Object = if (x866) {          val x867: Object = throw new NullPointerException()
x867} else {p11_3}
          val x869: Unit = unsafe.putObject(x868,24, x865)
          val x870: Unit = block_244(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x870
}
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_241(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x871: Unit = block_245(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_3,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x871
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_242(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x872: Unit = block_246(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x872
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_243(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x873: Object = new Array[char](p11_4)
          val x874: Boolean = p11_3 eq null
          val x876: Object = if (x874) {          val x875: Object = throw new NullPointerException()
x875} else {p11_3}
          val x877: Unit = unsafe.putObject(x876,24, x873)
          val x878: Unit = block_247(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x878
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_244(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x879: Unit = block_248(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x879
}
// *** begin block 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_245(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x880: Boolean = p4_6 eq null
          val x882: Object = if (x880) {          val x881: Object = throw new NullPointerException()
x881} else {p4_6}
          val x883: Unit = block_249(null,null,null,null,p4_6,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x883
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_246(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x884: Object = new Array[char](p11_4)
          val x885: Boolean = p11_3 eq null
          val x887: Object = if (x885) {          val x886: Object = throw new NullPointerException()
x886} else {p11_3}
          val x888: Unit = unsafe.putObject(x887,24, x884)
          val x889: Unit = block_250(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x889
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_247(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x890: Unit = block_251(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x890
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_248(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x891: Boolean = p9_6 eq null
          val x893: Object = if (x891) {          val x892: Object = throw new NullPointerException()
x892} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x894: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x894
}
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_249(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x895: Boolean = p5_3 eq null
          val x897: Object = if (x895) {          val x896: Object = throw new NullPointerException()
x896} else {p5_3}
          val x898: Unit = block_252(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x898
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_250(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x899: Unit = block_253(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x899
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_251(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x900: Boolean = p9_6 eq null
          val x902: Object = if (x900) {          val x901: Object = throw new NullPointerException()
x901} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x903: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x903
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_252(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x904: Boolean = p6_3 eq null
          val x906: Object = if (x904) {          val x905: Object = throw new NullPointerException()
x905} else {p6_3}
          val x907: Object = unsafe.getObject(x906,16)
          val x908: Unit = block_254(r,p5_0,p5_1,p5_2,p5_3,x907,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x908
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_253(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x909: Boolean = p9_6 eq null
          val x911: Object = if (x909) {          val x910: Object = throw new NullPointerException()
x910} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x912: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x912
}
// *** begin block 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_254(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x913: Boolean = p5_4 eq null
          val x915: Object = if (x913) {          val x914: Object = throw new NullPointerException()
x914} else {p5_4}
          val x916: Unit = block_255(null,null,null,null,p5_4,null,null,null,null,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x916
}
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_255(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x917: Object = unsafe.allocateInstance(classOf[java.lang.String])
          val x918: Boolean = p6_3 eq null
          val x920: Object = if (x918) {          val x919: Object = throw new NullPointerException()
x919} else {p6_3}
          val x921: Object = unsafe.getObject(x920,24)
          val x922: Boolean = p6_3 eq null
          val x924: Object = if (x922) {          val x923: Object = throw new NullPointerException()
x923} else {p6_3}
          val x925: Int = unsafe.getInt(x924,16)
          val x926: Boolean = x917 eq null
          val x928: Object = if (x926) {          val x927: Object = throw new NullPointerException()
x927} else {x917}
          val x929: Unit = block_256(null,null,null,null,x917,x921,0,x925,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,x917,null,null,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x929
}
// *** begin block 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_256(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x930: Boolean = p7_3 eq null
          val x932: Object = if (x930) {          val x931: Object = throw new NullPointerException()
x931} else {p7_3}
          val x933: Unit = block_257(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x933
}
// *** begin block 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_257(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x934: Unit = block_258(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x934
}
// *** begin block 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_258(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x935: Boolean = p7_3 eq null
          val x937: Object = if (x935) {          val x936: Object = throw new NullPointerException()
x936} else {p7_3}
          val x938: Unit = unsafe.putInt(x937,28, 0)
          val x939: Boolean = p7_5 >= 0
          val x942: Unit = if (x939) {          val x940: Unit = block_259(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x940} else {          val x941: Unit = block_260(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x941}
x942
}
// *** begin block 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_259(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x943: Boolean = p7_6 >= 0
          val x946: Unit = if (x943) {          val x944: Unit = block_261(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x944} else {          val x945: Unit = block_262(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 26:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x945}
x946
}
// *** begin block 13:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_260(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x947: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x948: Boolean = x947 eq null
          val x950: Object = if (x948) {          val x949: Object = throw new NullPointerException()
x949} else {x947}
          val x951: Unit = block_263(null,null,null,null,x947,p7_5,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x947,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x951
}
// *** begin block 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_261(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x952: Boolean = p7_4 eq null
          val x954: Object = if (x952) {          val x953: Object = throw new NullPointerException()
x953} else {p7_4}
          val x955: Int = java.lang.reflect.Array.getLength(x954)
          val x956: Int = -p7_6
          val x957: Int = x956 + x955
          val x958: Boolean = x957 >= p7_5
          val x961: Unit = if (x958) {          val x959: Unit = block_264(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x959} else {          val x960: Unit = block_265(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 43:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x960}
x961
}
// *** begin block 26:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_262(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x962: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x963: Boolean = x962 eq null
          val x965: Object = if (x963) {          val x964: Object = throw new NullPointerException()
x964} else {x962}
          val x966: Unit = block_266(null,null,null,null,x962,p7_6,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x962,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x966
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_263(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x967: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x968: Boolean = x967 eq null
          val x970: Object = if (x968) {          val x969: Object = throw new NullPointerException()
x969} else {x967}
          val x971: Unit = block_267(null,null,null,null,x967,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x967,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x971
}
// *** begin block 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_264(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x972: Int = p7_6 + p7_5
          val x973: Unit = block_268(null,null,null,null,p7_4,p7_5,x972,null,null,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_3,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x973
}
// *** begin block 43:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_265(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x974: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x975: Int = p7_6 + p7_5
          val x976: Boolean = x974 eq null
          val x978: Object = if (x976) {          val x977: Object = throw new NullPointerException()
x977} else {x974}
          val x979: Unit = block_269(null,null,null,null,x974,x975,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x974,null,null,null,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x979
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_266(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x980: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x981: Boolean = x980 eq null
          val x983: Object = if (x981) {          val x982: Object = throw new NullPointerException()
x982} else {x980}
          val x984: Unit = block_270(null,null,null,null,x980,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x980,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x984
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_267(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x985: Boolean = p9_3 eq null
          val x987: Object = if (x985) {          val x986: Object = throw new NullPointerException()
x986} else {p9_3}
          val x988: Unit = block_271(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x988
}
// *** begin block 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_268(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x989: Int = -p8_4
          val x990: Int = x989 + p8_5
          val x991: Boolean = x990 >= 0
          val x994: Unit = if (x991) {          val x992: Unit = block_272(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x990,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x992} else {          val x993: Unit = block_273(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x990,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x993}
x994
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_269(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x995: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x996: Boolean = x995 eq null
          val x998: Object = if (x996) {          val x997: Object = throw new NullPointerException()
x997} else {x995}
          val x999: Unit = block_274(null,null,null,null,x995,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x995,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x999
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_270(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1000: Boolean = p9_3 eq null
          val x1002: Object = if (x1000) {          val x1001: Object = throw new NullPointerException()
x1001} else {p9_3}
          val x1003: Unit = block_275(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1003
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_271(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1004: Boolean = p10_3 eq null
          val x1006: Object = if (x1004) {          val x1005: Object = throw new NullPointerException()
x1005} else {p10_3}
          val x1007: Unit = block_276(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1007
}
// *** begin block 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_272(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1008: Object = new Array[char](p8_6)
          val x1009: Boolean = p8_3 eq null
          val x1011: Object = if (x1009) {          val x1010: Object = throw new NullPointerException()
x1010} else {p8_3}
          val x1012: Int = java.lang.reflect.Array.getLength(x1011)
          val x1013: Int = -p8_4
          val x1014: Int = x1013 + x1012
          val x1015: Unit = block_277(null,null,null,null,x1014,p8_6,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,x1008,p8_3,p8_4,x1008,0,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1015
}
// *** begin block 8:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_273(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1016: Object = unsafe.allocateInstance(classOf[java.lang.IllegalArgumentException])
          val x1017: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x1018: Boolean = x1017 eq null
          val x1020: Object = if (x1018) {          val x1019: Object = throw new NullPointerException()
x1019} else {x1017}
          val x1021: Unit = block_278(null,null,null,null,x1017,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x1016,x1016,x1017,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1021
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_274(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1022: Boolean = p9_3 eq null
          val x1024: Object = if (x1022) {          val x1023: Object = throw new NullPointerException()
x1023} else {p9_3}
          val x1025: Unit = block_279(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1025
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_275(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1026: Boolean = p10_3 eq null
          val x1028: Object = if (x1026) {          val x1027: Object = throw new NullPointerException()
x1027} else {p10_3}
          val x1029: Unit = block_280(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1029
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_276(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1030: Unit = block_281(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1030
}
// *** begin block 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_277(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1031: Boolean = p9_4 < p9_3
          val x1034: Unit = if (x1031) {          val x1032: Unit = block_282(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1032} else {          val x1033: Unit = block_283(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1033}
x1034
}
// *** begin block 0:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_278(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1035: Boolean = p9_3 eq null
          val x1037: Object = if (x1035) {          val x1036: Object = throw new NullPointerException()
x1036} else {p9_3}
          val x1038: Unit = block_284(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1038
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_279(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1039: Boolean = p10_3 eq null
          val x1041: Object = if (x1039) {          val x1040: Object = throw new NullPointerException()
x1040} else {p10_3}
          val x1042: Unit = block_285(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1042
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_280(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1043: Unit = block_286(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1043
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_281(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1044: Object = new Array[char](p10_4)
          val x1045: Boolean = p10_3 eq null
          val x1047: Object = if (x1045) {          val x1046: Object = throw new NullPointerException()
x1046} else {p10_3}
          val x1048: Unit = unsafe.putObject(x1047,24, x1044)
          val x1049: Unit = block_287(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1049
}
// *** begin block 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_282(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1050: Unit = block_288(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p9_4,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1050
}
// *** begin block 5:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_283(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1051: Unit = block_289(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1051
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_284(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1052: Boolean = p10_3 eq null
          val x1054: Object = if (x1052) {          val x1053: Object = throw new NullPointerException()
x1053} else {p10_3}
          val x1055: Unit = block_290(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1055
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_285(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1056: Unit = block_291(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1056
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_286(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1057: Object = new Array[char](p10_4)
          val x1058: Boolean = p10_3 eq null
          val x1060: Object = if (x1058) {          val x1059: Object = throw new NullPointerException()
x1059} else {p10_3}
          val x1061: Unit = unsafe.putObject(x1060,24, x1057)
          val x1062: Unit = block_292(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1062
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_287(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1063: Unit = block_293(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1063
}
// *** begin block 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_288(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Int,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1064: Unit = java.lang.System.arraycopy(p8_8,p8_9,p8_10,p8_11,p8_12).asInstanceOf[Object]
          val x1065: Unit = block_294(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1065
}
// *** begin block 10:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_289(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Int,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1066: Unit = block_288(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p9_5,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1066
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_290(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1067: Unit = block_295(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1067
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_291(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1068: Object = new Array[char](p10_4)
          val x1069: Boolean = p10_3 eq null
          val x1071: Object = if (x1069) {          val x1070: Object = throw new NullPointerException()
x1070} else {p10_3}
          val x1072: Unit = unsafe.putObject(x1071,24, x1068)
          val x1073: Unit = block_296(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1073
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_292(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1074: Unit = block_297(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1074
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_293(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1075: Boolean = p8_6 eq null
          val x1077: Object = if (x1075) {          val x1076: Object = throw new NullPointerException()
x1076} else {p8_6}
          val x1078: Unit = block_298(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1078
}
// *** begin block 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_294(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1079: Unit = block_299(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p8_7,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1079
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_295(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1080: Object = new Array[char](p10_4)
          val x1081: Boolean = p10_3 eq null
          val x1083: Object = if (x1081) {          val x1082: Object = throw new NullPointerException()
x1082} else {p10_3}
          val x1084: Unit = unsafe.putObject(x1083,24, x1080)
          val x1085: Unit = block_300(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1085
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_296(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1086: Unit = block_301(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1086
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_297(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1087: Boolean = p8_6 eq null
          val x1089: Object = if (x1087) {          val x1088: Object = throw new NullPointerException()
x1088} else {p8_6}
          val x1090: Unit = block_302(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1090
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_298(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1091: Boolean = p9_3 eq null
          val x1093: Object = if (x1091) {          val x1092: Object = throw new NullPointerException()
x1092} else {p9_3}
          val x1094: Unit = block_303(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1094
}
// *** begin block 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_299(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Object,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1095: Boolean = p7_7 eq null
          val x1097: Object = if (x1095) {          val x1096: Object = throw new NullPointerException()
x1096} else {p7_7}
          val x1098: Unit = unsafe.putObject(x1097,16, p7_8)
          val x1099: Unit = block_304(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1099
}
// *** begin block 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_300(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1100: Unit = block_305(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1100
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_301(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1101: Boolean = p8_6 eq null
          val x1103: Object = if (x1101) {          val x1102: Object = throw new NullPointerException()
x1102} else {p8_6}
          val x1104: Unit = block_306(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1104
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_302(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1105: Boolean = p9_3 eq null
          val x1107: Object = if (x1105) {          val x1106: Object = throw new NullPointerException()
x1106} else {p9_3}
          val x1108: Unit = block_307(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1108
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_303(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1111: Unit = if (CONST_4) {          val x1109: Unit = block_308(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1109} else {          val x1110: Unit = block_309(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1110}
x1111
}
// *** begin block 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_304(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1112: Unit = block_310(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1112
}
// *** begin block 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_305(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1113: Boolean = p8_10 eq null
          val x1115: Object = if (x1113) {          val x1114: Object = throw new NullPointerException()
x1114} else {p8_10}
          val x1116: Unit = block_311(null,null,null,null,p8_10,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1116
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_306(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1117: Boolean = p9_3 eq null
          val x1119: Object = if (x1117) {          val x1118: Object = throw new NullPointerException()
x1118} else {p9_3}
          val x1120: Unit = block_312(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1120
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_307(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1123: Unit = if (CONST_4) {          val x1121: Unit = block_313(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1121} else {          val x1122: Unit = block_314(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1122}
x1123
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_308(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1124: Boolean = p10_4 eq null
          val x1126: Object = if (x1124) {          val x1125: Object = throw new NullPointerException()
x1125} else {p10_4}
          val x1127: Unit = block_315(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1127
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_309(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1128: Boolean = "null" eq null
          val x1130: Object = if (x1128) {          val x1129: Object = throw new NullPointerException()
x1129} else {"null"}
          val x1131: Unit = block_315(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1131
}
// *** begin block 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_310(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1132: Unit = block_316(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_4,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1132
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_311(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1133: Boolean = p9_3 eq null
          val x1135: Object = if (x1133) {          val x1134: Object = throw new NullPointerException()
x1134} else {p9_3}
          val x1136: Unit = block_317(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1136
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_312(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1139: Unit = if (CONST_4) {          val x1137: Unit = block_318(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1137} else {          val x1138: Unit = block_319(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1138}
x1139
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_313(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1140: Boolean = p10_4 eq null
          val x1142: Object = if (x1140) {          val x1141: Object = throw new NullPointerException()
x1141} else {p10_4}
          val x1143: Unit = block_320(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1143
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_314(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1144: Boolean = "null" eq null
          val x1146: Object = if (x1144) {          val x1145: Object = throw new NullPointerException()
x1145} else {"null"}
          val x1147: Unit = block_320(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1147
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_315(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1148: Boolean = p11_3 eq null
          val x1150: Object = if (x1148) {          val x1149: Object = throw new NullPointerException()
x1149} else {p11_3}
          val x1151: Object = unsafe.getObject(x1150,16)
          val x1152: Boolean = x1151 eq null
          val x1154: Object = if (x1152) {          val x1153: Object = throw new NullPointerException()
x1153} else {x1151}
          val x1155: Int = java.lang.reflect.Array.getLength(x1154)
          val x1156: Unit = block_321(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1155,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1156
}
// *** begin block 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_316(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1157: Boolean = p4_5 eq null
          val x1159: Object = if (x1157) {          val x1158: Object = throw new NullPointerException()
x1158} else {p4_5}
          val x1160: Unit = CONST_8.invoke(p4_5.asInstanceOf[AnyRef],p4_6.asInstanceOf[AnyRef]) // java.io.PrintStream.println
          val x1161: Unit = block_322(r,p4_0,p4_1,p4_2,p4_3,p4_4,null,null,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1161
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_317(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1164: Unit = if (CONST_4) {          val x1162: Unit = block_323(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1162} else {          val x1163: Unit = block_324(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1163}
x1164
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_318(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1165: Boolean = p10_4 eq null
          val x1167: Object = if (x1165) {          val x1166: Object = throw new NullPointerException()
x1166} else {p10_4}
          val x1168: Unit = block_325(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1168
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_319(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1169: Boolean = "null" eq null
          val x1171: Object = if (x1169) {          val x1170: Object = throw new NullPointerException()
x1170} else {"null"}
          val x1172: Unit = block_325(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1172
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_320(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1173: Boolean = p11_3 eq null
          val x1175: Object = if (x1173) {          val x1174: Object = throw new NullPointerException()
x1174} else {p11_3}
          val x1176: Object = unsafe.getObject(x1175,16)
          val x1177: Boolean = x1176 eq null
          val x1179: Object = if (x1177) {          val x1178: Object = throw new NullPointerException()
x1178} else {x1176}
          val x1180: Int = java.lang.reflect.Array.getLength(x1179)
          val x1181: Unit = block_326(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1180,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1181
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_321(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1182: Boolean = p10_3 eq null
          val x1184: Object = if (x1182) {          val x1183: Object = throw new NullPointerException()
x1183} else {p10_3}
          val x1185: Int = unsafe.getInt(x1184,16)
          val x1186: Int = p10_6 + x1185
          val x1187: Boolean = p10_3 eq null
          val x1189: Object = if (x1187) {          val x1188: Object = throw new NullPointerException()
x1188} else {p10_3}
          val x1190: Unit = block_327(null,null,null,null,p10_3,x1186,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1190
}
// *** begin block 28:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_322(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Any,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1191: Unit = block_328(r,p3_0,p3_1,p3_2,p3_3,p3_4,9,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1191
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_323(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1192: Boolean = p10_4 >= 0
          val x1195: Unit = if (x1192) {          val x1193: Unit = block_329(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1193} else {          val x1194: Unit = block_330(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1194}
x1195
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_324(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1196: Boolean = p10_3 eq null
          val x1198: Object = if (x1196) {          val x1197: Object = throw new NullPointerException()
x1197} else {p10_3}
          val x1199: Object = CONST_9.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x1200: Unit = block_331(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1199,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1200
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_325(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1201: Boolean = p11_3 eq null
          val x1203: Object = if (x1201) {          val x1202: Object = throw new NullPointerException()
x1202} else {p11_3}
          val x1204: Object = unsafe.getObject(x1203,16)
          val x1205: Boolean = x1204 eq null
          val x1207: Object = if (x1205) {          val x1206: Object = throw new NullPointerException()
x1206} else {x1204}
          val x1208: Int = java.lang.reflect.Array.getLength(x1207)
          val x1209: Unit = block_332(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1208,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1209
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_326(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1210: Boolean = p10_3 eq null
          val x1212: Object = if (x1210) {          val x1211: Object = throw new NullPointerException()
x1211} else {p10_3}
          val x1213: Int = unsafe.getInt(x1212,16)
          val x1214: Int = p10_6 + x1213
          val x1215: Boolean = p10_3 eq null
          val x1217: Object = if (x1215) {          val x1216: Object = throw new NullPointerException()
x1216} else {p10_3}
          val x1218: Unit = block_333(null,null,null,null,p10_3,x1214,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1218
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_327(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1219: Boolean = p11_3 eq null
          val x1221: Object = if (x1219) {          val x1220: Object = throw new NullPointerException()
x1220} else {p11_3}
          val x1222: Object = unsafe.getObject(x1221,24)
          val x1223: Boolean = x1222 eq null
          val x1225: Object = if (x1223) {          val x1224: Object = throw new NullPointerException()
x1224} else {x1222}
          val x1226: Int = java.lang.reflect.Array.getLength(x1225)
          val x1227: Int = -x1226
          val x1228: Int = x1227 + p11_4
          val x1229: Boolean = x1228 <= 0
          val x1232: Unit = if (x1229) {          val x1230: Unit = block_334(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1230} else {          val x1231: Unit = block_335(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1231}
x1232
}
// *** begin block 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_328(r:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Int,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1233: Unit = block_336(r,p2_0,p2_1,p2_2,p2_3,p2_4,p3_5,p2_6) // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1233
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_329(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1234: Unit = block_337(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1234
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_330(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1235: Int = -p10_4
          val x1236: Unit = block_338(null,null,null,null,x1235,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1236
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_331(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1237: Unit = block_339(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1237
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_332(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1238: Boolean = p10_3 eq null
          val x1240: Object = if (x1238) {          val x1239: Object = throw new NullPointerException()
x1239} else {p10_3}
          val x1241: Int = unsafe.getInt(x1240,16)
          val x1242: Int = p10_6 + x1241
          val x1243: Boolean = p10_3 eq null
          val x1245: Object = if (x1243) {          val x1244: Object = throw new NullPointerException()
x1244} else {p10_3}
          val x1246: Unit = block_340(null,null,null,null,p10_3,x1242,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1246
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_333(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1247: Boolean = p11_3 eq null
          val x1249: Object = if (x1247) {          val x1248: Object = throw new NullPointerException()
x1248} else {p11_3}
          val x1250: Object = unsafe.getObject(x1249,24)
          val x1251: Boolean = x1250 eq null
          val x1253: Object = if (x1251) {          val x1252: Object = throw new NullPointerException()
x1252} else {x1250}
          val x1254: Int = java.lang.reflect.Array.getLength(x1253)
          val x1255: Int = -x1254
          val x1256: Int = x1255 + p11_4
          val x1257: Boolean = x1256 <= 0
          val x1260: Unit = if (x1257) {          val x1258: Unit = block_341(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1258} else {          val x1259: Unit = block_342(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1259}
x1260
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_334(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1261: Unit = block_343(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1261
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_335(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1262: Boolean = p11_3 eq null
          val x1264: Object = if (x1262) {          val x1263: Object = throw new NullPointerException()
x1263} else {p11_3}
          val x1265: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1266: Unit = block_334(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1266
}
// *** begin block 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_336(r:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Int,p2_6:Any): Any = {
          val x1267: Unit = (RES = p2_5) // return to root
x1267
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_337(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1268: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1269: Long = 0.toLong
          val x1270: Boolean = x1268 eq null
          val x1272: Object = if (x1270) {          val x1271: Object = throw new NullPointerException()
x1271} else {x1268}
          val x1273: java.lang.Class[_ <: Any] = x1268.getClass()
          val x1274: Boolean = !x1273.isArray()
          val x1276: Unit = if (x1274) {          val x1275: Unit = throw new ArrayStoreException(x1273.getName())
x1275} else {()}
          val x1277: Boolean = x1269 < 0
          val x1281: Boolean = if (x1277) {x1277} else {          val x1278: Int = java.lang.reflect.Array.getLength(x1268)
          val x1279: Long = x1278.toLong
          val x1280: Boolean = x1269 >= x1279
x1280}
          val x1284: Unit = if (x1281) {          val x1282: Int = x1269.toInt
          val x1283: Unit = throw new ArrayIndexOutOfBoundsException(x1282)
x1283} else {()}
          val x1285: Long = 4 * x1269
          val x1286: Long = 24 + x1285
          val x1287: Int = unsafe.getInt(x1268,x1286)
          val x1288: Boolean = x1287 < p11_3
          val x1291: Unit = if (x1288) {          val x1289: Unit = block_344(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1289} else {          val x1290: Unit = block_345(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1290}
x1291
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_338(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1292: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1293: Long = 0.toLong
          val x1294: Boolean = x1292 eq null
          val x1296: Object = if (x1294) {          val x1295: Object = throw new NullPointerException()
x1295} else {x1292}
          val x1297: java.lang.Class[_ <: Any] = x1292.getClass()
          val x1298: Boolean = !x1297.isArray()
          val x1300: Unit = if (x1298) {          val x1299: Unit = throw new ArrayStoreException(x1297.getName())
x1299} else {()}
          val x1301: Boolean = x1293 < 0
          val x1305: Boolean = if (x1301) {x1301} else {          val x1302: Int = java.lang.reflect.Array.getLength(x1292)
          val x1303: Long = x1302.toLong
          val x1304: Boolean = x1293 >= x1303
x1304}
          val x1308: Unit = if (x1305) {          val x1306: Int = x1293.toInt
          val x1307: Unit = throw new ArrayIndexOutOfBoundsException(x1306)
x1307} else {()}
          val x1309: Long = 4 * x1293
          val x1310: Long = 24 + x1309
          val x1311: Int = unsafe.getInt(x1292,x1310)
          val x1312: Boolean = x1311 < p11_3
          val x1315: Unit = if (x1312) {          val x1313: Unit = block_346(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1313} else {          val x1314: Unit = block_347(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1314}
x1315
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_339(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1316: Unit = block_348(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1316
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_340(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1317: Boolean = p11_3 eq null
          val x1319: Object = if (x1317) {          val x1318: Object = throw new NullPointerException()
x1318} else {p11_3}
          val x1320: Object = unsafe.getObject(x1319,24)
          val x1321: Boolean = x1320 eq null
          val x1323: Object = if (x1321) {          val x1322: Object = throw new NullPointerException()
x1322} else {x1320}
          val x1324: Int = java.lang.reflect.Array.getLength(x1323)
          val x1325: Int = -x1324
          val x1326: Int = x1325 + p11_4
          val x1327: Boolean = x1326 <= 0
          val x1330: Unit = if (x1327) {          val x1328: Unit = block_349(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1328} else {          val x1329: Unit = block_350(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1329}
x1330
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_341(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1331: Unit = block_351(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1331
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_342(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1332: Boolean = p11_3 eq null
          val x1334: Object = if (x1332) {          val x1333: Object = throw new NullPointerException()
x1333} else {p11_3}
          val x1335: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1336: Unit = block_341(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1336
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_343(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1337: Boolean = p10_3 eq null
          val x1339: Object = if (x1337) {          val x1338: Object = throw new NullPointerException()
x1338} else {p10_3}
          val x1340: Object = unsafe.getObject(x1339,24)
          val x1341: Boolean = p10_3 eq null
          val x1343: Object = if (x1341) {          val x1342: Object = throw new NullPointerException()
x1342} else {p10_3}
          val x1344: Int = unsafe.getInt(x1343,16)
          val x1345: Boolean = p10_4 eq null
          val x1347: Object = if (x1345) {          val x1346: Object = throw new NullPointerException()
x1346} else {p10_4}
          val x1348: Unit = block_352(null,null,null,null,p10_4,0,p10_5,x1340,x1344,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1348
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_344(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1349: Int = p11_4 + 1
          val x1350: Unit = block_353(r,p11_0,p11_1,p11_2,p11_3,x1349,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1350
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_345(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1351: Int = 1 + p11_4
          val x1352: Unit = block_354(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1351,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1352
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_346(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1353: Int = p11_4 + 1
          val x1354: Unit = block_355(r,p11_0,p11_1,p11_2,p11_3,x1353,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1354
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_347(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1355: Int = 1 + p11_4
          val x1356: Unit = block_356(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1355,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1356
}
// *** begin block 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_348(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1357: Boolean = p8_10 eq null
          val x1359: Object = if (x1357) {          val x1358: Object = throw new NullPointerException()
x1358} else {p8_10}
          val x1360: Unit = block_357(null,null,null,null,p8_10," > ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1360
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_349(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1361: Unit = block_358(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1361
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_350(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1362: Boolean = p11_3 eq null
          val x1364: Object = if (x1362) {          val x1363: Object = throw new NullPointerException()
x1363} else {p11_3}
          val x1365: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1366: Unit = block_349(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1366
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_351(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1367: Boolean = p10_3 eq null
          val x1369: Object = if (x1367) {          val x1368: Object = throw new NullPointerException()
x1368} else {p10_3}
          val x1370: Object = unsafe.getObject(x1369,24)
          val x1371: Boolean = p10_3 eq null
          val x1373: Object = if (x1371) {          val x1372: Object = throw new NullPointerException()
x1372} else {p10_3}
          val x1374: Int = unsafe.getInt(x1373,16)
          val x1375: Boolean = p10_4 eq null
          val x1377: Object = if (x1375) {          val x1376: Object = throw new NullPointerException()
x1376} else {p10_4}
          val x1378: Unit = block_359(null,null,null,null,p10_4,0,p10_5,x1370,x1374,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1378
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_352(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1379: Boolean = p11_4 >= 0
          val x1382: Unit = if (x1379) {          val x1380: Unit = block_360(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1380} else {          val x1381: Unit = block_361(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1381}
x1382
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_353(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1383: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1384: Long = p11_4.toLong
          val x1385: Boolean = x1383 eq null
          val x1387: Object = if (x1385) {          val x1386: Object = throw new NullPointerException()
x1386} else {x1383}
          val x1388: java.lang.Class[_ <: Any] = x1383.getClass()
          val x1389: Boolean = !x1388.isArray()
          val x1391: Unit = if (x1389) {          val x1390: Unit = throw new ArrayStoreException(x1388.getName())
x1390} else {()}
          val x1392: Boolean = x1384 < 0
          val x1396: Boolean = if (x1392) {x1392} else {          val x1393: Int = java.lang.reflect.Array.getLength(x1383)
          val x1394: Long = x1393.toLong
          val x1395: Boolean = x1384 >= x1394
x1395}
          val x1399: Unit = if (x1396) {          val x1397: Int = x1384.toInt
          val x1398: Unit = throw new ArrayIndexOutOfBoundsException(x1397)
x1398} else {()}
          val x1400: Long = 4 * x1384
          val x1401: Long = 24 + x1400
          val x1402: Int = unsafe.getInt(x1383,x1401)
          val x1403: Boolean = x1402 < p11_3
          val x1406: Unit = if (x1403) {          val x1404: Unit = block_344(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1404} else {          val x1405: Unit = block_345(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1405}
x1406
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_354(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1407: Boolean = p10_3 eq null
          val x1409: Object = if (x1407) {          val x1408: Object = throw new NullPointerException()
x1408} else {p10_3}
          val x1410: Int = unsafe.getInt(x1409,16)
          val x1411: Int = p10_7 + x1410
          val x1412: Boolean = p10_3 eq null
          val x1414: Object = if (x1412) {          val x1413: Object = throw new NullPointerException()
x1413} else {p10_3}
          val x1415: Unit = block_362(null,null,null,null,p10_3,x1411,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x1411,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1415
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_355(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1416: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1417: Long = p11_4.toLong
          val x1418: Boolean = x1416 eq null
          val x1420: Object = if (x1418) {          val x1419: Object = throw new NullPointerException()
x1419} else {x1416}
          val x1421: java.lang.Class[_ <: Any] = x1416.getClass()
          val x1422: Boolean = !x1421.isArray()
          val x1424: Unit = if (x1422) {          val x1423: Unit = throw new ArrayStoreException(x1421.getName())
x1423} else {()}
          val x1425: Boolean = x1417 < 0
          val x1429: Boolean = if (x1425) {x1425} else {          val x1426: Int = java.lang.reflect.Array.getLength(x1416)
          val x1427: Long = x1426.toLong
          val x1428: Boolean = x1417 >= x1427
x1428}
          val x1432: Unit = if (x1429) {          val x1430: Int = x1417.toInt
          val x1431: Unit = throw new ArrayIndexOutOfBoundsException(x1430)
x1431} else {()}
          val x1433: Long = 4 * x1417
          val x1434: Long = 24 + x1433
          val x1435: Int = unsafe.getInt(x1416,x1434)
          val x1436: Boolean = x1435 < p11_3
          val x1439: Unit = if (x1436) {          val x1437: Unit = block_346(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1437} else {          val x1438: Unit = block_347(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1438}
x1439
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_356(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1440: Int = 1 + p10_7
          val x1441: Unit = block_354(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1440,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1441
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_357(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1442: Boolean = p9_3 eq null
          val x1444: Object = if (x1442) {          val x1443: Object = throw new NullPointerException()
x1443} else {p9_3}
          val x1445: Unit = block_363(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1445
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_358(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1446: Boolean = p10_3 eq null
          val x1448: Object = if (x1446) {          val x1447: Object = throw new NullPointerException()
x1447} else {p10_3}
          val x1449: Object = unsafe.getObject(x1448,24)
          val x1450: Boolean = p10_3 eq null
          val x1452: Object = if (x1450) {          val x1451: Object = throw new NullPointerException()
x1451} else {p10_3}
          val x1453: Int = unsafe.getInt(x1452,16)
          val x1454: Boolean = p10_4 eq null
          val x1456: Object = if (x1454) {          val x1455: Object = throw new NullPointerException()
x1455} else {p10_4}
          val x1457: Unit = block_364(null,null,null,null,p10_4,0,p10_5,x1449,x1453,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1457
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_359(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1458: Boolean = p11_4 >= 0
          val x1461: Unit = if (x1458) {          val x1459: Unit = block_365(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1459} else {          val x1460: Unit = block_366(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1460}
x1461
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_360(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1462: Boolean = p11_3 eq null
          val x1464: Object = if (x1462) {          val x1463: Object = throw new NullPointerException()
x1463} else {p11_3}
          val x1465: Object = unsafe.getObject(x1464,16)
          val x1466: Boolean = x1465 eq null
          val x1468: Object = if (x1466) {          val x1467: Object = throw new NullPointerException()
x1467} else {x1465}
          val x1469: Int = java.lang.reflect.Array.getLength(x1468)
          val x1470: Boolean = x1469 >= p11_5
          val x1473: Unit = if (x1470) {          val x1471: Unit = block_367(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1471} else {          val x1472: Unit = block_368(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1472}
x1473
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_361(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1474: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1475: Boolean = x1474 eq null
          val x1477: Object = if (x1475) {          val x1476: Object = throw new NullPointerException()
x1476} else {x1474}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1478: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1478
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_362(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1479: Boolean = p11_3 eq null
          val x1481: Object = if (x1479) {          val x1480: Object = throw new NullPointerException()
x1480} else {p11_3}
          val x1482: Object = unsafe.getObject(x1481,24)
          val x1483: Boolean = x1482 eq null
          val x1485: Object = if (x1483) {          val x1484: Object = throw new NullPointerException()
x1484} else {x1482}
          val x1486: Int = java.lang.reflect.Array.getLength(x1485)
          val x1487: Int = -x1486
          val x1488: Int = x1487 + p11_4
          val x1489: Boolean = x1488 <= 0
          val x1492: Unit = if (x1489) {          val x1490: Unit = block_369(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1490} else {          val x1491: Unit = block_370(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1491}
x1492
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_363(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1495: Unit = if (CONST_4) {          val x1493: Unit = block_371(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1493} else {          val x1494: Unit = block_372(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1494}
x1495
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_364(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1496: Boolean = p11_4 >= 0
          val x1499: Unit = if (x1496) {          val x1497: Unit = block_373(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1497} else {          val x1498: Unit = block_374(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1498}
x1499
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_365(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1500: Boolean = p11_3 eq null
          val x1502: Object = if (x1500) {          val x1501: Object = throw new NullPointerException()
x1501} else {p11_3}
          val x1503: Object = unsafe.getObject(x1502,16)
          val x1504: Boolean = x1503 eq null
          val x1506: Object = if (x1504) {          val x1505: Object = throw new NullPointerException()
x1505} else {x1503}
          val x1507: Int = java.lang.reflect.Array.getLength(x1506)
          val x1508: Boolean = x1507 >= p11_5
          val x1511: Unit = if (x1508) {          val x1509: Unit = block_375(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1509} else {          val x1510: Unit = block_376(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1510}
x1511
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_366(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1512: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1513: Boolean = x1512 eq null
          val x1515: Object = if (x1513) {          val x1514: Object = throw new NullPointerException()
x1514} else {x1512}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1516: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1516
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_367(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1517: Boolean = p11_5 >= p11_4
          val x1520: Unit = if (x1517) {          val x1518: Unit = block_377(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1518} else {          val x1519: Unit = block_378(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1519}
x1520
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_368(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1521: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1522: Boolean = x1521 eq null
          val x1524: Object = if (x1522) {          val x1523: Object = throw new NullPointerException()
x1523} else {x1521}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1525: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1525
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_369(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1526: Unit = block_379(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1526
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_370(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1527: Boolean = p11_3 eq null
          val x1529: Object = if (x1527) {          val x1528: Object = throw new NullPointerException()
x1528} else {p11_3}
          val x1530: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1531: Unit = block_369(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1531
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_371(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1532: Boolean = p10_4 eq null
          val x1534: Object = if (x1532) {          val x1533: Object = throw new NullPointerException()
x1533} else {p10_4}
          val x1535: Unit = block_380(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1535
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_372(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1536: Boolean = "null" eq null
          val x1538: Object = if (x1536) {          val x1537: Object = throw new NullPointerException()
x1537} else {"null"}
          val x1539: Unit = block_380(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1539
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_373(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1540: Boolean = p11_3 eq null
          val x1542: Object = if (x1540) {          val x1541: Object = throw new NullPointerException()
x1541} else {p11_3}
          val x1543: Object = unsafe.getObject(x1542,16)
          val x1544: Boolean = x1543 eq null
          val x1546: Object = if (x1544) {          val x1545: Object = throw new NullPointerException()
x1545} else {x1543}
          val x1547: Int = java.lang.reflect.Array.getLength(x1546)
          val x1548: Boolean = x1547 >= p11_5
          val x1551: Unit = if (x1548) {          val x1549: Unit = block_381(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1549} else {          val x1550: Unit = block_382(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1550}
x1551
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_374(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1552: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1553: Boolean = x1552 eq null
          val x1555: Object = if (x1553) {          val x1554: Object = throw new NullPointerException()
x1554} else {x1552}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1556: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1556
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_375(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1557: Boolean = p11_5 >= p11_4
          val x1560: Unit = if (x1557) {          val x1558: Unit = block_383(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1558} else {          val x1559: Unit = block_384(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1559}
x1560
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_376(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1561: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1562: Boolean = x1561 eq null
          val x1564: Object = if (x1562) {          val x1563: Object = throw new NullPointerException()
x1563} else {x1561}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1565: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1565
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_377(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1566: Boolean = p11_3 eq null
          val x1568: Object = if (x1566) {          val x1567: Object = throw new NullPointerException()
x1567} else {p11_3}
          val x1569: Object = unsafe.getObject(x1568,16)
          val x1570: Int = -p11_4
          val x1571: Int = x1570 + p11_5
          val x1572: Unit = java.lang.System.arraycopy(x1569,p11_4,p11_6,p11_7,x1571).asInstanceOf[Object]
          val x1573: Unit = block_385(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1573
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_378(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1574: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1575: Int = -p11_4
          val x1576: Int = x1575 + p11_5
          val x1577: Boolean = x1574 eq null
          val x1579: Object = if (x1577) {          val x1578: Object = throw new NullPointerException()
x1578} else {x1574}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1580: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1580
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_379(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1581: Boolean = p10_3 eq null
          val x1583: Object = if (x1581) {          val x1582: Object = throw new NullPointerException()
x1582} else {p10_3}
          val x1584: Object = unsafe.getObject(x1583,24)
          val x1585: Unit = block_386(null,null,null,null,p10_4,p10_6,x1584,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1585
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_380(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1586: Boolean = p11_3 eq null
          val x1588: Object = if (x1586) {          val x1587: Object = throw new NullPointerException()
x1587} else {p11_3}
          val x1589: Object = unsafe.getObject(x1588,16)
          val x1590: Boolean = x1589 eq null
          val x1592: Object = if (x1590) {          val x1591: Object = throw new NullPointerException()
x1591} else {x1589}
          val x1593: Int = java.lang.reflect.Array.getLength(x1592)
          val x1594: Unit = block_387(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1593,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1594
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_381(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1595: Boolean = p11_5 >= p11_4
          val x1598: Unit = if (x1595) {          val x1596: Unit = block_388(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1596} else {          val x1597: Unit = block_389(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1597}
x1598
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_382(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1599: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1600: Boolean = x1599 eq null
          val x1602: Object = if (x1600) {          val x1601: Object = throw new NullPointerException()
x1601} else {x1599}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1603: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1603
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_383(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1604: Boolean = p11_3 eq null
          val x1606: Object = if (x1604) {          val x1605: Object = throw new NullPointerException()
x1605} else {p11_3}
          val x1607: Object = unsafe.getObject(x1606,16)
          val x1608: Int = -p11_4
          val x1609: Int = x1608 + p11_5
          val x1610: Unit = java.lang.System.arraycopy(x1607,p11_4,p11_6,p11_7,x1609).asInstanceOf[Object]
          val x1611: Unit = block_390(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1611
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_384(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1612: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1613: Int = -p11_4
          val x1614: Int = x1613 + p11_5
          val x1615: Boolean = x1612 eq null
          val x1617: Object = if (x1615) {          val x1616: Object = throw new NullPointerException()
x1616} else {x1612}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1618: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1618
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_385(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1619: Unit = block_391(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1619
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_386(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1620: Boolean = p11_3 >= 0
          val x1623: Unit = if (x1620) {          val x1621: Unit = block_392(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1621} else {          val x1622: Unit = block_393(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1622}
x1623
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_387(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1624: Boolean = p10_3 eq null
          val x1626: Object = if (x1624) {          val x1625: Object = throw new NullPointerException()
x1625} else {p10_3}
          val x1627: Int = unsafe.getInt(x1626,16)
          val x1628: Int = p10_6 + x1627
          val x1629: Boolean = p10_3 eq null
          val x1631: Object = if (x1629) {          val x1630: Object = throw new NullPointerException()
x1630} else {p10_3}
          val x1632: Unit = block_394(null,null,null,null,p10_3,x1628,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1632
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_388(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1633: Boolean = p11_3 eq null
          val x1635: Object = if (x1633) {          val x1634: Object = throw new NullPointerException()
x1634} else {p11_3}
          val x1636: Object = unsafe.getObject(x1635,16)
          val x1637: Int = -p11_4
          val x1638: Int = x1637 + p11_5
          val x1639: Unit = java.lang.System.arraycopy(x1636,p11_4,p11_6,p11_7,x1638).asInstanceOf[Object]
          val x1640: Unit = block_395(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1640
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_389(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1641: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1642: Int = -p11_4
          val x1643: Int = x1642 + p11_5
          val x1644: Boolean = x1641 eq null
          val x1646: Object = if (x1644) {          val x1645: Object = throw new NullPointerException()
x1645} else {x1641}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1647: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1647
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_390(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1648: Unit = block_396(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1648
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_391(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1649: Boolean = p10_3 eq null
          val x1651: Object = if (x1649) {          val x1650: Object = throw new NullPointerException()
x1650} else {p10_3}
          val x1652: Int = unsafe.getInt(x1651,16)
          val x1653: Int = p10_5 + x1652
          val x1654: Boolean = p10_3 eq null
          val x1656: Object = if (x1654) {          val x1655: Object = throw new NullPointerException()
x1655} else {p10_3}
          val x1657: Unit = unsafe.putInt(x1656,16, x1653)
          val x1658: Unit = block_397(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1658
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_392(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1659: Boolean = 65536 > p11_3
          val x1662: Unit = if (x1659) {          val x1660: Unit = block_398(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1660} else {          val x1661: Unit = block_399(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1661}
x1662
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_393(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1663: Int = -p11_3
          val x1664: Boolean = 65536 > x1663
          val x1667: Unit = if (x1664) {          val x1665: Unit = block_398(r,p11_0,p11_1,p11_2,x1663,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1665} else {          val x1666: Unit = block_399(r,p11_0,p11_1,p11_2,x1663,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1666}
x1667
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_394(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1668: Boolean = p11_3 eq null
          val x1670: Object = if (x1668) {          val x1669: Object = throw new NullPointerException()
x1669} else {p11_3}
          val x1671: Object = unsafe.getObject(x1670,24)
          val x1672: Boolean = x1671 eq null
          val x1674: Object = if (x1672) {          val x1673: Object = throw new NullPointerException()
x1673} else {x1671}
          val x1675: Int = java.lang.reflect.Array.getLength(x1674)
          val x1676: Int = -x1675
          val x1677: Int = x1676 + p11_4
          val x1678: Boolean = x1677 <= 0
          val x1681: Unit = if (x1678) {          val x1679: Unit = block_400(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1679} else {          val x1680: Unit = block_401(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1680}
x1681
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_395(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1682: Unit = block_402(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1682
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_396(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1683: Boolean = p10_3 eq null
          val x1685: Object = if (x1683) {          val x1684: Object = throw new NullPointerException()
x1684} else {p10_3}
          val x1686: Int = unsafe.getInt(x1685,16)
          val x1687: Int = p10_5 + x1686
          val x1688: Boolean = p10_3 eq null
          val x1690: Object = if (x1688) {          val x1689: Object = throw new NullPointerException()
x1689} else {p10_3}
          val x1691: Unit = unsafe.putInt(x1690,16, x1687)
          val x1692: Unit = block_403(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1692
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_397(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1693: Unit = block_404(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1693
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_398(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1694: Int = 52429 * p11_3
          val x1695: Int = x1694 >>> 19
          val x1696: Int = x1695 << 3
          val x1697: Int = x1695 << 1
          val x1698: Int = x1697 + x1696
          val x1699: Int = -x1698
          val x1700: Int = x1699 + p11_3
          val x1701: Int = p11_8 + -1
          val x1702: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x1703: Long = x1700.toLong
          val x1704: Boolean = x1702 eq null
          val x1706: Object = if (x1704) {          val x1705: Object = throw new NullPointerException()
x1705} else {x1702}
          val x1707: java.lang.Class[_ <: Any] = x1702.getClass()
          val x1708: Boolean = !x1707.isArray()
          val x1710: Unit = if (x1708) {          val x1709: Unit = throw new ArrayStoreException(x1707.getName())
x1709} else {()}
          val x1711: Boolean = x1703 < 0
          val x1715: Boolean = if (x1711) {x1711} else {          val x1712: Int = java.lang.reflect.Array.getLength(x1702)
          val x1713: Long = x1712.toLong
          val x1714: Boolean = x1703 >= x1713
x1714}
          val x1718: Unit = if (x1715) {          val x1716: Int = x1703.toInt
          val x1717: Unit = throw new ArrayIndexOutOfBoundsException(x1716)
x1717} else {()}
          val x1719: Long = 2 * x1703
          val x1720: Long = 24 + x1719
          val x1721: Char = unsafe.getChar(x1702,x1720)
          val x1722: Int = x1721.toInt
          val x1723: Char = x1722.toChar
          val x1724: Long = x1701.toLong
          val x1725: Boolean = p11_5 eq null
          val x1727: Object = if (x1725) {          val x1726: Object = throw new NullPointerException()
x1726} else {p11_5}
          val x1728: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x1729: Boolean = !x1728.isArray()
          val x1731: Unit = if (x1729) {          val x1730: Unit = throw new ArrayStoreException(x1728.getName())
x1730} else {()}
          val x1732: Boolean = x1724 < 0
          val x1736: Boolean = if (x1732) {x1732} else {          val x1733: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1734: Long = x1733.toLong
          val x1735: Boolean = x1724 >= x1734
x1735}
          val x1739: Unit = if (x1736) {          val x1737: Int = x1724.toInt
          val x1738: Unit = throw new ArrayIndexOutOfBoundsException(x1737)
x1738} else {()}
          val x1740: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x1742: Unit = if (x1740) {          val x1741: Unit = throw new ArrayStoreException("char")
x1741} else {()}
          val x1743: Long = 2 * x1724
          val x1744: Long = 24 + x1743
          val x1745: Unit = unsafe.putChar(p11_5,x1744, x1723)
          val x1748: Unit = if (CONST_4) {          val x1746: Unit = block_398(r,p11_0,p11_1,p11_2,x1695,p11_4,p11_5,x1695,x1700,x1701,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1746} else {          val x1747: Unit = block_405(r,p11_0,p11_1,p11_2,x1695,p11_4,p11_5,x1695,x1700,x1701,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1747}
x1748
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_399(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1749: Int = p11_3 / 100
          val x1750: Int = x1749 << 6
          val x1751: Int = x1749 << 5
          val x1752: Int = x1751 + x1750
          val x1753: Int = x1749 << 2
          val x1754: Int = x1753 + x1752
          val x1755: Int = -x1754
          val x1756: Int = x1755 + p11_3
          val x1757: Int = p11_8 + -1
          val x1758: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x1759: Long = x1756.toLong
          val x1760: Boolean = x1758 eq null
          val x1762: Object = if (x1760) {          val x1761: Object = throw new NullPointerException()
x1761} else {x1758}
          val x1763: java.lang.Class[_ <: Any] = x1758.getClass()
          val x1764: Boolean = !x1763.isArray()
          val x1766: Unit = if (x1764) {          val x1765: Unit = throw new ArrayStoreException(x1763.getName())
x1765} else {()}
          val x1767: Boolean = x1759 < 0
          val x1771: Boolean = if (x1767) {x1767} else {          val x1768: Int = java.lang.reflect.Array.getLength(x1758)
          val x1769: Long = x1768.toLong
          val x1770: Boolean = x1759 >= x1769
x1770}
          val x1774: Unit = if (x1771) {          val x1772: Int = x1759.toInt
          val x1773: Unit = throw new ArrayIndexOutOfBoundsException(x1772)
x1773} else {()}
          val x1775: Long = 2 * x1759
          val x1776: Long = 24 + x1775
          val x1777: Char = unsafe.getChar(x1758,x1776)
          val x1778: Int = x1777.toInt
          val x1779: Char = x1778.toChar
          val x1780: Long = x1757.toLong
          val x1781: Boolean = p11_5 eq null
          val x1783: Object = if (x1781) {          val x1782: Object = throw new NullPointerException()
x1782} else {p11_5}
          val x1784: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x1785: Boolean = !x1784.isArray()
          val x1787: Unit = if (x1785) {          val x1786: Unit = throw new ArrayStoreException(x1784.getName())
x1786} else {()}
          val x1788: Boolean = x1780 < 0
          val x1792: Boolean = if (x1788) {x1788} else {          val x1789: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1790: Long = x1789.toLong
          val x1791: Boolean = x1780 >= x1790
x1791}
          val x1795: Unit = if (x1792) {          val x1793: Int = x1780.toInt
          val x1794: Unit = throw new ArrayIndexOutOfBoundsException(x1793)
x1794} else {()}
          val x1796: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x1798: Unit = if (x1796) {          val x1797: Unit = throw new ArrayStoreException("char")
x1797} else {()}
          val x1799: Long = 2 * x1780
          val x1800: Long = 24 + x1799
          val x1801: Unit = unsafe.putChar(p11_5,x1800, x1779)
          val x1802: Int = x1757 + -1
          val x1803: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x1804: Long = x1756.toLong
          val x1805: Boolean = x1803 eq null
          val x1807: Object = if (x1805) {          val x1806: Object = throw new NullPointerException()
x1806} else {x1803}
          val x1808: java.lang.Class[_ <: Any] = x1803.getClass()
          val x1809: Boolean = !x1808.isArray()
          val x1811: Unit = if (x1809) {          val x1810: Unit = throw new ArrayStoreException(x1808.getName())
x1810} else {()}
          val x1812: Boolean = x1804 < 0
          val x1816: Boolean = if (x1812) {x1812} else {          val x1813: Int = java.lang.reflect.Array.getLength(x1803)
          val x1814: Long = x1813.toLong
          val x1815: Boolean = x1804 >= x1814
x1815}
          val x1819: Unit = if (x1816) {          val x1817: Int = x1804.toInt
          val x1818: Unit = throw new ArrayIndexOutOfBoundsException(x1817)
x1818} else {()}
          val x1820: Long = 2 * x1804
          val x1821: Long = 24 + x1820
          val x1822: Char = unsafe.getChar(x1803,x1821)
          val x1823: Int = x1822.toInt
          val x1824: Char = x1823.toChar
          val x1825: Long = x1802.toLong
          val x1826: Boolean = p11_5 eq null
          val x1828: Object = if (x1826) {          val x1827: Object = throw new NullPointerException()
x1827} else {p11_5}
          val x1829: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x1830: Boolean = !x1829.isArray()
          val x1832: Unit = if (x1830) {          val x1831: Unit = throw new ArrayStoreException(x1829.getName())
x1831} else {()}
          val x1833: Boolean = x1825 < 0
          val x1837: Boolean = if (x1833) {x1833} else {          val x1834: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1835: Long = x1834.toLong
          val x1836: Boolean = x1825 >= x1835
x1836}
          val x1840: Unit = if (x1837) {          val x1838: Int = x1825.toInt
          val x1839: Unit = throw new ArrayIndexOutOfBoundsException(x1838)
x1839} else {()}
          val x1841: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x1843: Unit = if (x1841) {          val x1842: Unit = throw new ArrayStoreException("char")
x1842} else {()}
          val x1844: Long = 2 * x1825
          val x1845: Long = 24 + x1844
          val x1846: Unit = unsafe.putChar(p11_5,x1845, x1824)
          val x1847: Unit = block_392(r,p11_0,p11_1,p11_2,x1749,p11_4,p11_5,x1749,x1756,x1802,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1847
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_400(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1848: Unit = block_406(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1848
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_401(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1849: Boolean = p11_3 eq null
          val x1851: Object = if (x1849) {          val x1850: Object = throw new NullPointerException()
x1850} else {p11_3}
          val x1852: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1853: Unit = block_400(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1853
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_402(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1854: Boolean = p10_3 eq null
          val x1856: Object = if (x1854) {          val x1855: Object = throw new NullPointerException()
x1855} else {p10_3}
          val x1857: Int = unsafe.getInt(x1856,16)
          val x1858: Int = p10_5 + x1857
          val x1859: Boolean = p10_3 eq null
          val x1861: Object = if (x1859) {          val x1860: Object = throw new NullPointerException()
x1860} else {p10_3}
          val x1862: Unit = unsafe.putInt(x1861,16, x1858)
          val x1863: Unit = block_407(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1863
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_403(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1864: Unit = block_408(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1864
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_404(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1865: Boolean = p8_6 eq null
          val x1867: Object = if (x1865) {          val x1866: Object = throw new NullPointerException()
x1866} else {p8_6}
          val x1868: Unit = block_409(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1868
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_405(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1869: Unit = block_410(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1869
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_406(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1870: Boolean = p10_3 eq null
          val x1872: Object = if (x1870) {          val x1871: Object = throw new NullPointerException()
x1871} else {p10_3}
          val x1873: Object = unsafe.getObject(x1872,24)
          val x1874: Boolean = p10_3 eq null
          val x1876: Object = if (x1874) {          val x1875: Object = throw new NullPointerException()
x1875} else {p10_3}
          val x1877: Int = unsafe.getInt(x1876,16)
          val x1878: Boolean = p10_4 eq null
          val x1880: Object = if (x1878) {          val x1879: Object = throw new NullPointerException()
x1879} else {p10_4}
          val x1881: Unit = block_411(null,null,null,null,p10_4,0,p10_5,x1873,x1877,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1881
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_407(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1882: Unit = block_412(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1882
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_408(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1883: Boolean = p8_6 eq null
          val x1885: Object = if (x1883) {          val x1884: Object = throw new NullPointerException()
x1884} else {p8_6}
          val x1886: Unit = block_413(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1886
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_409(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1887: Boolean = p9_3 eq null
          val x1889: Object = if (x1887) {          val x1888: Object = throw new NullPointerException()
x1888} else {p9_3}
          val x1890: Unit = block_414(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1890
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_410(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1893: Unit = if (CONST_10) {          val x1891: Unit = block_415(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1891} else {          val x1892: Unit = block_416(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1892}
x1893
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_411(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1894: Boolean = p11_4 >= 0
          val x1897: Unit = if (x1894) {          val x1895: Unit = block_417(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1895} else {          val x1896: Unit = block_418(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1896}
x1897
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_412(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1898: Boolean = p8_6 eq null
          val x1900: Object = if (x1898) {          val x1899: Object = throw new NullPointerException()
x1899} else {p8_6}
          val x1901: Unit = block_419(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1901
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_413(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1902: Boolean = p9_3 eq null
          val x1904: Object = if (x1902) {          val x1903: Object = throw new NullPointerException()
x1903} else {p9_3}
          val x1905: Unit = block_420(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1905
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_414(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1908: Unit = if (CONST_4) {          val x1906: Unit = block_421(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1906} else {          val x1907: Unit = block_422(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1907}
x1908
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_415(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1909: Unit = block_423(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1909
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_416(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1910: Int = p11_8 + -1
          val x1911: Char = p11_9.toChar
          val x1912: Long = x1910.toLong
          val x1913: Boolean = p11_5 eq null
          val x1915: Object = if (x1913) {          val x1914: Object = throw new NullPointerException()
x1914} else {p11_5}
          val x1916: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x1917: Boolean = !x1916.isArray()
          val x1919: Unit = if (x1917) {          val x1918: Unit = throw new ArrayStoreException(x1916.getName())
x1918} else {()}
          val x1920: Boolean = x1912 < 0
          val x1924: Boolean = if (x1920) {x1920} else {          val x1921: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1922: Long = x1921.toLong
          val x1923: Boolean = x1912 >= x1922
x1923}
          val x1927: Unit = if (x1924) {          val x1925: Int = x1912.toInt
          val x1926: Unit = throw new ArrayIndexOutOfBoundsException(x1925)
x1926} else {()}
          val x1928: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x1930: Unit = if (x1928) {          val x1929: Unit = throw new ArrayStoreException("char")
x1929} else {()}
          val x1931: Long = 2 * x1912
          val x1932: Long = 24 + x1931
          val x1933: Unit = unsafe.putChar(p11_5,x1932, x1911)
          val x1934: Unit = block_423(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1934
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_417(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1935: Boolean = p11_3 eq null
          val x1937: Object = if (x1935) {          val x1936: Object = throw new NullPointerException()
x1936} else {p11_3}
          val x1938: Object = unsafe.getObject(x1937,16)
          val x1939: Boolean = x1938 eq null
          val x1941: Object = if (x1939) {          val x1940: Object = throw new NullPointerException()
x1940} else {x1938}
          val x1942: Int = java.lang.reflect.Array.getLength(x1941)
          val x1943: Boolean = x1942 >= p11_5
          val x1946: Unit = if (x1943) {          val x1944: Unit = block_424(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1944} else {          val x1945: Unit = block_425(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1945}
x1946
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_418(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1947: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1948: Boolean = x1947 eq null
          val x1950: Object = if (x1948) {          val x1949: Object = throw new NullPointerException()
x1949} else {x1947}
          val x1951: Unit = block_426(null,null,null,null,x1947,p11_4,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x1947,null,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1951
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_419(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1952: Boolean = p9_3 eq null
          val x1954: Object = if (x1952) {          val x1953: Object = throw new NullPointerException()
x1953} else {p9_3}
          val x1955: Unit = block_427(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1955
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_420(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1958: Unit = if (CONST_4) {          val x1956: Unit = block_428(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1956} else {          val x1957: Unit = block_429(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1957}
x1958
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_421(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1959: Boolean = p10_4 >= 0
          val x1962: Unit = if (x1959) {          val x1960: Unit = block_430(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1960} else {          val x1961: Unit = block_431(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1961}
x1962
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_422(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1963: Boolean = p10_3 eq null
          val x1965: Object = if (x1963) {          val x1964: Object = throw new NullPointerException()
x1964} else {p10_3}
          val x1966: Object = CONST_9.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x1967: Unit = block_432(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1966,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1967
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_423(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1968: Boolean = p10_3 eq null
          val x1970: Object = if (x1968) {          val x1969: Object = throw new NullPointerException()
x1969} else {p10_3}
          val x1971: Unit = unsafe.putInt(x1970,16, p10_6)
          val x1972: Unit = block_339(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1972
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_424(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1973: Boolean = p11_5 >= p11_4
          val x1976: Unit = if (x1973) {          val x1974: Unit = block_433(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1974} else {          val x1975: Unit = block_434(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1975}
x1976
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_425(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1977: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1978: Boolean = x1977 eq null
          val x1980: Object = if (x1978) {          val x1979: Object = throw new NullPointerException()
x1979} else {x1977}
          val x1981: Unit = block_435(null,null,null,null,x1977,p11_5,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x1977,null,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1981
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_426(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1982: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x1983: Boolean = x1982 eq null
          val x1985: Object = if (x1983) {          val x1984: Object = throw new NullPointerException()
x1984} else {x1982}
          val x1986: Unit = block_436(null,null,null,null,x1982,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x1982,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1986
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_427(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1989: Unit = if (CONST_4) {          val x1987: Unit = block_437(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1987} else {          val x1988: Unit = block_438(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1988}
x1989
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_428(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1990: Boolean = p10_4 >= 0
          val x1993: Unit = if (x1990) {          val x1991: Unit = block_439(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1991} else {          val x1992: Unit = block_440(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1992}
x1993
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_429(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1994: Boolean = p10_3 eq null
          val x1996: Object = if (x1994) {          val x1995: Object = throw new NullPointerException()
x1995} else {p10_3}
          val x1997: Object = CONST_9.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x1998: Unit = block_441(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1997,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1998
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_430(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1999: Unit = block_442(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1999
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_431(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2000: Int = -p10_4
          val x2001: Unit = block_443(null,null,null,null,x2000,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2001
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_432(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2002: Unit = block_444(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2002
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_433(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2003: Boolean = p11_3 eq null
          val x2005: Object = if (x2003) {          val x2004: Object = throw new NullPointerException()
x2004} else {p11_3}
          val x2006: Object = unsafe.getObject(x2005,16)
          val x2007: Int = -p11_4
          val x2008: Int = x2007 + p11_5
          val x2009: Unit = java.lang.System.arraycopy(x2006,p11_4,p11_6,p11_7,x2008).asInstanceOf[Object]
          val x2010: Unit = block_445(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2010
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_434(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2011: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x2012: Int = -p11_4
          val x2013: Int = x2012 + p11_5
          val x2014: Boolean = x2011 eq null
          val x2016: Object = if (x2014) {          val x2015: Object = throw new NullPointerException()
x2015} else {x2011}
          val x2017: Unit = block_446(null,null,null,null,x2011,x2013,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x2011,null,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2017
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_435(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2018: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x2019: Boolean = x2018 eq null
          val x2021: Object = if (x2019) {          val x2020: Object = throw new NullPointerException()
x2020} else {x2018}
          val x2022: Unit = block_447(null,null,null,null,x2018,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2018,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2022
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_436(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2023: Boolean = p13_3 eq null
          val x2025: Object = if (x2023) {          val x2024: Object = throw new NullPointerException()
x2024} else {p13_3}
          val x2026: Unit = block_448(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2026
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_437(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2027: Boolean = p10_4 >= 0
          val x2030: Unit = if (x2027) {          val x2028: Unit = block_449(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2028} else {          val x2029: Unit = block_450(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2029}
x2030
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_438(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2031: Boolean = p10_3 eq null
          val x2033: Object = if (x2031) {          val x2032: Object = throw new NullPointerException()
x2032} else {p10_3}
          val x2034: Object = CONST_9.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2035: Unit = block_451(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2034,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2035
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_439(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2036: Unit = block_452(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2036
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_440(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2037: Int = -p10_4
          val x2038: Unit = block_453(null,null,null,null,x2037,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2038
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_441(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2039: Unit = block_454(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2039
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_442(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2040: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2041: Long = 0.toLong
          val x2042: Boolean = x2040 eq null
          val x2044: Object = if (x2042) {          val x2043: Object = throw new NullPointerException()
x2043} else {x2040}
          val x2045: java.lang.Class[_ <: Any] = x2040.getClass()
          val x2046: Boolean = !x2045.isArray()
          val x2048: Unit = if (x2046) {          val x2047: Unit = throw new ArrayStoreException(x2045.getName())
x2047} else {()}
          val x2049: Boolean = x2041 < 0
          val x2053: Boolean = if (x2049) {x2049} else {          val x2050: Int = java.lang.reflect.Array.getLength(x2040)
          val x2051: Long = x2050.toLong
          val x2052: Boolean = x2041 >= x2051
x2052}
          val x2056: Unit = if (x2053) {          val x2054: Int = x2041.toInt
          val x2055: Unit = throw new ArrayIndexOutOfBoundsException(x2054)
x2055} else {()}
          val x2057: Long = 4 * x2041
          val x2058: Long = 24 + x2057
          val x2059: Int = unsafe.getInt(x2040,x2058)
          val x2060: Boolean = x2059 < p11_3
          val x2063: Unit = if (x2060) {          val x2061: Unit = block_455(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2061} else {          val x2062: Unit = block_456(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2062}
x2063
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_443(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2064: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2065: Long = 0.toLong
          val x2066: Boolean = x2064 eq null
          val x2068: Object = if (x2066) {          val x2067: Object = throw new NullPointerException()
x2067} else {x2064}
          val x2069: java.lang.Class[_ <: Any] = x2064.getClass()
          val x2070: Boolean = !x2069.isArray()
          val x2072: Unit = if (x2070) {          val x2071: Unit = throw new ArrayStoreException(x2069.getName())
x2071} else {()}
          val x2073: Boolean = x2065 < 0
          val x2077: Boolean = if (x2073) {x2073} else {          val x2074: Int = java.lang.reflect.Array.getLength(x2064)
          val x2075: Long = x2074.toLong
          val x2076: Boolean = x2065 >= x2075
x2076}
          val x2080: Unit = if (x2077) {          val x2078: Int = x2065.toInt
          val x2079: Unit = throw new ArrayIndexOutOfBoundsException(x2078)
x2079} else {()}
          val x2081: Long = 4 * x2065
          val x2082: Long = 24 + x2081
          val x2083: Int = unsafe.getInt(x2064,x2082)
          val x2084: Boolean = x2083 < p11_3
          val x2087: Unit = if (x2084) {          val x2085: Unit = block_457(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2085} else {          val x2086: Unit = block_458(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2086}
x2087
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_444(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2088: Unit = block_459(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2088
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_445(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2089: Unit = block_460(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2089
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_446(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2090: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x2091: Boolean = x2090 eq null
          val x2093: Object = if (x2091) {          val x2092: Object = throw new NullPointerException()
x2092} else {x2090}
          val x2094: Unit = block_461(null,null,null,null,x2090,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2090,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2094
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_447(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2095: Boolean = p13_3 eq null
          val x2097: Object = if (x2095) {          val x2096: Object = throw new NullPointerException()
x2096} else {p13_3}
          val x2098: Unit = block_462(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2098
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_448(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2099: Boolean = p14_3 eq null
          val x2101: Object = if (x2099) {          val x2100: Object = throw new NullPointerException()
x2100} else {p14_3}
          val x2102: Unit = block_463(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2102
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_449(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2103: Unit = block_464(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2103
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_450(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2104: Int = -p10_4
          val x2105: Unit = block_465(null,null,null,null,x2104,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2105
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_451(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2106: Unit = block_466(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2106
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_452(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2107: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2108: Long = 0.toLong
          val x2109: Boolean = x2107 eq null
          val x2111: Object = if (x2109) {          val x2110: Object = throw new NullPointerException()
x2110} else {x2107}
          val x2112: java.lang.Class[_ <: Any] = x2107.getClass()
          val x2113: Boolean = !x2112.isArray()
          val x2115: Unit = if (x2113) {          val x2114: Unit = throw new ArrayStoreException(x2112.getName())
x2114} else {()}
          val x2116: Boolean = x2108 < 0
          val x2120: Boolean = if (x2116) {x2116} else {          val x2117: Int = java.lang.reflect.Array.getLength(x2107)
          val x2118: Long = x2117.toLong
          val x2119: Boolean = x2108 >= x2118
x2119}
          val x2123: Unit = if (x2120) {          val x2121: Int = x2108.toInt
          val x2122: Unit = throw new ArrayIndexOutOfBoundsException(x2121)
x2122} else {()}
          val x2124: Long = 4 * x2108
          val x2125: Long = 24 + x2124
          val x2126: Int = unsafe.getInt(x2107,x2125)
          val x2127: Boolean = x2126 < p11_3
          val x2130: Unit = if (x2127) {          val x2128: Unit = block_467(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2128} else {          val x2129: Unit = block_468(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2129}
x2130
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_453(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2131: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2132: Long = 0.toLong
          val x2133: Boolean = x2131 eq null
          val x2135: Object = if (x2133) {          val x2134: Object = throw new NullPointerException()
x2134} else {x2131}
          val x2136: java.lang.Class[_ <: Any] = x2131.getClass()
          val x2137: Boolean = !x2136.isArray()
          val x2139: Unit = if (x2137) {          val x2138: Unit = throw new ArrayStoreException(x2136.getName())
x2138} else {()}
          val x2140: Boolean = x2132 < 0
          val x2144: Boolean = if (x2140) {x2140} else {          val x2141: Int = java.lang.reflect.Array.getLength(x2131)
          val x2142: Long = x2141.toLong
          val x2143: Boolean = x2132 >= x2142
x2143}
          val x2147: Unit = if (x2144) {          val x2145: Int = x2132.toInt
          val x2146: Unit = throw new ArrayIndexOutOfBoundsException(x2145)
x2146} else {()}
          val x2148: Long = 4 * x2132
          val x2149: Long = 24 + x2148
          val x2150: Int = unsafe.getInt(x2131,x2149)
          val x2151: Boolean = x2150 < p11_3
          val x2154: Unit = if (x2151) {          val x2152: Unit = block_469(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2152} else {          val x2153: Unit = block_470(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2153}
x2154
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_454(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2155: Unit = block_471(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2155
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_455(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2156: Int = p11_4 + 1
          val x2157: Unit = block_472(r,p11_0,p11_1,p11_2,p11_3,x2156,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2157
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_456(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2158: Int = 1 + p11_4
          val x2159: Unit = block_473(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2158,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2159
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_457(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2160: Int = p11_4 + 1
          val x2161: Unit = block_474(r,p11_0,p11_1,p11_2,p11_3,x2160,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2161
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_458(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2162: Int = 1 + p11_4
          val x2163: Unit = block_475(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2162,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2163
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_459(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2164: Boolean = p8_6 eq null
          val x2166: Object = if (x2164) {          val x2165: Object = throw new NullPointerException()
x2165} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2167: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2167
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_460(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2168: Boolean = p10_3 eq null
          val x2170: Object = if (x2168) {          val x2169: Object = throw new NullPointerException()
x2169} else {p10_3}
          val x2171: Int = unsafe.getInt(x2170,16)
          val x2172: Int = p10_5 + x2171
          val x2173: Boolean = p10_3 eq null
          val x2175: Object = if (x2173) {          val x2174: Object = throw new NullPointerException()
x2174} else {p10_3}
          val x2176: Unit = unsafe.putInt(x2175,16, x2172)
          val x2177: Unit = block_476(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2177
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_461(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2178: Boolean = p13_3 eq null
          val x2180: Object = if (x2178) {          val x2179: Object = throw new NullPointerException()
x2179} else {p13_3}
          val x2181: Unit = block_477(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2181
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_462(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2182: Boolean = p14_3 eq null
          val x2184: Object = if (x2182) {          val x2183: Object = throw new NullPointerException()
x2183} else {p14_3}
          val x2185: Unit = block_478(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2185
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_463(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2186: Unit = block_479(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2186
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_464(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2187: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2188: Long = 0.toLong
          val x2189: Boolean = x2187 eq null
          val x2191: Object = if (x2189) {          val x2190: Object = throw new NullPointerException()
x2190} else {x2187}
          val x2192: java.lang.Class[_ <: Any] = x2187.getClass()
          val x2193: Boolean = !x2192.isArray()
          val x2195: Unit = if (x2193) {          val x2194: Unit = throw new ArrayStoreException(x2192.getName())
x2194} else {()}
          val x2196: Boolean = x2188 < 0
          val x2200: Boolean = if (x2196) {x2196} else {          val x2197: Int = java.lang.reflect.Array.getLength(x2187)
          val x2198: Long = x2197.toLong
          val x2199: Boolean = x2188 >= x2198
x2199}
          val x2203: Unit = if (x2200) {          val x2201: Int = x2188.toInt
          val x2202: Unit = throw new ArrayIndexOutOfBoundsException(x2201)
x2202} else {()}
          val x2204: Long = 4 * x2188
          val x2205: Long = 24 + x2204
          val x2206: Int = unsafe.getInt(x2187,x2205)
          val x2207: Boolean = x2206 < p11_3
          val x2210: Unit = if (x2207) {          val x2208: Unit = block_480(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2208} else {          val x2209: Unit = block_481(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2209}
x2210
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_465(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2211: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2212: Long = 0.toLong
          val x2213: Boolean = x2211 eq null
          val x2215: Object = if (x2213) {          val x2214: Object = throw new NullPointerException()
x2214} else {x2211}
          val x2216: java.lang.Class[_ <: Any] = x2211.getClass()
          val x2217: Boolean = !x2216.isArray()
          val x2219: Unit = if (x2217) {          val x2218: Unit = throw new ArrayStoreException(x2216.getName())
x2218} else {()}
          val x2220: Boolean = x2212 < 0
          val x2224: Boolean = if (x2220) {x2220} else {          val x2221: Int = java.lang.reflect.Array.getLength(x2211)
          val x2222: Long = x2221.toLong
          val x2223: Boolean = x2212 >= x2222
x2223}
          val x2227: Unit = if (x2224) {          val x2225: Int = x2212.toInt
          val x2226: Unit = throw new ArrayIndexOutOfBoundsException(x2225)
x2226} else {()}
          val x2228: Long = 4 * x2212
          val x2229: Long = 24 + x2228
          val x2230: Int = unsafe.getInt(x2211,x2229)
          val x2231: Boolean = x2230 < p11_3
          val x2234: Unit = if (x2231) {          val x2232: Unit = block_482(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2232} else {          val x2233: Unit = block_483(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2233}
x2234
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_466(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2235: Unit = block_484(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2235
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_467(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2236: Int = p11_4 + 1
          val x2237: Unit = block_485(r,p11_0,p11_1,p11_2,p11_3,x2236,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2237
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_468(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2238: Int = 1 + p11_4
          val x2239: Unit = block_486(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2238,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2239
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_469(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2240: Int = p11_4 + 1
          val x2241: Unit = block_487(r,p11_0,p11_1,p11_2,p11_3,x2240,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2241
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_470(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2242: Int = 1 + p11_4
          val x2243: Unit = block_488(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2242,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2243
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_471(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2244: Boolean = p8_6 eq null
          val x2246: Object = if (x2244) {          val x2245: Object = throw new NullPointerException()
x2245} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2247: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2247
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_472(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2248: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2249: Long = p11_4.toLong
          val x2250: Boolean = x2248 eq null
          val x2252: Object = if (x2250) {          val x2251: Object = throw new NullPointerException()
x2251} else {x2248}
          val x2253: java.lang.Class[_ <: Any] = x2248.getClass()
          val x2254: Boolean = !x2253.isArray()
          val x2256: Unit = if (x2254) {          val x2255: Unit = throw new ArrayStoreException(x2253.getName())
x2255} else {()}
          val x2257: Boolean = x2249 < 0
          val x2261: Boolean = if (x2257) {x2257} else {          val x2258: Int = java.lang.reflect.Array.getLength(x2248)
          val x2259: Long = x2258.toLong
          val x2260: Boolean = x2249 >= x2259
x2260}
          val x2264: Unit = if (x2261) {          val x2262: Int = x2249.toInt
          val x2263: Unit = throw new ArrayIndexOutOfBoundsException(x2262)
x2263} else {()}
          val x2265: Long = 4 * x2249
          val x2266: Long = 24 + x2265
          val x2267: Int = unsafe.getInt(x2248,x2266)
          val x2268: Boolean = x2267 < p11_3
          val x2271: Unit = if (x2268) {          val x2269: Unit = block_455(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2269} else {          val x2270: Unit = block_456(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2270}
x2271
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_473(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2272: Boolean = p10_3 eq null
          val x2274: Object = if (x2272) {          val x2273: Object = throw new NullPointerException()
x2273} else {p10_3}
          val x2275: Int = unsafe.getInt(x2274,16)
          val x2276: Int = p10_7 + x2275
          val x2277: Boolean = p10_3 eq null
          val x2279: Object = if (x2277) {          val x2278: Object = throw new NullPointerException()
x2278} else {p10_3}
          val x2280: Unit = block_489(null,null,null,null,p10_3,x2276,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2276,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2280
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_474(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2281: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2282: Long = p11_4.toLong
          val x2283: Boolean = x2281 eq null
          val x2285: Object = if (x2283) {          val x2284: Object = throw new NullPointerException()
x2284} else {x2281}
          val x2286: java.lang.Class[_ <: Any] = x2281.getClass()
          val x2287: Boolean = !x2286.isArray()
          val x2289: Unit = if (x2287) {          val x2288: Unit = throw new ArrayStoreException(x2286.getName())
x2288} else {()}
          val x2290: Boolean = x2282 < 0
          val x2294: Boolean = if (x2290) {x2290} else {          val x2291: Int = java.lang.reflect.Array.getLength(x2281)
          val x2292: Long = x2291.toLong
          val x2293: Boolean = x2282 >= x2292
x2293}
          val x2297: Unit = if (x2294) {          val x2295: Int = x2282.toInt
          val x2296: Unit = throw new ArrayIndexOutOfBoundsException(x2295)
x2296} else {()}
          val x2298: Long = 4 * x2282
          val x2299: Long = 24 + x2298
          val x2300: Int = unsafe.getInt(x2281,x2299)
          val x2301: Boolean = x2300 < p11_3
          val x2304: Unit = if (x2301) {          val x2302: Unit = block_457(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2302} else {          val x2303: Unit = block_458(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2303}
x2304
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_475(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2305: Int = 1 + p10_7
          val x2306: Unit = block_473(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2305,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2306
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_476(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2307: Unit = block_490(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2307
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_477(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2308: Boolean = p14_3 eq null
          val x2310: Object = if (x2308) {          val x2309: Object = throw new NullPointerException()
x2309} else {p14_3}
          val x2311: Unit = block_491(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2311
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_478(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2312: Unit = block_492(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2312
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_479(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2313: Object = new Array[char](p14_4)
          val x2314: Boolean = p14_3 eq null
          val x2316: Object = if (x2314) {          val x2315: Object = throw new NullPointerException()
x2315} else {p14_3}
          val x2317: Unit = unsafe.putObject(x2316,24, x2313)
          val x2318: Unit = block_493(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2318
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_480(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2319: Int = p11_4 + 1
          val x2320: Unit = block_494(r,p11_0,p11_1,p11_2,p11_3,x2319,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2320
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_481(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2321: Int = 1 + p11_4
          val x2322: Unit = block_495(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2321,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2322
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_482(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2323: Int = p11_4 + 1
          val x2324: Unit = block_496(r,p11_0,p11_1,p11_2,p11_3,x2323,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2324
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_483(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2325: Int = 1 + p11_4
          val x2326: Unit = block_497(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2325,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2326
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_484(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2327: Boolean = p8_6 eq null
          val x2329: Object = if (x2327) {          val x2328: Object = throw new NullPointerException()
x2328} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2330: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2330
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_485(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2331: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2332: Long = p11_4.toLong
          val x2333: Boolean = x2331 eq null
          val x2335: Object = if (x2333) {          val x2334: Object = throw new NullPointerException()
x2334} else {x2331}
          val x2336: java.lang.Class[_ <: Any] = x2331.getClass()
          val x2337: Boolean = !x2336.isArray()
          val x2339: Unit = if (x2337) {          val x2338: Unit = throw new ArrayStoreException(x2336.getName())
x2338} else {()}
          val x2340: Boolean = x2332 < 0
          val x2344: Boolean = if (x2340) {x2340} else {          val x2341: Int = java.lang.reflect.Array.getLength(x2331)
          val x2342: Long = x2341.toLong
          val x2343: Boolean = x2332 >= x2342
x2343}
          val x2347: Unit = if (x2344) {          val x2345: Int = x2332.toInt
          val x2346: Unit = throw new ArrayIndexOutOfBoundsException(x2345)
x2346} else {()}
          val x2348: Long = 4 * x2332
          val x2349: Long = 24 + x2348
          val x2350: Int = unsafe.getInt(x2331,x2349)
          val x2351: Boolean = x2350 < p11_3
          val x2354: Unit = if (x2351) {          val x2352: Unit = block_467(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2352} else {          val x2353: Unit = block_468(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2353}
x2354
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_486(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2355: Boolean = p10_3 eq null
          val x2357: Object = if (x2355) {          val x2356: Object = throw new NullPointerException()
x2356} else {p10_3}
          val x2358: Int = unsafe.getInt(x2357,16)
          val x2359: Int = p10_7 + x2358
          val x2360: Boolean = p10_3 eq null
          val x2362: Object = if (x2360) {          val x2361: Object = throw new NullPointerException()
x2361} else {p10_3}
          val x2363: Unit = block_498(null,null,null,null,p10_3,x2359,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2359,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2363
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_487(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2364: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2365: Long = p11_4.toLong
          val x2366: Boolean = x2364 eq null
          val x2368: Object = if (x2366) {          val x2367: Object = throw new NullPointerException()
x2367} else {x2364}
          val x2369: java.lang.Class[_ <: Any] = x2364.getClass()
          val x2370: Boolean = !x2369.isArray()
          val x2372: Unit = if (x2370) {          val x2371: Unit = throw new ArrayStoreException(x2369.getName())
x2371} else {()}
          val x2373: Boolean = x2365 < 0
          val x2377: Boolean = if (x2373) {x2373} else {          val x2374: Int = java.lang.reflect.Array.getLength(x2364)
          val x2375: Long = x2374.toLong
          val x2376: Boolean = x2365 >= x2375
x2376}
          val x2380: Unit = if (x2377) {          val x2378: Int = x2365.toInt
          val x2379: Unit = throw new ArrayIndexOutOfBoundsException(x2378)
x2379} else {()}
          val x2381: Long = 4 * x2365
          val x2382: Long = 24 + x2381
          val x2383: Int = unsafe.getInt(x2364,x2382)
          val x2384: Boolean = x2383 < p11_3
          val x2387: Unit = if (x2384) {          val x2385: Unit = block_469(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2385} else {          val x2386: Unit = block_470(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2386}
x2387
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_488(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2388: Int = 1 + p10_7
          val x2389: Unit = block_486(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2388,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2389
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_489(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2390: Boolean = p11_3 eq null
          val x2392: Object = if (x2390) {          val x2391: Object = throw new NullPointerException()
x2391} else {p11_3}
          val x2393: Object = unsafe.getObject(x2392,24)
          val x2394: Boolean = x2393 eq null
          val x2396: Object = if (x2394) {          val x2395: Object = throw new NullPointerException()
x2395} else {x2393}
          val x2397: Int = java.lang.reflect.Array.getLength(x2396)
          val x2398: Int = -x2397
          val x2399: Int = x2398 + p11_4
          val x2400: Boolean = x2399 <= 0
          val x2403: Unit = if (x2400) {          val x2401: Unit = block_499(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2401} else {          val x2402: Unit = block_500(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2402}
x2403
}
// *** begin block 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_490(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2404: Boolean = p8_10 eq null
          val x2406: Object = if (x2404) {          val x2405: Object = throw new NullPointerException()
x2405} else {p8_10}
          val x2407: Unit = block_501(null,null,null,null,p8_10,p8_5,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2407
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_491(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2408: Unit = block_502(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2408
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_492(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2409: Object = new Array[char](p14_4)
          val x2410: Boolean = p14_3 eq null
          val x2412: Object = if (x2410) {          val x2411: Object = throw new NullPointerException()
x2411} else {p14_3}
          val x2413: Unit = unsafe.putObject(x2412,24, x2409)
          val x2414: Unit = block_503(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2414
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_493(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2415: Unit = block_504(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2415
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_494(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2416: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2417: Long = p11_4.toLong
          val x2418: Boolean = x2416 eq null
          val x2420: Object = if (x2418) {          val x2419: Object = throw new NullPointerException()
x2419} else {x2416}
          val x2421: java.lang.Class[_ <: Any] = x2416.getClass()
          val x2422: Boolean = !x2421.isArray()
          val x2424: Unit = if (x2422) {          val x2423: Unit = throw new ArrayStoreException(x2421.getName())
x2423} else {()}
          val x2425: Boolean = x2417 < 0
          val x2429: Boolean = if (x2425) {x2425} else {          val x2426: Int = java.lang.reflect.Array.getLength(x2416)
          val x2427: Long = x2426.toLong
          val x2428: Boolean = x2417 >= x2427
x2428}
          val x2432: Unit = if (x2429) {          val x2430: Int = x2417.toInt
          val x2431: Unit = throw new ArrayIndexOutOfBoundsException(x2430)
x2431} else {()}
          val x2433: Long = 4 * x2417
          val x2434: Long = 24 + x2433
          val x2435: Int = unsafe.getInt(x2416,x2434)
          val x2436: Boolean = x2435 < p11_3
          val x2439: Unit = if (x2436) {          val x2437: Unit = block_480(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2437} else {          val x2438: Unit = block_481(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2438}
x2439
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_495(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2440: Boolean = p10_3 eq null
          val x2442: Object = if (x2440) {          val x2441: Object = throw new NullPointerException()
x2441} else {p10_3}
          val x2443: Int = unsafe.getInt(x2442,16)
          val x2444: Int = p10_7 + x2443
          val x2445: Boolean = p10_3 eq null
          val x2447: Object = if (x2445) {          val x2446: Object = throw new NullPointerException()
x2446} else {p10_3}
          val x2448: Unit = block_505(null,null,null,null,p10_3,x2444,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2444,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2448
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_496(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2449: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2450: Long = p11_4.toLong
          val x2451: Boolean = x2449 eq null
          val x2453: Object = if (x2451) {          val x2452: Object = throw new NullPointerException()
x2452} else {x2449}
          val x2454: java.lang.Class[_ <: Any] = x2449.getClass()
          val x2455: Boolean = !x2454.isArray()
          val x2457: Unit = if (x2455) {          val x2456: Unit = throw new ArrayStoreException(x2454.getName())
x2456} else {()}
          val x2458: Boolean = x2450 < 0
          val x2462: Boolean = if (x2458) {x2458} else {          val x2459: Int = java.lang.reflect.Array.getLength(x2449)
          val x2460: Long = x2459.toLong
          val x2461: Boolean = x2450 >= x2460
x2461}
          val x2465: Unit = if (x2462) {          val x2463: Int = x2450.toInt
          val x2464: Unit = throw new ArrayIndexOutOfBoundsException(x2463)
x2464} else {()}
          val x2466: Long = 4 * x2450
          val x2467: Long = 24 + x2466
          val x2468: Int = unsafe.getInt(x2449,x2467)
          val x2469: Boolean = x2468 < p11_3
          val x2472: Unit = if (x2469) {          val x2470: Unit = block_482(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2470} else {          val x2471: Unit = block_483(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2471}
x2472
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_497(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2473: Int = 1 + p10_7
          val x2474: Unit = block_495(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2473,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2474
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_498(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2475: Boolean = p11_3 eq null
          val x2477: Object = if (x2475) {          val x2476: Object = throw new NullPointerException()
x2476} else {p11_3}
          val x2478: Object = unsafe.getObject(x2477,24)
          val x2479: Boolean = x2478 eq null
          val x2481: Object = if (x2479) {          val x2480: Object = throw new NullPointerException()
x2480} else {x2478}
          val x2482: Int = java.lang.reflect.Array.getLength(x2481)
          val x2483: Int = -x2482
          val x2484: Int = x2483 + p11_4
          val x2485: Boolean = x2484 <= 0
          val x2488: Unit = if (x2485) {          val x2486: Unit = block_506(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2486} else {          val x2487: Unit = block_507(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2487}
x2488
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_499(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2489: Unit = block_508(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2489
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_500(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2490: Boolean = p11_3 eq null
          val x2492: Object = if (x2490) {          val x2491: Object = throw new NullPointerException()
x2491} else {p11_3}
          val x2493: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2494: Unit = block_499(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2494
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_501(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2495: Boolean = p9_3 eq null
          val x2497: Object = if (x2495) {          val x2496: Object = throw new NullPointerException()
x2496} else {p9_3}
          val x2498: Unit = block_509(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2498
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_502(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2499: Object = new Array[char](p14_4)
          val x2500: Boolean = p14_3 eq null
          val x2502: Object = if (x2500) {          val x2501: Object = throw new NullPointerException()
x2501} else {p14_3}
          val x2503: Unit = unsafe.putObject(x2502,24, x2499)
          val x2504: Unit = block_510(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2504
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_503(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2505: Unit = block_511(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2505
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_504(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2506: Boolean = p12_6 eq null
          val x2508: Object = if (x2506) {          val x2507: Object = throw new NullPointerException()
x2507} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2509: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2509
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_505(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2510: Boolean = p11_3 eq null
          val x2512: Object = if (x2510) {          val x2511: Object = throw new NullPointerException()
x2511} else {p11_3}
          val x2513: Object = unsafe.getObject(x2512,24)
          val x2514: Boolean = x2513 eq null
          val x2516: Object = if (x2514) {          val x2515: Object = throw new NullPointerException()
x2515} else {x2513}
          val x2517: Int = java.lang.reflect.Array.getLength(x2516)
          val x2518: Int = -x2517
          val x2519: Int = x2518 + p11_4
          val x2520: Boolean = x2519 <= 0
          val x2523: Unit = if (x2520) {          val x2521: Unit = block_512(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2521} else {          val x2522: Unit = block_513(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2522}
x2523
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_506(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2524: Unit = block_514(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2524
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_507(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2525: Boolean = p11_3 eq null
          val x2527: Object = if (x2525) {          val x2526: Object = throw new NullPointerException()
x2526} else {p11_3}
          val x2528: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2529: Unit = block_506(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2529
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_508(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2530: Boolean = p10_3 eq null
          val x2532: Object = if (x2530) {          val x2531: Object = throw new NullPointerException()
x2531} else {p10_3}
          val x2533: Object = unsafe.getObject(x2532,24)
          val x2534: Unit = block_515(null,null,null,null,p10_4,p10_6,x2533,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2534
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_509(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2537: Unit = if (CONST_4) {          val x2535: Unit = block_516(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2535} else {          val x2536: Unit = block_517(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2536}
x2537
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_510(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2538: Unit = block_518(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2538
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_511(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2539: Boolean = p12_6 eq null
          val x2541: Object = if (x2539) {          val x2540: Object = throw new NullPointerException()
x2540} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2542: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2542
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_512(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2543: Unit = block_519(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2543
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_513(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2544: Boolean = p11_3 eq null
          val x2546: Object = if (x2544) {          val x2545: Object = throw new NullPointerException()
x2545} else {p11_3}
          val x2547: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2548: Unit = block_512(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2548
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_514(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2549: Boolean = p10_3 eq null
          val x2551: Object = if (x2549) {          val x2550: Object = throw new NullPointerException()
x2550} else {p10_3}
          val x2552: Object = unsafe.getObject(x2551,24)
          val x2553: Unit = block_520(null,null,null,null,p10_4,p10_6,x2552,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2553
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_515(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2554: Boolean = p11_3 >= 0
          val x2557: Unit = if (x2554) {          val x2555: Unit = block_521(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2555} else {          val x2556: Unit = block_522(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2556}
x2557
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_516(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2558: Boolean = p10_4 >= 0
          val x2561: Unit = if (x2558) {          val x2559: Unit = block_523(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2559} else {          val x2560: Unit = block_524(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2560}
x2561
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_517(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2562: Boolean = p10_3 eq null
          val x2564: Object = if (x2562) {          val x2563: Object = throw new NullPointerException()
x2563} else {p10_3}
          val x2565: Object = CONST_9.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2566: Unit = block_525(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2565,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2566
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_518(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2567: Boolean = p12_6 eq null
          val x2569: Object = if (x2567) {          val x2568: Object = throw new NullPointerException()
x2568} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2570: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2570
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_519(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2571: Boolean = p10_3 eq null
          val x2573: Object = if (x2571) {          val x2572: Object = throw new NullPointerException()
x2572} else {p10_3}
          val x2574: Object = unsafe.getObject(x2573,24)
          val x2575: Unit = block_526(null,null,null,null,p10_4,p10_6,x2574,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2575
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_520(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2576: Boolean = p11_3 >= 0
          val x2579: Unit = if (x2576) {          val x2577: Unit = block_527(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2577} else {          val x2578: Unit = block_528(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2578}
x2579
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_521(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2580: Boolean = 65536 > p11_3
          val x2583: Unit = if (x2580) {          val x2581: Unit = block_529(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2581} else {          val x2582: Unit = block_530(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2582}
x2583
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_522(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2584: Int = -p11_3
          val x2585: Boolean = 65536 > x2584
          val x2588: Unit = if (x2585) {          val x2586: Unit = block_529(r,p11_0,p11_1,p11_2,x2584,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2586} else {          val x2587: Unit = block_530(r,p11_0,p11_1,p11_2,x2584,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2587}
x2588
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_523(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2589: Unit = block_531(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2589
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_524(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2590: Int = -p10_4
          val x2591: Unit = block_532(null,null,null,null,x2590,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2591
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_525(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2592: Unit = block_533(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2592
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_526(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2593: Boolean = p11_3 >= 0
          val x2596: Unit = if (x2593) {          val x2594: Unit = block_534(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2594} else {          val x2595: Unit = block_535(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2595}
x2596
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_527(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2597: Boolean = 65536 > p11_3
          val x2600: Unit = if (x2597) {          val x2598: Unit = block_536(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2598} else {          val x2599: Unit = block_537(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2599}
x2600
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_528(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2601: Int = -p11_3
          val x2602: Boolean = 65536 > x2601
          val x2605: Unit = if (x2602) {          val x2603: Unit = block_536(r,p11_0,p11_1,p11_2,x2601,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2603} else {          val x2604: Unit = block_537(r,p11_0,p11_1,p11_2,x2601,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2604}
x2605
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_529(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2606: Int = 52429 * p11_3
          val x2607: Int = x2606 >>> 19
          val x2608: Int = x2607 << 3
          val x2609: Int = x2607 << 1
          val x2610: Int = x2609 + x2608
          val x2611: Int = -x2610
          val x2612: Int = x2611 + p11_3
          val x2613: Int = p11_8 + -1
          val x2614: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x2615: Long = x2612.toLong
          val x2616: Boolean = x2614 eq null
          val x2618: Object = if (x2616) {          val x2617: Object = throw new NullPointerException()
x2617} else {x2614}
          val x2619: java.lang.Class[_ <: Any] = x2614.getClass()
          val x2620: Boolean = !x2619.isArray()
          val x2622: Unit = if (x2620) {          val x2621: Unit = throw new ArrayStoreException(x2619.getName())
x2621} else {()}
          val x2623: Boolean = x2615 < 0
          val x2627: Boolean = if (x2623) {x2623} else {          val x2624: Int = java.lang.reflect.Array.getLength(x2614)
          val x2625: Long = x2624.toLong
          val x2626: Boolean = x2615 >= x2625
x2626}
          val x2630: Unit = if (x2627) {          val x2628: Int = x2615.toInt
          val x2629: Unit = throw new ArrayIndexOutOfBoundsException(x2628)
x2629} else {()}
          val x2631: Long = 2 * x2615
          val x2632: Long = 24 + x2631
          val x2633: Char = unsafe.getChar(x2614,x2632)
          val x2634: Int = x2633.toInt
          val x2635: Char = x2634.toChar
          val x2636: Long = x2613.toLong
          val x2637: Boolean = p11_5 eq null
          val x2639: Object = if (x2637) {          val x2638: Object = throw new NullPointerException()
x2638} else {p11_5}
          val x2640: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x2641: Boolean = !x2640.isArray()
          val x2643: Unit = if (x2641) {          val x2642: Unit = throw new ArrayStoreException(x2640.getName())
x2642} else {()}
          val x2644: Boolean = x2636 < 0
          val x2648: Boolean = if (x2644) {x2644} else {          val x2645: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2646: Long = x2645.toLong
          val x2647: Boolean = x2636 >= x2646
x2647}
          val x2651: Unit = if (x2648) {          val x2649: Int = x2636.toInt
          val x2650: Unit = throw new ArrayIndexOutOfBoundsException(x2649)
x2650} else {()}
          val x2652: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x2654: Unit = if (x2652) {          val x2653: Unit = throw new ArrayStoreException("char")
x2653} else {()}
          val x2655: Long = 2 * x2636
          val x2656: Long = 24 + x2655
          val x2657: Unit = unsafe.putChar(p11_5,x2656, x2635)
          val x2660: Unit = if (CONST_4) {          val x2658: Unit = block_529(r,p11_0,p11_1,p11_2,x2607,p11_4,p11_5,x2607,x2612,x2613,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2658} else {          val x2659: Unit = block_538(r,p11_0,p11_1,p11_2,x2607,p11_4,p11_5,x2607,x2612,x2613,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2659}
x2660
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_530(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2661: Int = p11_3 / 100
          val x2662: Int = x2661 << 6
          val x2663: Int = x2661 << 5
          val x2664: Int = x2663 + x2662
          val x2665: Int = x2661 << 2
          val x2666: Int = x2665 + x2664
          val x2667: Int = -x2666
          val x2668: Int = x2667 + p11_3
          val x2669: Int = p11_8 + -1
          val x2670: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x2671: Long = x2668.toLong
          val x2672: Boolean = x2670 eq null
          val x2674: Object = if (x2672) {          val x2673: Object = throw new NullPointerException()
x2673} else {x2670}
          val x2675: java.lang.Class[_ <: Any] = x2670.getClass()
          val x2676: Boolean = !x2675.isArray()
          val x2678: Unit = if (x2676) {          val x2677: Unit = throw new ArrayStoreException(x2675.getName())
x2677} else {()}
          val x2679: Boolean = x2671 < 0
          val x2683: Boolean = if (x2679) {x2679} else {          val x2680: Int = java.lang.reflect.Array.getLength(x2670)
          val x2681: Long = x2680.toLong
          val x2682: Boolean = x2671 >= x2681
x2682}
          val x2686: Unit = if (x2683) {          val x2684: Int = x2671.toInt
          val x2685: Unit = throw new ArrayIndexOutOfBoundsException(x2684)
x2685} else {()}
          val x2687: Long = 2 * x2671
          val x2688: Long = 24 + x2687
          val x2689: Char = unsafe.getChar(x2670,x2688)
          val x2690: Int = x2689.toInt
          val x2691: Char = x2690.toChar
          val x2692: Long = x2669.toLong
          val x2693: Boolean = p11_5 eq null
          val x2695: Object = if (x2693) {          val x2694: Object = throw new NullPointerException()
x2694} else {p11_5}
          val x2696: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x2697: Boolean = !x2696.isArray()
          val x2699: Unit = if (x2697) {          val x2698: Unit = throw new ArrayStoreException(x2696.getName())
x2698} else {()}
          val x2700: Boolean = x2692 < 0
          val x2704: Boolean = if (x2700) {x2700} else {          val x2701: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2702: Long = x2701.toLong
          val x2703: Boolean = x2692 >= x2702
x2703}
          val x2707: Unit = if (x2704) {          val x2705: Int = x2692.toInt
          val x2706: Unit = throw new ArrayIndexOutOfBoundsException(x2705)
x2706} else {()}
          val x2708: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x2710: Unit = if (x2708) {          val x2709: Unit = throw new ArrayStoreException("char")
x2709} else {()}
          val x2711: Long = 2 * x2692
          val x2712: Long = 24 + x2711
          val x2713: Unit = unsafe.putChar(p11_5,x2712, x2691)
          val x2714: Int = x2669 + -1
          val x2715: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x2716: Long = x2668.toLong
          val x2717: Boolean = x2715 eq null
          val x2719: Object = if (x2717) {          val x2718: Object = throw new NullPointerException()
x2718} else {x2715}
          val x2720: java.lang.Class[_ <: Any] = x2715.getClass()
          val x2721: Boolean = !x2720.isArray()
          val x2723: Unit = if (x2721) {          val x2722: Unit = throw new ArrayStoreException(x2720.getName())
x2722} else {()}
          val x2724: Boolean = x2716 < 0
          val x2728: Boolean = if (x2724) {x2724} else {          val x2725: Int = java.lang.reflect.Array.getLength(x2715)
          val x2726: Long = x2725.toLong
          val x2727: Boolean = x2716 >= x2726
x2727}
          val x2731: Unit = if (x2728) {          val x2729: Int = x2716.toInt
          val x2730: Unit = throw new ArrayIndexOutOfBoundsException(x2729)
x2730} else {()}
          val x2732: Long = 2 * x2716
          val x2733: Long = 24 + x2732
          val x2734: Char = unsafe.getChar(x2715,x2733)
          val x2735: Int = x2734.toInt
          val x2736: Char = x2735.toChar
          val x2737: Long = x2714.toLong
          val x2738: Boolean = p11_5 eq null
          val x2740: Object = if (x2738) {          val x2739: Object = throw new NullPointerException()
x2739} else {p11_5}
          val x2741: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x2742: Boolean = !x2741.isArray()
          val x2744: Unit = if (x2742) {          val x2743: Unit = throw new ArrayStoreException(x2741.getName())
x2743} else {()}
          val x2745: Boolean = x2737 < 0
          val x2749: Boolean = if (x2745) {x2745} else {          val x2746: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2747: Long = x2746.toLong
          val x2748: Boolean = x2737 >= x2747
x2748}
          val x2752: Unit = if (x2749) {          val x2750: Int = x2737.toInt
          val x2751: Unit = throw new ArrayIndexOutOfBoundsException(x2750)
x2751} else {()}
          val x2753: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x2755: Unit = if (x2753) {          val x2754: Unit = throw new ArrayStoreException("char")
x2754} else {()}
          val x2756: Long = 2 * x2737
          val x2757: Long = 24 + x2756
          val x2758: Unit = unsafe.putChar(p11_5,x2757, x2736)
          val x2759: Unit = block_521(r,p11_0,p11_1,p11_2,x2661,p11_4,p11_5,x2661,x2668,x2714,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2759
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_531(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2760: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2761: Long = 0.toLong
          val x2762: Boolean = x2760 eq null
          val x2764: Object = if (x2762) {          val x2763: Object = throw new NullPointerException()
x2763} else {x2760}
          val x2765: java.lang.Class[_ <: Any] = x2760.getClass()
          val x2766: Boolean = !x2765.isArray()
          val x2768: Unit = if (x2766) {          val x2767: Unit = throw new ArrayStoreException(x2765.getName())
x2767} else {()}
          val x2769: Boolean = x2761 < 0
          val x2773: Boolean = if (x2769) {x2769} else {          val x2770: Int = java.lang.reflect.Array.getLength(x2760)
          val x2771: Long = x2770.toLong
          val x2772: Boolean = x2761 >= x2771
x2772}
          val x2776: Unit = if (x2773) {          val x2774: Int = x2761.toInt
          val x2775: Unit = throw new ArrayIndexOutOfBoundsException(x2774)
x2775} else {()}
          val x2777: Long = 4 * x2761
          val x2778: Long = 24 + x2777
          val x2779: Int = unsafe.getInt(x2760,x2778)
          val x2780: Boolean = x2779 < p11_3
          val x2783: Unit = if (x2780) {          val x2781: Unit = block_539(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2781} else {          val x2782: Unit = block_540(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2782}
x2783
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_532(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2784: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2785: Long = 0.toLong
          val x2786: Boolean = x2784 eq null
          val x2788: Object = if (x2786) {          val x2787: Object = throw new NullPointerException()
x2787} else {x2784}
          val x2789: java.lang.Class[_ <: Any] = x2784.getClass()
          val x2790: Boolean = !x2789.isArray()
          val x2792: Unit = if (x2790) {          val x2791: Unit = throw new ArrayStoreException(x2789.getName())
x2791} else {()}
          val x2793: Boolean = x2785 < 0
          val x2797: Boolean = if (x2793) {x2793} else {          val x2794: Int = java.lang.reflect.Array.getLength(x2784)
          val x2795: Long = x2794.toLong
          val x2796: Boolean = x2785 >= x2795
x2796}
          val x2800: Unit = if (x2797) {          val x2798: Int = x2785.toInt
          val x2799: Unit = throw new ArrayIndexOutOfBoundsException(x2798)
x2799} else {()}
          val x2801: Long = 4 * x2785
          val x2802: Long = 24 + x2801
          val x2803: Int = unsafe.getInt(x2784,x2802)
          val x2804: Boolean = x2803 < p11_3
          val x2807: Unit = if (x2804) {          val x2805: Unit = block_541(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2805} else {          val x2806: Unit = block_542(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2806}
x2807
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_533(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2808: Unit = block_543(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2808
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_534(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2809: Boolean = 65536 > p11_3
          val x2812: Unit = if (x2809) {          val x2810: Unit = block_544(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2810} else {          val x2811: Unit = block_545(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2811}
x2812
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_535(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2813: Int = -p11_3
          val x2814: Boolean = 65536 > x2813
          val x2817: Unit = if (x2814) {          val x2815: Unit = block_544(r,p11_0,p11_1,p11_2,x2813,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2815} else {          val x2816: Unit = block_545(r,p11_0,p11_1,p11_2,x2813,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2816}
x2817
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_536(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2818: Int = 52429 * p11_3
          val x2819: Int = x2818 >>> 19
          val x2820: Int = x2819 << 3
          val x2821: Int = x2819 << 1
          val x2822: Int = x2821 + x2820
          val x2823: Int = -x2822
          val x2824: Int = x2823 + p11_3
          val x2825: Int = p11_8 + -1
          val x2826: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x2827: Long = x2824.toLong
          val x2828: Boolean = x2826 eq null
          val x2830: Object = if (x2828) {          val x2829: Object = throw new NullPointerException()
x2829} else {x2826}
          val x2831: java.lang.Class[_ <: Any] = x2826.getClass()
          val x2832: Boolean = !x2831.isArray()
          val x2834: Unit = if (x2832) {          val x2833: Unit = throw new ArrayStoreException(x2831.getName())
x2833} else {()}
          val x2835: Boolean = x2827 < 0
          val x2839: Boolean = if (x2835) {x2835} else {          val x2836: Int = java.lang.reflect.Array.getLength(x2826)
          val x2837: Long = x2836.toLong
          val x2838: Boolean = x2827 >= x2837
x2838}
          val x2842: Unit = if (x2839) {          val x2840: Int = x2827.toInt
          val x2841: Unit = throw new ArrayIndexOutOfBoundsException(x2840)
x2841} else {()}
          val x2843: Long = 2 * x2827
          val x2844: Long = 24 + x2843
          val x2845: Char = unsafe.getChar(x2826,x2844)
          val x2846: Int = x2845.toInt
          val x2847: Char = x2846.toChar
          val x2848: Long = x2825.toLong
          val x2849: Boolean = p11_5 eq null
          val x2851: Object = if (x2849) {          val x2850: Object = throw new NullPointerException()
x2850} else {p11_5}
          val x2852: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x2853: Boolean = !x2852.isArray()
          val x2855: Unit = if (x2853) {          val x2854: Unit = throw new ArrayStoreException(x2852.getName())
x2854} else {()}
          val x2856: Boolean = x2848 < 0
          val x2860: Boolean = if (x2856) {x2856} else {          val x2857: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2858: Long = x2857.toLong
          val x2859: Boolean = x2848 >= x2858
x2859}
          val x2863: Unit = if (x2860) {          val x2861: Int = x2848.toInt
          val x2862: Unit = throw new ArrayIndexOutOfBoundsException(x2861)
x2862} else {()}
          val x2864: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x2866: Unit = if (x2864) {          val x2865: Unit = throw new ArrayStoreException("char")
x2865} else {()}
          val x2867: Long = 2 * x2848
          val x2868: Long = 24 + x2867
          val x2869: Unit = unsafe.putChar(p11_5,x2868, x2847)
          val x2872: Unit = if (CONST_4) {          val x2870: Unit = block_536(r,p11_0,p11_1,p11_2,x2819,p11_4,p11_5,x2819,x2824,x2825,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2870} else {          val x2871: Unit = block_546(r,p11_0,p11_1,p11_2,x2819,p11_4,p11_5,x2819,x2824,x2825,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2871}
x2872
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_537(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2873: Int = p11_3 / 100
          val x2874: Int = x2873 << 6
          val x2875: Int = x2873 << 5
          val x2876: Int = x2875 + x2874
          val x2877: Int = x2873 << 2
          val x2878: Int = x2877 + x2876
          val x2879: Int = -x2878
          val x2880: Int = x2879 + p11_3
          val x2881: Int = p11_8 + -1
          val x2882: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x2883: Long = x2880.toLong
          val x2884: Boolean = x2882 eq null
          val x2886: Object = if (x2884) {          val x2885: Object = throw new NullPointerException()
x2885} else {x2882}
          val x2887: java.lang.Class[_ <: Any] = x2882.getClass()
          val x2888: Boolean = !x2887.isArray()
          val x2890: Unit = if (x2888) {          val x2889: Unit = throw new ArrayStoreException(x2887.getName())
x2889} else {()}
          val x2891: Boolean = x2883 < 0
          val x2895: Boolean = if (x2891) {x2891} else {          val x2892: Int = java.lang.reflect.Array.getLength(x2882)
          val x2893: Long = x2892.toLong
          val x2894: Boolean = x2883 >= x2893
x2894}
          val x2898: Unit = if (x2895) {          val x2896: Int = x2883.toInt
          val x2897: Unit = throw new ArrayIndexOutOfBoundsException(x2896)
x2897} else {()}
          val x2899: Long = 2 * x2883
          val x2900: Long = 24 + x2899
          val x2901: Char = unsafe.getChar(x2882,x2900)
          val x2902: Int = x2901.toInt
          val x2903: Char = x2902.toChar
          val x2904: Long = x2881.toLong
          val x2905: Boolean = p11_5 eq null
          val x2907: Object = if (x2905) {          val x2906: Object = throw new NullPointerException()
x2906} else {p11_5}
          val x2908: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x2909: Boolean = !x2908.isArray()
          val x2911: Unit = if (x2909) {          val x2910: Unit = throw new ArrayStoreException(x2908.getName())
x2910} else {()}
          val x2912: Boolean = x2904 < 0
          val x2916: Boolean = if (x2912) {x2912} else {          val x2913: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2914: Long = x2913.toLong
          val x2915: Boolean = x2904 >= x2914
x2915}
          val x2919: Unit = if (x2916) {          val x2917: Int = x2904.toInt
          val x2918: Unit = throw new ArrayIndexOutOfBoundsException(x2917)
x2918} else {()}
          val x2920: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x2922: Unit = if (x2920) {          val x2921: Unit = throw new ArrayStoreException("char")
x2921} else {()}
          val x2923: Long = 2 * x2904
          val x2924: Long = 24 + x2923
          val x2925: Unit = unsafe.putChar(p11_5,x2924, x2903)
          val x2926: Int = x2881 + -1
          val x2927: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x2928: Long = x2880.toLong
          val x2929: Boolean = x2927 eq null
          val x2931: Object = if (x2929) {          val x2930: Object = throw new NullPointerException()
x2930} else {x2927}
          val x2932: java.lang.Class[_ <: Any] = x2927.getClass()
          val x2933: Boolean = !x2932.isArray()
          val x2935: Unit = if (x2933) {          val x2934: Unit = throw new ArrayStoreException(x2932.getName())
x2934} else {()}
          val x2936: Boolean = x2928 < 0
          val x2940: Boolean = if (x2936) {x2936} else {          val x2937: Int = java.lang.reflect.Array.getLength(x2927)
          val x2938: Long = x2937.toLong
          val x2939: Boolean = x2928 >= x2938
x2939}
          val x2943: Unit = if (x2940) {          val x2941: Int = x2928.toInt
          val x2942: Unit = throw new ArrayIndexOutOfBoundsException(x2941)
x2942} else {()}
          val x2944: Long = 2 * x2928
          val x2945: Long = 24 + x2944
          val x2946: Char = unsafe.getChar(x2927,x2945)
          val x2947: Int = x2946.toInt
          val x2948: Char = x2947.toChar
          val x2949: Long = x2926.toLong
          val x2950: Boolean = p11_5 eq null
          val x2952: Object = if (x2950) {          val x2951: Object = throw new NullPointerException()
x2951} else {p11_5}
          val x2953: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x2954: Boolean = !x2953.isArray()
          val x2956: Unit = if (x2954) {          val x2955: Unit = throw new ArrayStoreException(x2953.getName())
x2955} else {()}
          val x2957: Boolean = x2949 < 0
          val x2961: Boolean = if (x2957) {x2957} else {          val x2958: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2959: Long = x2958.toLong
          val x2960: Boolean = x2949 >= x2959
x2960}
          val x2964: Unit = if (x2961) {          val x2962: Int = x2949.toInt
          val x2963: Unit = throw new ArrayIndexOutOfBoundsException(x2962)
x2963} else {()}
          val x2965: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x2967: Unit = if (x2965) {          val x2966: Unit = throw new ArrayStoreException("char")
x2966} else {()}
          val x2968: Long = 2 * x2949
          val x2969: Long = 24 + x2968
          val x2970: Unit = unsafe.putChar(p11_5,x2969, x2948)
          val x2971: Unit = block_527(r,p11_0,p11_1,p11_2,x2873,p11_4,p11_5,x2873,x2880,x2926,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2971
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_538(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2972: Unit = block_547(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2972
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_539(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2973: Int = p11_4 + 1
          val x2974: Unit = block_548(r,p11_0,p11_1,p11_2,p11_3,x2973,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2974
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_540(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2975: Int = 1 + p11_4
          val x2976: Unit = block_549(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2975,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2976
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_541(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2977: Int = p11_4 + 1
          val x2978: Unit = block_550(r,p11_0,p11_1,p11_2,p11_3,x2977,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2978
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_542(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2979: Int = 1 + p11_4
          val x2980: Unit = block_551(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2979,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2980
}
// *** begin block 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_543(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2981: Boolean = p8_10 eq null
          val x2983: Object = if (x2981) {          val x2982: Object = throw new NullPointerException()
x2982} else {p8_10}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2984: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2984
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_544(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2985: Int = 52429 * p11_3
          val x2986: Int = x2985 >>> 19
          val x2987: Int = x2986 << 3
          val x2988: Int = x2986 << 1
          val x2989: Int = x2988 + x2987
          val x2990: Int = -x2989
          val x2991: Int = x2990 + p11_3
          val x2992: Int = p11_8 + -1
          val x2993: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x2994: Long = x2991.toLong
          val x2995: Boolean = x2993 eq null
          val x2997: Object = if (x2995) {          val x2996: Object = throw new NullPointerException()
x2996} else {x2993}
          val x2998: java.lang.Class[_ <: Any] = x2993.getClass()
          val x2999: Boolean = !x2998.isArray()
          val x3001: Unit = if (x2999) {          val x3000: Unit = throw new ArrayStoreException(x2998.getName())
x3000} else {()}
          val x3002: Boolean = x2994 < 0
          val x3006: Boolean = if (x3002) {x3002} else {          val x3003: Int = java.lang.reflect.Array.getLength(x2993)
          val x3004: Long = x3003.toLong
          val x3005: Boolean = x2994 >= x3004
x3005}
          val x3009: Unit = if (x3006) {          val x3007: Int = x2994.toInt
          val x3008: Unit = throw new ArrayIndexOutOfBoundsException(x3007)
x3008} else {()}
          val x3010: Long = 2 * x2994
          val x3011: Long = 24 + x3010
          val x3012: Char = unsafe.getChar(x2993,x3011)
          val x3013: Int = x3012.toInt
          val x3014: Char = x3013.toChar
          val x3015: Long = x2992.toLong
          val x3016: Boolean = p11_5 eq null
          val x3018: Object = if (x3016) {          val x3017: Object = throw new NullPointerException()
x3017} else {p11_5}
          val x3019: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3020: Boolean = !x3019.isArray()
          val x3022: Unit = if (x3020) {          val x3021: Unit = throw new ArrayStoreException(x3019.getName())
x3021} else {()}
          val x3023: Boolean = x3015 < 0
          val x3027: Boolean = if (x3023) {x3023} else {          val x3024: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3025: Long = x3024.toLong
          val x3026: Boolean = x3015 >= x3025
x3026}
          val x3030: Unit = if (x3027) {          val x3028: Int = x3015.toInt
          val x3029: Unit = throw new ArrayIndexOutOfBoundsException(x3028)
x3029} else {()}
          val x3031: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3033: Unit = if (x3031) {          val x3032: Unit = throw new ArrayStoreException("char")
x3032} else {()}
          val x3034: Long = 2 * x3015
          val x3035: Long = 24 + x3034
          val x3036: Unit = unsafe.putChar(p11_5,x3035, x3014)
          val x3039: Unit = if (CONST_4) {          val x3037: Unit = block_544(r,p11_0,p11_1,p11_2,x2986,p11_4,p11_5,x2986,x2991,x2992,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3037} else {          val x3038: Unit = block_552(r,p11_0,p11_1,p11_2,x2986,p11_4,p11_5,x2986,x2991,x2992,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3038}
x3039
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_545(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3040: Int = p11_3 / 100
          val x3041: Int = x3040 << 6
          val x3042: Int = x3040 << 5
          val x3043: Int = x3042 + x3041
          val x3044: Int = x3040 << 2
          val x3045: Int = x3044 + x3043
          val x3046: Int = -x3045
          val x3047: Int = x3046 + p11_3
          val x3048: Int = p11_8 + -1
          val x3049: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x3050: Long = x3047.toLong
          val x3051: Boolean = x3049 eq null
          val x3053: Object = if (x3051) {          val x3052: Object = throw new NullPointerException()
x3052} else {x3049}
          val x3054: java.lang.Class[_ <: Any] = x3049.getClass()
          val x3055: Boolean = !x3054.isArray()
          val x3057: Unit = if (x3055) {          val x3056: Unit = throw new ArrayStoreException(x3054.getName())
x3056} else {()}
          val x3058: Boolean = x3050 < 0
          val x3062: Boolean = if (x3058) {x3058} else {          val x3059: Int = java.lang.reflect.Array.getLength(x3049)
          val x3060: Long = x3059.toLong
          val x3061: Boolean = x3050 >= x3060
x3061}
          val x3065: Unit = if (x3062) {          val x3063: Int = x3050.toInt
          val x3064: Unit = throw new ArrayIndexOutOfBoundsException(x3063)
x3064} else {()}
          val x3066: Long = 2 * x3050
          val x3067: Long = 24 + x3066
          val x3068: Char = unsafe.getChar(x3049,x3067)
          val x3069: Int = x3068.toInt
          val x3070: Char = x3069.toChar
          val x3071: Long = x3048.toLong
          val x3072: Boolean = p11_5 eq null
          val x3074: Object = if (x3072) {          val x3073: Object = throw new NullPointerException()
x3073} else {p11_5}
          val x3075: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3076: Boolean = !x3075.isArray()
          val x3078: Unit = if (x3076) {          val x3077: Unit = throw new ArrayStoreException(x3075.getName())
x3077} else {()}
          val x3079: Boolean = x3071 < 0
          val x3083: Boolean = if (x3079) {x3079} else {          val x3080: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3081: Long = x3080.toLong
          val x3082: Boolean = x3071 >= x3081
x3082}
          val x3086: Unit = if (x3083) {          val x3084: Int = x3071.toInt
          val x3085: Unit = throw new ArrayIndexOutOfBoundsException(x3084)
x3085} else {()}
          val x3087: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3089: Unit = if (x3087) {          val x3088: Unit = throw new ArrayStoreException("char")
x3088} else {()}
          val x3090: Long = 2 * x3071
          val x3091: Long = 24 + x3090
          val x3092: Unit = unsafe.putChar(p11_5,x3091, x3070)
          val x3093: Int = x3048 + -1
          val x3094: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x3095: Long = x3047.toLong
          val x3096: Boolean = x3094 eq null
          val x3098: Object = if (x3096) {          val x3097: Object = throw new NullPointerException()
x3097} else {x3094}
          val x3099: java.lang.Class[_ <: Any] = x3094.getClass()
          val x3100: Boolean = !x3099.isArray()
          val x3102: Unit = if (x3100) {          val x3101: Unit = throw new ArrayStoreException(x3099.getName())
x3101} else {()}
          val x3103: Boolean = x3095 < 0
          val x3107: Boolean = if (x3103) {x3103} else {          val x3104: Int = java.lang.reflect.Array.getLength(x3094)
          val x3105: Long = x3104.toLong
          val x3106: Boolean = x3095 >= x3105
x3106}
          val x3110: Unit = if (x3107) {          val x3108: Int = x3095.toInt
          val x3109: Unit = throw new ArrayIndexOutOfBoundsException(x3108)
x3109} else {()}
          val x3111: Long = 2 * x3095
          val x3112: Long = 24 + x3111
          val x3113: Char = unsafe.getChar(x3094,x3112)
          val x3114: Int = x3113.toInt
          val x3115: Char = x3114.toChar
          val x3116: Long = x3093.toLong
          val x3117: Boolean = p11_5 eq null
          val x3119: Object = if (x3117) {          val x3118: Object = throw new NullPointerException()
x3118} else {p11_5}
          val x3120: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3121: Boolean = !x3120.isArray()
          val x3123: Unit = if (x3121) {          val x3122: Unit = throw new ArrayStoreException(x3120.getName())
x3122} else {()}
          val x3124: Boolean = x3116 < 0
          val x3128: Boolean = if (x3124) {x3124} else {          val x3125: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3126: Long = x3125.toLong
          val x3127: Boolean = x3116 >= x3126
x3127}
          val x3131: Unit = if (x3128) {          val x3129: Int = x3116.toInt
          val x3130: Unit = throw new ArrayIndexOutOfBoundsException(x3129)
x3130} else {()}
          val x3132: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3134: Unit = if (x3132) {          val x3133: Unit = throw new ArrayStoreException("char")
x3133} else {()}
          val x3135: Long = 2 * x3116
          val x3136: Long = 24 + x3135
          val x3137: Unit = unsafe.putChar(p11_5,x3136, x3115)
          val x3138: Unit = block_534(r,p11_0,p11_1,p11_2,x3040,p11_4,p11_5,x3040,x3047,x3093,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3138
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_546(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3139: Unit = block_553(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3139
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_547(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3142: Unit = if (CONST_10) {          val x3140: Unit = block_554(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3140} else {          val x3141: Unit = block_555(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3141}
x3142
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_548(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3143: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x3144: Long = p11_4.toLong
          val x3145: Boolean = x3143 eq null
          val x3147: Object = if (x3145) {          val x3146: Object = throw new NullPointerException()
x3146} else {x3143}
          val x3148: java.lang.Class[_ <: Any] = x3143.getClass()
          val x3149: Boolean = !x3148.isArray()
          val x3151: Unit = if (x3149) {          val x3150: Unit = throw new ArrayStoreException(x3148.getName())
x3150} else {()}
          val x3152: Boolean = x3144 < 0
          val x3156: Boolean = if (x3152) {x3152} else {          val x3153: Int = java.lang.reflect.Array.getLength(x3143)
          val x3154: Long = x3153.toLong
          val x3155: Boolean = x3144 >= x3154
x3155}
          val x3159: Unit = if (x3156) {          val x3157: Int = x3144.toInt
          val x3158: Unit = throw new ArrayIndexOutOfBoundsException(x3157)
x3158} else {()}
          val x3160: Long = 4 * x3144
          val x3161: Long = 24 + x3160
          val x3162: Int = unsafe.getInt(x3143,x3161)
          val x3163: Boolean = x3162 < p11_3
          val x3166: Unit = if (x3163) {          val x3164: Unit = block_539(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3164} else {          val x3165: Unit = block_540(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3165}
x3166
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_549(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3167: Boolean = p10_3 eq null
          val x3169: Object = if (x3167) {          val x3168: Object = throw new NullPointerException()
x3168} else {p10_3}
          val x3170: Int = unsafe.getInt(x3169,16)
          val x3171: Int = p10_7 + x3170
          val x3172: Boolean = p10_3 eq null
          val x3174: Object = if (x3172) {          val x3173: Object = throw new NullPointerException()
x3173} else {p10_3}
          val x3175: Unit = block_556(null,null,null,null,p10_3,x3171,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x3171,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3175
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_550(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3176: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x3177: Long = p11_4.toLong
          val x3178: Boolean = x3176 eq null
          val x3180: Object = if (x3178) {          val x3179: Object = throw new NullPointerException()
x3179} else {x3176}
          val x3181: java.lang.Class[_ <: Any] = x3176.getClass()
          val x3182: Boolean = !x3181.isArray()
          val x3184: Unit = if (x3182) {          val x3183: Unit = throw new ArrayStoreException(x3181.getName())
x3183} else {()}
          val x3185: Boolean = x3177 < 0
          val x3189: Boolean = if (x3185) {x3185} else {          val x3186: Int = java.lang.reflect.Array.getLength(x3176)
          val x3187: Long = x3186.toLong
          val x3188: Boolean = x3177 >= x3187
x3188}
          val x3192: Unit = if (x3189) {          val x3190: Int = x3177.toInt
          val x3191: Unit = throw new ArrayIndexOutOfBoundsException(x3190)
x3191} else {()}
          val x3193: Long = 4 * x3177
          val x3194: Long = 24 + x3193
          val x3195: Int = unsafe.getInt(x3176,x3194)
          val x3196: Boolean = x3195 < p11_3
          val x3199: Unit = if (x3196) {          val x3197: Unit = block_541(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3197} else {          val x3198: Unit = block_542(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3198}
x3199
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_551(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3200: Int = 1 + p10_7
          val x3201: Unit = block_549(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3200,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3201
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_552(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3202: Unit = block_557(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3202
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_553(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3205: Unit = if (CONST_10) {          val x3203: Unit = block_558(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3203} else {          val x3204: Unit = block_559(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3204}
x3205
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_554(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3206: Unit = block_560(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3206
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_555(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3207: Int = p11_8 + -1
          val x3208: Char = p11_9.toChar
          val x3209: Long = x3207.toLong
          val x3210: Boolean = p11_5 eq null
          val x3212: Object = if (x3210) {          val x3211: Object = throw new NullPointerException()
x3211} else {p11_5}
          val x3213: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3214: Boolean = !x3213.isArray()
          val x3216: Unit = if (x3214) {          val x3215: Unit = throw new ArrayStoreException(x3213.getName())
x3215} else {()}
          val x3217: Boolean = x3209 < 0
          val x3221: Boolean = if (x3217) {x3217} else {          val x3218: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3219: Long = x3218.toLong
          val x3220: Boolean = x3209 >= x3219
x3220}
          val x3224: Unit = if (x3221) {          val x3222: Int = x3209.toInt
          val x3223: Unit = throw new ArrayIndexOutOfBoundsException(x3222)
x3223} else {()}
          val x3225: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3227: Unit = if (x3225) {          val x3226: Unit = throw new ArrayStoreException("char")
x3226} else {()}
          val x3228: Long = 2 * x3209
          val x3229: Long = 24 + x3228
          val x3230: Unit = unsafe.putChar(p11_5,x3229, x3208)
          val x3231: Unit = block_560(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3231
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_556(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3232: Boolean = p11_3 eq null
          val x3234: Object = if (x3232) {          val x3233: Object = throw new NullPointerException()
x3233} else {p11_3}
          val x3235: Object = unsafe.getObject(x3234,24)
          val x3236: Boolean = x3235 eq null
          val x3238: Object = if (x3236) {          val x3237: Object = throw new NullPointerException()
x3237} else {x3235}
          val x3239: Int = java.lang.reflect.Array.getLength(x3238)
          val x3240: Int = -x3239
          val x3241: Int = x3240 + p11_4
          val x3242: Boolean = x3241 <= 0
          val x3245: Unit = if (x3242) {          val x3243: Unit = block_561(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3243} else {          val x3244: Unit = block_562(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3244}
x3245
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_557(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3248: Unit = if (CONST_10) {          val x3246: Unit = block_563(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3246} else {          val x3247: Unit = block_564(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3247}
x3248
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_558(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3249: Unit = block_565(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3249
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_559(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3250: Int = p11_8 + -1
          val x3251: Char = p11_9.toChar
          val x3252: Long = x3250.toLong
          val x3253: Boolean = p11_5 eq null
          val x3255: Object = if (x3253) {          val x3254: Object = throw new NullPointerException()
x3254} else {p11_5}
          val x3256: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3257: Boolean = !x3256.isArray()
          val x3259: Unit = if (x3257) {          val x3258: Unit = throw new ArrayStoreException(x3256.getName())
x3258} else {()}
          val x3260: Boolean = x3252 < 0
          val x3264: Boolean = if (x3260) {x3260} else {          val x3261: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3262: Long = x3261.toLong
          val x3263: Boolean = x3252 >= x3262
x3263}
          val x3267: Unit = if (x3264) {          val x3265: Int = x3252.toInt
          val x3266: Unit = throw new ArrayIndexOutOfBoundsException(x3265)
x3266} else {()}
          val x3268: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3270: Unit = if (x3268) {          val x3269: Unit = throw new ArrayStoreException("char")
x3269} else {()}
          val x3271: Long = 2 * x3252
          val x3272: Long = 24 + x3271
          val x3273: Unit = unsafe.putChar(p11_5,x3272, x3251)
          val x3274: Unit = block_565(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3274
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_560(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3275: Boolean = p10_3 eq null
          val x3277: Object = if (x3275) {          val x3276: Object = throw new NullPointerException()
x3276} else {p10_3}
          val x3278: Unit = unsafe.putInt(x3277,16, p10_6)
          val x3279: Unit = block_444(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3279
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_561(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3280: Unit = block_566(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3280
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_562(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3281: Boolean = p11_3 eq null
          val x3283: Object = if (x3281) {          val x3282: Object = throw new NullPointerException()
x3282} else {p11_3}
          val x3284: Unit = CONST_5.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x3285: Unit = block_561(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3285
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_563(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3286: Unit = block_567(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3286
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_564(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3287: Int = p11_8 + -1
          val x3288: Char = p11_9.toChar
          val x3289: Long = x3287.toLong
          val x3290: Boolean = p11_5 eq null
          val x3292: Object = if (x3290) {          val x3291: Object = throw new NullPointerException()
x3291} else {p11_5}
          val x3293: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3294: Boolean = !x3293.isArray()
          val x3296: Unit = if (x3294) {          val x3295: Unit = throw new ArrayStoreException(x3293.getName())
x3295} else {()}
          val x3297: Boolean = x3289 < 0
          val x3301: Boolean = if (x3297) {x3297} else {          val x3298: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3299: Long = x3298.toLong
          val x3300: Boolean = x3289 >= x3299
x3300}
          val x3304: Unit = if (x3301) {          val x3302: Int = x3289.toInt
          val x3303: Unit = throw new ArrayIndexOutOfBoundsException(x3302)
x3303} else {()}
          val x3305: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3307: Unit = if (x3305) {          val x3306: Unit = throw new ArrayStoreException("char")
x3306} else {()}
          val x3308: Long = 2 * x3289
          val x3309: Long = 24 + x3308
          val x3310: Unit = unsafe.putChar(p11_5,x3309, x3288)
          val x3311: Unit = block_567(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3311
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_565(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3312: Boolean = p10_3 eq null
          val x3314: Object = if (x3312) {          val x3313: Object = throw new NullPointerException()
x3313} else {p10_3}
          val x3315: Unit = unsafe.putInt(x3314,16, p10_6)
          val x3316: Unit = block_454(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3316
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_566(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3317: Boolean = p10_3 eq null
          val x3319: Object = if (x3317) {          val x3318: Object = throw new NullPointerException()
x3318} else {p10_3}
          val x3320: Object = unsafe.getObject(x3319,24)
          val x3321: Unit = block_568(null,null,null,null,p10_4,p10_6,x3320,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3321
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_567(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3322: Boolean = p10_3 eq null
          val x3324: Object = if (x3322) {          val x3323: Object = throw new NullPointerException()
x3323} else {p10_3}
          val x3325: Unit = unsafe.putInt(x3324,16, p10_6)
          val x3326: Unit = block_466(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3326
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_568(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3327: Boolean = p11_3 >= 0
          val x3330: Unit = if (x3327) {          val x3328: Unit = block_569(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3328} else {          val x3329: Unit = block_570(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3329}
x3330
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_569(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3331: Boolean = 65536 > p11_3
          val x3334: Unit = if (x3331) {          val x3332: Unit = block_571(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3332} else {          val x3333: Unit = block_572(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3333}
x3334
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_570(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3335: Int = -p11_3
          val x3336: Boolean = 65536 > x3335
          val x3339: Unit = if (x3336) {          val x3337: Unit = block_571(r,p11_0,p11_1,p11_2,x3335,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3337} else {          val x3338: Unit = block_572(r,p11_0,p11_1,p11_2,x3335,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3338}
x3339
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_571(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3340: Int = 52429 * p11_3
          val x3341: Int = x3340 >>> 19
          val x3342: Int = x3341 << 3
          val x3343: Int = x3341 << 1
          val x3344: Int = x3343 + x3342
          val x3345: Int = -x3344
          val x3346: Int = x3345 + p11_3
          val x3347: Int = p11_8 + -1
          val x3348: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x3349: Long = x3346.toLong
          val x3350: Boolean = x3348 eq null
          val x3352: Object = if (x3350) {          val x3351: Object = throw new NullPointerException()
x3351} else {x3348}
          val x3353: java.lang.Class[_ <: Any] = x3348.getClass()
          val x3354: Boolean = !x3353.isArray()
          val x3356: Unit = if (x3354) {          val x3355: Unit = throw new ArrayStoreException(x3353.getName())
x3355} else {()}
          val x3357: Boolean = x3349 < 0
          val x3361: Boolean = if (x3357) {x3357} else {          val x3358: Int = java.lang.reflect.Array.getLength(x3348)
          val x3359: Long = x3358.toLong
          val x3360: Boolean = x3349 >= x3359
x3360}
          val x3364: Unit = if (x3361) {          val x3362: Int = x3349.toInt
          val x3363: Unit = throw new ArrayIndexOutOfBoundsException(x3362)
x3363} else {()}
          val x3365: Long = 2 * x3349
          val x3366: Long = 24 + x3365
          val x3367: Char = unsafe.getChar(x3348,x3366)
          val x3368: Int = x3367.toInt
          val x3369: Char = x3368.toChar
          val x3370: Long = x3347.toLong
          val x3371: Boolean = p11_5 eq null
          val x3373: Object = if (x3371) {          val x3372: Object = throw new NullPointerException()
x3372} else {p11_5}
          val x3374: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3375: Boolean = !x3374.isArray()
          val x3377: Unit = if (x3375) {          val x3376: Unit = throw new ArrayStoreException(x3374.getName())
x3376} else {()}
          val x3378: Boolean = x3370 < 0
          val x3382: Boolean = if (x3378) {x3378} else {          val x3379: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3380: Long = x3379.toLong
          val x3381: Boolean = x3370 >= x3380
x3381}
          val x3385: Unit = if (x3382) {          val x3383: Int = x3370.toInt
          val x3384: Unit = throw new ArrayIndexOutOfBoundsException(x3383)
x3384} else {()}
          val x3386: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3388: Unit = if (x3386) {          val x3387: Unit = throw new ArrayStoreException("char")
x3387} else {()}
          val x3389: Long = 2 * x3370
          val x3390: Long = 24 + x3389
          val x3391: Unit = unsafe.putChar(p11_5,x3390, x3369)
          val x3394: Unit = if (CONST_4) {          val x3392: Unit = block_571(r,p11_0,p11_1,p11_2,x3341,p11_4,p11_5,x3341,x3346,x3347,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3392} else {          val x3393: Unit = block_573(r,p11_0,p11_1,p11_2,x3341,p11_4,p11_5,x3341,x3346,x3347,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3393}
x3394
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_572(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3395: Int = p11_3 / 100
          val x3396: Int = x3395 << 6
          val x3397: Int = x3395 << 5
          val x3398: Int = x3397 + x3396
          val x3399: Int = x3395 << 2
          val x3400: Int = x3399 + x3398
          val x3401: Int = -x3400
          val x3402: Int = x3401 + p11_3
          val x3403: Int = p11_8 + -1
          val x3404: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x3405: Long = x3402.toLong
          val x3406: Boolean = x3404 eq null
          val x3408: Object = if (x3406) {          val x3407: Object = throw new NullPointerException()
x3407} else {x3404}
          val x3409: java.lang.Class[_ <: Any] = x3404.getClass()
          val x3410: Boolean = !x3409.isArray()
          val x3412: Unit = if (x3410) {          val x3411: Unit = throw new ArrayStoreException(x3409.getName())
x3411} else {()}
          val x3413: Boolean = x3405 < 0
          val x3417: Boolean = if (x3413) {x3413} else {          val x3414: Int = java.lang.reflect.Array.getLength(x3404)
          val x3415: Long = x3414.toLong
          val x3416: Boolean = x3405 >= x3415
x3416}
          val x3420: Unit = if (x3417) {          val x3418: Int = x3405.toInt
          val x3419: Unit = throw new ArrayIndexOutOfBoundsException(x3418)
x3419} else {()}
          val x3421: Long = 2 * x3405
          val x3422: Long = 24 + x3421
          val x3423: Char = unsafe.getChar(x3404,x3422)
          val x3424: Int = x3423.toInt
          val x3425: Char = x3424.toChar
          val x3426: Long = x3403.toLong
          val x3427: Boolean = p11_5 eq null
          val x3429: Object = if (x3427) {          val x3428: Object = throw new NullPointerException()
x3428} else {p11_5}
          val x3430: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3431: Boolean = !x3430.isArray()
          val x3433: Unit = if (x3431) {          val x3432: Unit = throw new ArrayStoreException(x3430.getName())
x3432} else {()}
          val x3434: Boolean = x3426 < 0
          val x3438: Boolean = if (x3434) {x3434} else {          val x3435: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3436: Long = x3435.toLong
          val x3437: Boolean = x3426 >= x3436
x3437}
          val x3441: Unit = if (x3438) {          val x3439: Int = x3426.toInt
          val x3440: Unit = throw new ArrayIndexOutOfBoundsException(x3439)
x3440} else {()}
          val x3442: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3444: Unit = if (x3442) {          val x3443: Unit = throw new ArrayStoreException("char")
x3443} else {()}
          val x3445: Long = 2 * x3426
          val x3446: Long = 24 + x3445
          val x3447: Unit = unsafe.putChar(p11_5,x3446, x3425)
          val x3448: Int = x3403 + -1
          val x3449: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x3450: Long = x3402.toLong
          val x3451: Boolean = x3449 eq null
          val x3453: Object = if (x3451) {          val x3452: Object = throw new NullPointerException()
x3452} else {x3449}
          val x3454: java.lang.Class[_ <: Any] = x3449.getClass()
          val x3455: Boolean = !x3454.isArray()
          val x3457: Unit = if (x3455) {          val x3456: Unit = throw new ArrayStoreException(x3454.getName())
x3456} else {()}
          val x3458: Boolean = x3450 < 0
          val x3462: Boolean = if (x3458) {x3458} else {          val x3459: Int = java.lang.reflect.Array.getLength(x3449)
          val x3460: Long = x3459.toLong
          val x3461: Boolean = x3450 >= x3460
x3461}
          val x3465: Unit = if (x3462) {          val x3463: Int = x3450.toInt
          val x3464: Unit = throw new ArrayIndexOutOfBoundsException(x3463)
x3464} else {()}
          val x3466: Long = 2 * x3450
          val x3467: Long = 24 + x3466
          val x3468: Char = unsafe.getChar(x3449,x3467)
          val x3469: Int = x3468.toInt
          val x3470: Char = x3469.toChar
          val x3471: Long = x3448.toLong
          val x3472: Boolean = p11_5 eq null
          val x3474: Object = if (x3472) {          val x3473: Object = throw new NullPointerException()
x3473} else {p11_5}
          val x3475: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3476: Boolean = !x3475.isArray()
          val x3478: Unit = if (x3476) {          val x3477: Unit = throw new ArrayStoreException(x3475.getName())
x3477} else {()}
          val x3479: Boolean = x3471 < 0
          val x3483: Boolean = if (x3479) {x3479} else {          val x3480: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3481: Long = x3480.toLong
          val x3482: Boolean = x3471 >= x3481
x3482}
          val x3486: Unit = if (x3483) {          val x3484: Int = x3471.toInt
          val x3485: Unit = throw new ArrayIndexOutOfBoundsException(x3484)
x3485} else {()}
          val x3487: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3489: Unit = if (x3487) {          val x3488: Unit = throw new ArrayStoreException("char")
x3488} else {()}
          val x3490: Long = 2 * x3471
          val x3491: Long = 24 + x3490
          val x3492: Unit = unsafe.putChar(p11_5,x3491, x3470)
          val x3493: Unit = block_569(r,p11_0,p11_1,p11_2,x3395,p11_4,p11_5,x3395,x3402,x3448,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3493
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_573(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3494: Unit = block_574(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3494
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_574(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3497: Unit = if (CONST_10) {          val x3495: Unit = block_575(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3495} else {          val x3496: Unit = block_576(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3496}
x3497
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_575(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3498: Unit = block_577(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3498
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_576(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3499: Int = p11_8 + -1
          val x3500: Char = p11_9.toChar
          val x3501: Long = x3499.toLong
          val x3502: Boolean = p11_5 eq null
          val x3504: Object = if (x3502) {          val x3503: Object = throw new NullPointerException()
x3503} else {p11_5}
          val x3505: java.lang.Class[_ <: Any] = p11_5.getClass()
          val x3506: Boolean = !x3505.isArray()
          val x3508: Unit = if (x3506) {          val x3507: Unit = throw new ArrayStoreException(x3505.getName())
x3507} else {()}
          val x3509: Boolean = x3501 < 0
          val x3513: Boolean = if (x3509) {x3509} else {          val x3510: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3511: Long = x3510.toLong
          val x3512: Boolean = x3501 >= x3511
x3512}
          val x3516: Unit = if (x3513) {          val x3514: Int = x3501.toInt
          val x3515: Unit = throw new ArrayIndexOutOfBoundsException(x3514)
x3515} else {()}
          val x3517: Boolean = !p11_5.getClass().getComponentType().isAssignableFrom(classOf[char])
          val x3519: Unit = if (x3517) {          val x3518: Unit = throw new ArrayStoreException("char")
x3518} else {()}
          val x3520: Long = 2 * x3501
          val x3521: Long = 24 + x3520
          val x3522: Unit = unsafe.putChar(p11_5,x3521, x3500)
          val x3523: Unit = block_577(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3523
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_577(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3524: Boolean = p10_3 eq null
          val x3526: Object = if (x3524) {          val x3525: Object = throw new NullPointerException()
x3525} else {p10_3}
          val x3527: Unit = unsafe.putInt(x3526,16, p10_6)
          val x3528: Unit = block_533(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3528
}

}; BODY.RES }
}

warning: there were 156 deprecation warnings; re-run with -deprecation for details
one warning found
compilation: ok
hello: 8
9
