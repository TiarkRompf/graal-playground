// constants: <function1>,playground.interpreter.BytecodeInterpreter_Simple@39538fbc,HotSpotMethod<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>,Array(CONST_0, x0),void java.lang.AbstractStringBuilder.expandCapacity(int),public java.lang.String java.lang.Object.toString(),public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(),public void java.io.PrintStream.println(java.lang.String),public java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder.append(java.lang.String)
class Generated(CONST_0: playground.interpreter.TestInterpreter1$$anonfun$testB$1$$anonfun$1,CONST_1: playground.interpreter.BytecodeInterpreter_Simple,CONST_2: com.oracle.graal.hotspot.meta.HotSpotResolvedJavaMethod,CONST_3: Array[playground.interpreter.Base_Simple$Rep],CONST_4: java.lang.reflect.Method,CONST_5: java.lang.reflect.Method,CONST_6: java.lang.reflect.Method,CONST_7: java.lang.reflect.Method,CONST_8: java.lang.reflect.Method) extends (Int=>Int){
import sun.misc.Unsafe
val unsafe = { val fld = classOf[Unsafe].getDeclaredField("theUnsafe"); fld.setAccessible(true); fld.get(classOf[Unsafe]).asInstanceOf[Unsafe]; }
type char = Char
def apply(ARG: Int): Int = { object BODY {
var RES = null.asInstanceOf[Int]
          val x0: Int = ARG
          val x1: Int = x0.asInstanceOf[Int]
          val x2: Unit = block_0(null,null,null,null,CONST_0,x1,null,null) // 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x3: Object = null // stub return value int
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_0(r:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x4: Boolean = p2_3 eq null
          val x6: Object = if (x4) {          val x5: Object = throw new NullPointerException()
x5} else {p2_3}
          val x7: Unit = block_1(null,null,null,null,p2_3,p2_4,null,null,p2_0,p2_1,p2_2,p2_3,p2_4,null,null) // 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x7
}
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_1(r:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x8: Boolean = p3_3 eq null
          val x10: Object = if (x8) {          val x9: Object = throw new NullPointerException()
x9} else {p3_3}
          val x11: Object = unsafe.getObject(x10,16)
          val x12: Boolean = x11 eq null
          val x14: Object = if (x12) {          val x13: Object = throw new NullPointerException()
x13} else {x11}
          val x15: Unit = block_2(null,null,null,null,x11,8,null,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,null,null,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x15
}
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_2(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Any,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x16: Object = unsafe.getObject(Class.forName("java.lang.System"),208)
          val x17: Object = unsafe.allocateInstance(classOf[scala.collection.mutable.StringBuilder])
          val x18: Boolean = x17 eq null
          val x20: Object = if (x18) {          val x19: Object = throw new NullPointerException()
x19} else {x17}
          val x21: Unit = block_3(null,null,null,null,x17,null,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,x16,x17,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x21
}
// *** begin block 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_3(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x22: Boolean = p5_3 eq null
          val x24: Object = if (x22) {          val x23: Object = throw new NullPointerException()
x23} else {p5_3}
          val x25: Unit = block_4(null,null,null,null,p5_3,16,"",null,null,null,null,null,p5_0,p5_1,p5_2,p5_3,null,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x25
}
// *** begin block 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_4(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x26: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x27: Boolean = p6_5 eq null
          val x29: Object = if (x27) {          val x28: Object = throw new NullPointerException()
x28} else {p6_5}
          val x30: Unit = block_5(null,null,null,null,p6_5,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_3,x26,x26,null,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x30
}
// *** begin block 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_5(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Object,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x31: Boolean = p7_3 eq null
          val x33: Object = if (x31) {          val x32: Object = throw new NullPointerException()
x32} else {p7_3}
          val x34: Object = unsafe.getObject(x33,16)
          val x35: Boolean = x34 eq null
          val x37: Object = if (x35) {          val x36: Object = throw new NullPointerException()
x36} else {x34}
          val x38: Int = java.lang.reflect.Array.getLength(x37)
          val x39: Unit = block_6(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,x38,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x39
}
// *** begin block 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_6(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Object,p6_9:Int,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x40: Int = p6_4 + p6_9
          val x41: Boolean = p6_8 eq null
          val x43: Object = if (x41) {          val x42: Object = throw new NullPointerException()
x42} else {p6_8}
          val x44: Unit = block_7(null,null,null,null,p6_8,x40,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,null,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x44
}
// *** begin block 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_7(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x45: Boolean = p7_3 eq null
          val x47: Object = if (x45) {          val x46: Object = throw new NullPointerException()
x46} else {p7_3}
          val x48: Unit = block_8(null,null,null,null,p7_3,p7_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x48
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_8(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x49: Boolean = p8_3 eq null
          val x51: Object = if (x49) {          val x50: Object = throw new NullPointerException()
x50} else {p8_3}
          val x52: Unit = block_9(null,null,null,null,p8_3,p8_0,p8_1,p8_2,p8_3,p8_4,null,p8_6,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x52
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_9(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x53: Unit = block_10(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x53
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_10(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x54: Object = new Array[char](p8_4)
          val x55: Boolean = p8_3 eq null
          val x57: Object = if (x55) {          val x56: Object = throw new NullPointerException()
x56} else {p8_3}
          val x58: Unit = unsafe.putObject(x57,24, x54)
          val x59: Unit = block_11(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x59
}
// *** begin block 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_11(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x60: Unit = block_12(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x60
}
// *** begin block 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_12(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x61: Boolean = p6_7 eq null
          val x63: Object = if (x61) {          val x62: Object = throw new NullPointerException()
x62} else {p6_7}
          val x64: Unit = block_13(null,null,null,null,p6_7,p6_5,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,null,null,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x64
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_13(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x65: Boolean = p7_3 eq null
          val x67: Object = if (x65) {          val x66: Object = throw new NullPointerException()
x66} else {p7_3}
          val x68: Unit = block_14(null,null,null,null,p7_3,p7_4,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x68
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_14(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x71: Unit = if (true) {          val x69: Unit = block_15(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x69} else {          val x70: Unit = block_16(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x70}
x71
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_15(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x72: Boolean = p8_4 eq null
          val x74: Object = if (x72) {          val x73: Object = throw new NullPointerException()
x73} else {p8_4}
          val x75: Unit = block_17(null,null,null,null,p8_4,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x75
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_16(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x76: Boolean = "null" eq null
          val x78: Object = if (x76) {          val x77: Object = throw new NullPointerException()
x77} else {"null"}
          val x79: Unit = block_17(null,null,null,null,"null",null,p8_0,p8_1,p8_2,p8_3,"null",p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x79
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_17(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x80: Boolean = p9_3 eq null
          val x82: Object = if (x80) {          val x81: Object = throw new NullPointerException()
x81} else {p9_3}
          val x83: Object = unsafe.getObject(x82,16)
          val x84: Boolean = x83 eq null
          val x86: Object = if (x84) {          val x85: Object = throw new NullPointerException()
x85} else {x83}
          val x87: Int = java.lang.reflect.Array.getLength(x86)
          val x88: Unit = block_18(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x87,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x88
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_18(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x89: Boolean = p8_3 eq null
          val x91: Object = if (x89) {          val x90: Object = throw new NullPointerException()
x90} else {p8_3}
          val x92: Int = unsafe.getInt(x91,16)
          val x93: Int = p8_6 + x92
          val x94: Boolean = p8_3 eq null
          val x96: Object = if (x94) {          val x95: Object = throw new NullPointerException()
x95} else {p8_3}
          val x97: Unit = block_19(null,null,null,null,p8_3,x93,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_6,null,null,null,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x97
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_19(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x98: Boolean = p9_3 eq null
          val x100: Object = if (x98) {          val x99: Object = throw new NullPointerException()
x99} else {p9_3}
          val x101: Object = unsafe.getObject(x100,24)
          val x102: Boolean = x101 eq null
          val x104: Object = if (x102) {          val x103: Object = throw new NullPointerException()
x103} else {x101}
          val x105: Int = java.lang.reflect.Array.getLength(x104)
          val x106: Int = -x105
          val x107: Int = x106 + p9_4
          val x108: Boolean = x107 <= 0
          val x111: Unit = if (x108) {          val x109: Unit = block_20(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x109} else {          val x110: Unit = block_21(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x110}
x111
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_20(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x112: Unit = block_22(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x112
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_21(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x113: Boolean = p9_3 eq null
          val x115: Object = if (x113) {          val x114: Object = throw new NullPointerException()
x114} else {p9_3}
          val x116: Unit = CONST_4.invoke(p9_3.asInstanceOf[AnyRef],p9_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x117: Unit = block_20(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x117
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_22(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x118: Boolean = p8_3 eq null
          val x120: Object = if (x118) {          val x119: Object = throw new NullPointerException()
x119} else {p8_3}
          val x121: Object = unsafe.getObject(x120,24)
          val x122: Boolean = p8_3 eq null
          val x124: Object = if (x122) {          val x123: Object = throw new NullPointerException()
x123} else {p8_3}
          val x125: Int = unsafe.getInt(x124,16)
          val x126: Boolean = p8_4 eq null
          val x128: Object = if (x126) {          val x127: Object = throw new NullPointerException()
x127} else {p8_4}
          val x129: Unit = block_23(null,null,null,null,p8_4,0,p8_5,x121,x125,null,null,null,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x129
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_23(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x130: Boolean = p9_4 >= 0
          val x133: Unit = if (x130) {          val x131: Unit = block_24(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x131} else {          val x132: Unit = block_25(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x132}
x133
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_24(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x134: Boolean = p9_3 eq null
          val x136: Object = if (x134) {          val x135: Object = throw new NullPointerException()
x135} else {p9_3}
          val x137: Object = unsafe.getObject(x136,16)
          val x138: Boolean = x137 eq null
          val x140: Object = if (x138) {          val x139: Object = throw new NullPointerException()
x139} else {x137}
          val x141: Int = java.lang.reflect.Array.getLength(x140)
          val x142: Boolean = x141 >= p9_5
          val x145: Unit = if (x142) {          val x143: Unit = block_26(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x143} else {          val x144: Unit = block_27(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x144}
x145
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_25(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x146: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x147: Boolean = x146 eq null
          val x149: Object = if (x147) {          val x148: Object = throw new NullPointerException()
x148} else {x146}
          val x150: Unit = block_28(null,null,null,null,x146,p9_4,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x146,null,null,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x150
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_26(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x151: Boolean = p9_5 >= p9_4
          val x154: Unit = if (x151) {          val x152: Unit = block_29(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x152} else {          val x153: Unit = block_30(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x153}
x154
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_27(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x155: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x156: Boolean = x155 eq null
          val x158: Object = if (x156) {          val x157: Object = throw new NullPointerException()
x157} else {x155}
          val x159: Unit = block_31(null,null,null,null,x155,p9_5,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x155,null,null,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x159
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_28(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x160: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x161: Boolean = x160 eq null
          val x163: Object = if (x161) {          val x162: Object = throw new NullPointerException()
x162} else {x160}
          val x164: Unit = block_32(null,null,null,null,x160,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x160,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x164
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_29(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x165: Boolean = p9_3 eq null
          val x167: Object = if (x165) {          val x166: Object = throw new NullPointerException()
x166} else {p9_3}
          val x168: Object = unsafe.getObject(x167,16)
          val x169: Int = -p9_4
          val x170: Int = x169 + p9_5
          val x171: Unit = java.lang.System.arraycopy(x168,p9_4,p9_6,p9_7,x170).asInstanceOf[Object]
          val x172: Unit = block_33(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,null,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x172
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_30(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x173: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x174: Int = -p9_4
          val x175: Int = x174 + p9_5
          val x176: Boolean = x173 eq null
          val x178: Object = if (x176) {          val x177: Object = throw new NullPointerException()
x177} else {x173}
          val x179: Unit = block_34(null,null,null,null,x173,x175,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x173,null,null,null,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x179
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_31(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x180: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x181: Boolean = x180 eq null
          val x183: Object = if (x181) {          val x182: Object = throw new NullPointerException()
x182} else {x180}
          val x184: Unit = block_35(null,null,null,null,x180,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x180,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x184
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_32(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x185: Boolean = p11_3 eq null
          val x187: Object = if (x185) {          val x186: Object = throw new NullPointerException()
x186} else {p11_3}
          val x188: Unit = block_36(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x188
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_33(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x189: Unit = block_37(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x189
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_34(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x190: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x191: Boolean = x190 eq null
          val x193: Object = if (x191) {          val x192: Object = throw new NullPointerException()
x192} else {x190}
          val x194: Unit = block_38(null,null,null,null,x190,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x190,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x194
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_35(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x195: Boolean = p11_3 eq null
          val x197: Object = if (x195) {          val x196: Object = throw new NullPointerException()
x196} else {p11_3}
          val x198: Unit = block_39(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x198
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_36(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x199: Boolean = p12_3 eq null
          val x201: Object = if (x199) {          val x200: Object = throw new NullPointerException()
x200} else {p12_3}
          val x202: Unit = block_40(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x202
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_37(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x203: Boolean = p8_3 eq null
          val x205: Object = if (x203) {          val x204: Object = throw new NullPointerException()
x204} else {p8_3}
          val x206: Int = unsafe.getInt(x205,16)
          val x207: Int = p8_5 + x206
          val x208: Boolean = p8_3 eq null
          val x210: Object = if (x208) {          val x209: Object = throw new NullPointerException()
x209} else {p8_3}
          val x211: Unit = unsafe.putInt(x210,16, x207)
          val x212: Unit = block_41(r,p7_0,p7_1,p7_2,p7_3,p7_4,p8_3,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x212
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_38(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x213: Boolean = p11_3 eq null
          val x215: Object = if (x213) {          val x214: Object = throw new NullPointerException()
x214} else {p11_3}
          val x216: Unit = block_42(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x216
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_39(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x217: Boolean = p12_3 eq null
          val x219: Object = if (x217) {          val x218: Object = throw new NullPointerException()
x218} else {p12_3}
          val x220: Unit = block_43(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x220
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_40(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x221: Unit = block_44(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x221
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_41(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Object,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x222: Unit = block_45(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p7_3,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x222
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_42(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x223: Boolean = p12_3 eq null
          val x225: Object = if (x223) {          val x224: Object = throw new NullPointerException()
x224} else {p12_3}
          val x226: Unit = block_46(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x226
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_43(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x227: Unit = block_47(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x227
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_44(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x228: Object = new Array[char](p12_4)
          val x229: Boolean = p12_3 eq null
          val x231: Object = if (x229) {          val x230: Object = throw new NullPointerException()
x230} else {p12_3}
          val x232: Unit = unsafe.putObject(x231,24, x228)
          val x233: Unit = block_48(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x233
}
// *** begin block 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_45(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x234: Boolean = p6_6 eq null
          val x236: Object = if (x234) {          val x235: Object = throw new NullPointerException()
x235} else {p6_6}
          val x237: Unit = block_49(null,null,null,null,p6_6,p6_7,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,null,null,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x237
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_46(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x238: Unit = block_50(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x238
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_47(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x239: Object = new Array[char](p12_4)
          val x240: Boolean = p12_3 eq null
          val x242: Object = if (x240) {          val x241: Object = throw new NullPointerException()
x241} else {p12_3}
          val x243: Unit = unsafe.putObject(x242,24, x239)
          val x244: Unit = block_51(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x244
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_48(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x245: Unit = block_52(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x245
}
// *** begin block 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_49(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x246: Boolean = p7_3 eq null
          val x248: Object = if (x246) {          val x247: Object = throw new NullPointerException()
x247} else {p7_3}
          val x249: Unit = unsafe.putObject(x248,16, p7_4)
          val x250: Boolean = p7_3 eq null
          val x252: Object = if (x250) {          val x251: Object = throw new NullPointerException()
x251} else {p7_3}
          val x253: Unit = block_53(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x253
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_50(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x254: Object = new Array[char](p12_4)
          val x255: Boolean = p12_3 eq null
          val x257: Object = if (x255) {          val x256: Object = throw new NullPointerException()
x256} else {p12_3}
          val x258: Unit = unsafe.putObject(x257,24, x254)
          val x259: Unit = block_54(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x259
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_51(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x260: Unit = block_55(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x260
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_52(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x261: Boolean = p10_6 eq null
          val x263: Object = if (x261) {          val x262: Object = throw new NullPointerException()
x262} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x264: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x264
}
// *** begin block 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_53(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x265: Unit = block_56(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x265
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_54(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x266: Unit = block_57(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x266
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_55(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x267: Boolean = p10_6 eq null
          val x269: Object = if (x267) {          val x268: Object = throw new NullPointerException()
x268} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x270: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x270
}
// *** begin block 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_56(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x271: Unit = block_58(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x271
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_57(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x272: Boolean = p10_6 eq null
          val x274: Object = if (x272) {          val x273: Object = throw new NullPointerException()
x273} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x275: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x275
}
// *** begin block 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_58(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x276: Unit = block_59(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x276
}
// *** begin block 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_59(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x277: Unit = block_60(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x277
}
// *** begin block 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_60(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x278: Unit = block_61(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x278
}
// *** begin block 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_61(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x279: Unit = block_62(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x279
}
// *** begin block 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_62(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x280: Unit = block_63(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x280
}
// *** begin block 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_63(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x281: Unit = block_64(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x281
}
// *** begin block 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_64(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x282: Unit = block_65(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x282
}
// *** begin block 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_65(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x283: Unit = block_66(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x283
}
// *** begin block 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_66(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x284: Unit = block_67(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x284
}
// *** begin block 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_67(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x285: Unit = block_68(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x285
}
// *** begin block 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_68(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x286: Unit = block_69(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x286
}
// *** begin block 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_69(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x287: Unit = block_70(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x287
}
// *** begin block 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_70(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x288: Unit = block_71(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x288
}
// *** begin block 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_71(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x289: Unit = block_72(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x289
}
// *** begin block 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_72(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x290: Unit = block_73(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x290
}
// *** begin block 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_73(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x291: Unit = block_74(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x291
}
// *** begin block 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_74(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x292: Unit = block_75(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x292
}
// *** begin block 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_75(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x293: Unit = block_76(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x293
}
// *** begin block 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_76(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x294: Unit = block_77(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x294
}
// *** begin block 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_77(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x295: Unit = block_78(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x295
}
// *** begin block 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_78(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x296: Unit = block_79(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x296
}
// *** begin block 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_79(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x297: Unit = block_80(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x297
}
// *** begin block 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_80(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x298: Unit = block_81(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x298
}
// *** begin block 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_81(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x299: Unit = block_82(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x299
}
// *** begin block 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_82(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x300: Unit = block_83(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x300
}
// *** begin block 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_83(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x301: Unit = block_84(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x301
}
// *** begin block 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_84(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x302: Unit = block_85(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x302
}
// *** begin block 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_85(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x303: Unit = block_86(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x303
}
// *** begin block 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_86(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x304: Unit = block_87(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x304
}
// *** begin block 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_87(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x305: Unit = block_88(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x305
}
// *** begin block 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_88(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x306: Unit = block_89(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x306
}
// *** begin block 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_89(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x307: Unit = block_90(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x307
}
// *** begin block 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_90(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x308: Unit = block_91(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x308
}
// *** begin block 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_91(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x309: Unit = block_92(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x309
}
// *** begin block 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_92(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x310: Unit = block_93(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x310
}
// *** begin block 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_93(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x311: Unit = block_94(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x311
}
// *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_94(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x312: Unit = block_95(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x312
}
// *** begin block 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_95(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x313: Unit = block_96(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x313
}
// *** begin block 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_96(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x314: Unit = block_97(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x314
}
// *** begin block 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_97(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x315: Unit = block_98(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x315
}
// *** begin block 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_98(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x316: Unit = block_99(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x316
}
// *** begin block 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_99(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x317: Unit = block_100(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x317
}
// *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_100(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x318: Unit = block_101(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x318
}
// *** begin block 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_101(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x319: Unit = block_102(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x319
}
// *** begin block 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_102(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x320: Unit = block_103(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x320
}
// *** begin block 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_103(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x321: Unit = block_104(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x321
}
// *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_104(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x322: Unit = block_105(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x322
}
// *** begin block 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_105(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x323: Unit = block_106(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x323
}
// *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_106(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x324: Unit = block_107(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x324
}
// *** begin block 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_107(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x325: Unit = block_108(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x325
}
// *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_108(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x326: Unit = block_109(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x326
}
// *** begin block 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_109(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x327: Unit = block_110(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x327
}
// *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_110(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x328: Unit = block_111(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x328
}
// *** begin block 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_111(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x329: Unit = block_112(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x329
}
// *** begin block 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_112(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x330: Unit = block_113(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x330
}
// *** begin block 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_113(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x331: Unit = block_114(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x331
}
// *** begin block 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_114(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x332: Unit = block_115(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x332
}
// *** begin block 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_115(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x333: Unit = block_116(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x333
}
// *** begin block 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_116(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x334: Unit = block_117(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x334
}
// *** begin block 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_117(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x335: Unit = block_118(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x335
}
// *** begin block 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_118(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x336: Unit = block_119(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x336
}
// *** begin block 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_119(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x337: Unit = block_120(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x337
}
// *** begin block 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_120(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x338: Unit = block_121(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x338
}
// *** begin block 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_121(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x339: Unit = block_122(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x339
}
// *** begin block 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_122(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x340: Unit = block_123(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x340
}
// *** begin block 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_123(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x341: Unit = block_124(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x341
}
// *** begin block 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_124(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x342: Boolean = p4_6 eq null
          val x344: Object = if (x342) {          val x343: Object = throw new NullPointerException()
x343} else {p4_6}
          val x345: Unit = block_125(null,null,null,null,p4_6,"hello: ",null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x345
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_125(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x346: Boolean = p5_3 eq null
          val x348: Object = if (x346) {          val x347: Object = throw new NullPointerException()
x347} else {p5_3}
          val x349: Unit = block_126(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x349
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_126(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x350: Boolean = p6_3 eq null
          val x352: Object = if (x350) {          val x351: Object = throw new NullPointerException()
x351} else {p6_3}
          val x353: Object = unsafe.getObject(x352,16)
          val x354: Unit = block_127(r,p5_0,p5_1,p5_2,p5_3,p5_4,x353,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x354
}
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_127(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x355: Unit = block_128(null,null,null,null,p5_4,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x355
}
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_128(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x358: Unit = if (true) {          val x356: Unit = block_129(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x356} else {          val x357: Unit = block_130(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x357}
x358
}
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_129(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x359: Boolean = p6_3 eq null
          val x361: Object = if (x359) {          val x360: Object = throw new NullPointerException()
x360} else {p6_3}
          val x362: Object = CONST_5.invoke(p6_3) // java.lang.Object.toString
          val x363: Unit = block_131(r,p6_0,p6_1,p6_2,p6_3,x362,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x363
}
// *** begin block 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_130(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x364: Unit = block_131(r,p6_0,p6_1,p6_2,p6_3,"null",p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x364
}
// *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_131(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x365: Unit = block_132(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x365
}
// *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_132(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x366: Boolean = p5_5 eq null
          val x368: Object = if (x366) {          val x367: Object = throw new NullPointerException()
x367} else {p5_5}
          val x369: Unit = block_133(null,null,null,null,p5_5,p5_6,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x369
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_133(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x370: Boolean = p6_3 eq null
          val x372: Object = if (x370) {          val x371: Object = throw new NullPointerException()
x371} else {p6_3}
          val x373: Unit = block_134(null,null,null,null,p6_3,p6_4,null,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x373
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_134(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x376: Unit = if (true) {          val x374: Unit = block_135(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x374} else {          val x375: Unit = block_136(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x375}
x376
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_135(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x377: Boolean = p7_4 eq null
          val x379: Object = if (x377) {          val x378: Object = throw new NullPointerException()
x378} else {p7_4}
          val x380: Unit = block_137(null,null,null,null,p7_4,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x380
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_136(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x381: Boolean = "null" eq null
          val x383: Object = if (x381) {          val x382: Object = throw new NullPointerException()
x382} else {"null"}
          val x384: Unit = block_137(null,null,null,null,"null",null,p7_0,p7_1,p7_2,p7_3,"null",p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x384
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_137(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x385: Boolean = p8_3 eq null
          val x387: Object = if (x385) {          val x386: Object = throw new NullPointerException()
x386} else {p8_3}
          val x388: Object = unsafe.getObject(x387,16)
          val x389: Boolean = x388 eq null
          val x391: Object = if (x389) {          val x390: Object = throw new NullPointerException()
x390} else {x388}
          val x392: Int = java.lang.reflect.Array.getLength(x391)
          val x393: Unit = block_138(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,x392,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x393
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_138(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x394: Boolean = p7_3 eq null
          val x396: Object = if (x394) {          val x395: Object = throw new NullPointerException()
x395} else {p7_3}
          val x397: Int = unsafe.getInt(x396,16)
          val x398: Int = p7_6 + x397
          val x399: Boolean = p7_3 eq null
          val x401: Object = if (x399) {          val x400: Object = throw new NullPointerException()
x400} else {p7_3}
          val x402: Unit = block_139(null,null,null,null,p7_3,x398,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_6,null,null,null,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x402
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_139(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x403: Boolean = p8_3 eq null
          val x405: Object = if (x403) {          val x404: Object = throw new NullPointerException()
x404} else {p8_3}
          val x406: Object = unsafe.getObject(x405,24)
          val x407: Boolean = x406 eq null
          val x409: Object = if (x407) {          val x408: Object = throw new NullPointerException()
x408} else {x406}
          val x410: Int = java.lang.reflect.Array.getLength(x409)
          val x411: Int = -x410
          val x412: Int = x411 + p8_4
          val x413: Boolean = x412 <= 0
          val x416: Unit = if (x413) {          val x414: Unit = block_140(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x414} else {          val x415: Unit = block_141(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x415}
x416
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_140(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x417: Unit = block_142(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x417
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_141(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x418: Boolean = p8_3 eq null
          val x420: Object = if (x418) {          val x419: Object = throw new NullPointerException()
x419} else {p8_3}
          val x421: Unit = CONST_4.invoke(p8_3.asInstanceOf[AnyRef],p8_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x422: Unit = block_140(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x422
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_142(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x423: Boolean = p7_3 eq null
          val x425: Object = if (x423) {          val x424: Object = throw new NullPointerException()
x424} else {p7_3}
          val x426: Object = unsafe.getObject(x425,24)
          val x427: Boolean = p7_3 eq null
          val x429: Object = if (x427) {          val x428: Object = throw new NullPointerException()
x428} else {p7_3}
          val x430: Int = unsafe.getInt(x429,16)
          val x431: Boolean = p7_4 eq null
          val x433: Object = if (x431) {          val x432: Object = throw new NullPointerException()
x432} else {p7_4}
          val x434: Unit = block_143(null,null,null,null,p7_4,0,p7_5,x426,x430,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x434
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_143(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x435: Boolean = p8_4 >= 0
          val x438: Unit = if (x435) {          val x436: Unit = block_144(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x436} else {          val x437: Unit = block_145(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x437}
x438
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_144(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x439: Boolean = p8_3 eq null
          val x441: Object = if (x439) {          val x440: Object = throw new NullPointerException()
x440} else {p8_3}
          val x442: Object = unsafe.getObject(x441,16)
          val x443: Boolean = x442 eq null
          val x445: Object = if (x443) {          val x444: Object = throw new NullPointerException()
x444} else {x442}
          val x446: Int = java.lang.reflect.Array.getLength(x445)
          val x447: Boolean = x446 >= p8_5
          val x450: Unit = if (x447) {          val x448: Unit = block_146(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x448} else {          val x449: Unit = block_147(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x449}
x450
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_145(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x451: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x452: Boolean = x451 eq null
          val x454: Object = if (x452) {          val x453: Object = throw new NullPointerException()
x453} else {x451}
          val x455: Unit = block_148(null,null,null,null,x451,p8_4,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x451,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x455
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_146(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x456: Boolean = p8_5 >= p8_4
          val x459: Unit = if (x456) {          val x457: Unit = block_149(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x457} else {          val x458: Unit = block_150(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x458}
x459
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_147(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x460: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x461: Boolean = x460 eq null
          val x463: Object = if (x461) {          val x462: Object = throw new NullPointerException()
x462} else {x460}
          val x464: Unit = block_151(null,null,null,null,x460,p8_5,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x460,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x464
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_148(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x465: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x466: Boolean = x465 eq null
          val x468: Object = if (x466) {          val x467: Object = throw new NullPointerException()
x467} else {x465}
          val x469: Unit = block_152(null,null,null,null,x465,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x465,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x469
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_149(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x470: Boolean = p8_3 eq null
          val x472: Object = if (x470) {          val x471: Object = throw new NullPointerException()
x471} else {p8_3}
          val x473: Object = unsafe.getObject(x472,16)
          val x474: Int = -p8_4
          val x475: Int = x474 + p8_5
          val x476: Unit = java.lang.System.arraycopy(x473,p8_4,p8_6,p8_7,x475).asInstanceOf[Object]
          val x477: Unit = block_153(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x477
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_150(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x478: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x479: Int = -p8_4
          val x480: Int = x479 + p8_5
          val x481: Boolean = x478 eq null
          val x483: Object = if (x481) {          val x482: Object = throw new NullPointerException()
x482} else {x478}
          val x484: Unit = block_154(null,null,null,null,x478,x480,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x478,null,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x484
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_151(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x485: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x486: Boolean = x485 eq null
          val x488: Object = if (x486) {          val x487: Object = throw new NullPointerException()
x487} else {x485}
          val x489: Unit = block_155(null,null,null,null,x485,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x485,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x489
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_152(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x490: Boolean = p10_3 eq null
          val x492: Object = if (x490) {          val x491: Object = throw new NullPointerException()
x491} else {p10_3}
          val x493: Unit = block_156(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x493
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_153(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x494: Unit = block_157(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x494
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_154(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x495: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x496: Boolean = x495 eq null
          val x498: Object = if (x496) {          val x497: Object = throw new NullPointerException()
x497} else {x495}
          val x499: Unit = block_158(null,null,null,null,x495,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x495,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x499
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_155(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x500: Boolean = p10_3 eq null
          val x502: Object = if (x500) {          val x501: Object = throw new NullPointerException()
x501} else {p10_3}
          val x503: Unit = block_159(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x503
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_156(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x504: Boolean = p11_3 eq null
          val x506: Object = if (x504) {          val x505: Object = throw new NullPointerException()
x505} else {p11_3}
          val x507: Unit = block_160(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x507
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_157(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x508: Boolean = p7_3 eq null
          val x510: Object = if (x508) {          val x509: Object = throw new NullPointerException()
x509} else {p7_3}
          val x511: Int = unsafe.getInt(x510,16)
          val x512: Int = p7_5 + x511
          val x513: Boolean = p7_3 eq null
          val x515: Object = if (x513) {          val x514: Object = throw new NullPointerException()
x514} else {p7_3}
          val x516: Unit = unsafe.putInt(x515,16, x512)
          val x517: Unit = block_161(r,p6_0,p6_1,p6_2,p6_3,p6_4,p7_3,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x517
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_158(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x518: Boolean = p10_3 eq null
          val x520: Object = if (x518) {          val x519: Object = throw new NullPointerException()
x519} else {p10_3}
          val x521: Unit = block_162(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x521
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_159(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x522: Boolean = p11_3 eq null
          val x524: Object = if (x522) {          val x523: Object = throw new NullPointerException()
x523} else {p11_3}
          val x525: Unit = block_163(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x525
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_160(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x526: Unit = block_164(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x526
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_161(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Object,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x527: Unit = block_165(r,p5_0,p5_1,p5_2,p5_3,p5_4,p6_3,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x527
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_162(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x528: Boolean = p11_3 eq null
          val x530: Object = if (x528) {          val x529: Object = throw new NullPointerException()
x529} else {p11_3}
          val x531: Unit = block_166(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x531
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_163(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x532: Unit = block_167(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x532
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_164(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x533: Object = new Array[char](p11_4)
          val x534: Boolean = p11_3 eq null
          val x536: Object = if (x534) {          val x535: Object = throw new NullPointerException()
x535} else {p11_3}
          val x537: Unit = unsafe.putObject(x536,24, x533)
          val x538: Unit = block_168(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x538
}
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_165(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x539: Unit = block_169(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_3,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x539
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_166(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x540: Unit = block_170(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x540
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_167(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x541: Object = new Array[char](p11_4)
          val x542: Boolean = p11_3 eq null
          val x544: Object = if (x542) {          val x543: Object = throw new NullPointerException()
x543} else {p11_3}
          val x545: Unit = unsafe.putObject(x544,24, x541)
          val x546: Unit = block_171(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x546
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_168(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x547: Unit = block_172(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x547
}
// *** begin block 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_169(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x548: Unit = block_173(null,null,null,null,p4_4,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x548
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_170(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x549: Object = new Array[char](p11_4)
          val x550: Boolean = p11_3 eq null
          val x552: Object = if (x550) {          val x551: Object = throw new NullPointerException()
x551} else {p11_3}
          val x553: Unit = unsafe.putObject(x552,24, x549)
          val x554: Unit = block_174(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x554
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_171(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x555: Unit = block_175(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x555
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_172(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x556: Boolean = p9_6 eq null
          val x558: Object = if (x556) {          val x557: Object = throw new NullPointerException()
x557} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x559: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x559
}
// *** begin block 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_173(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x560: Unit = block_176(null,null,null,null,p5_3,null,null,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x560
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_174(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x561: Unit = block_177(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x561
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_175(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x562: Boolean = p9_6 eq null
          val x564: Object = if (x562) {          val x563: Object = throw new NullPointerException()
x563} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x565: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x565
}
// *** begin block 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_176(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x566: Boolean = unsafe.getBoolean(Class.forName("java.lang.Integer"),260)
          val x567: Int = if (x566) {1} else {0}
          val x570: Unit = if (true) {          val x568: Unit = block_178(r,p6_0,p6_1,p6_2,p6_3,null,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x568} else {          val x569: Unit = block_179(r,p6_0,p6_1,p6_2,p6_3,null,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x569}
x570
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_177(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x571: Boolean = p9_6 eq null
          val x573: Object = if (x571) {          val x572: Object = throw new NullPointerException()
x572} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x574: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x574
}
// *** begin block 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_178(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x575: Boolean = -128 > p6_3
          val x578: Unit = if (x575) {          val x576: Unit = block_180(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x576} else {          val x577: Unit = block_181(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x577}
x578
}
// *** begin block 6:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_179(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x579: Int = unsafe.getInt(Class.forName("java.lang.Integer$IntegerCache"),212)
          val x580: Boolean = 127 <= x579
          val x583: Unit = if (x580) {          val x581: Unit = block_178(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x581} else {          val x582: Unit = block_182(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 14:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x582}
x583
}
// *** begin block 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_180(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x584: Object = unsafe.allocateInstance(classOf[java.lang.Integer])
          val x585: Boolean = x584 eq null
          val x587: Object = if (x585) {          val x586: Object = throw new NullPointerException()
x586} else {x584}
          val x588: Unit = block_183(null,null,null,null,x584,p6_3,null,null,p6_0,p6_1,p6_2,p6_3,x584,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x588
}
// *** begin block 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_181(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x589: Int = unsafe.getInt(Class.forName("java.lang.Integer$IntegerCache"),212)
          val x590: Boolean = x589 < p6_3
          val x593: Unit = if (x590) {          val x591: Unit = block_180(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x591} else {          val x592: Unit = block_184(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x592}
x593
}
// *** begin block 14:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_182(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x594: Object = unsafe.allocateInstance(classOf[java.lang.AssertionError])
          val x595: Boolean = x594 eq null
          val x597: Object = if (x595) {          val x596: Object = throw new NullPointerException()
x596} else {x594}
          val x598: Unit = block_185(null,null,null,null,x594,null,p6_0,p6_1,p6_2,p6_3,x594,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x598
}
// *** begin block 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_183(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x599: Boolean = p7_3 eq null
          val x601: Object = if (x599) {          val x600: Object = throw new NullPointerException()
x600} else {p7_3}
          val x602: Unit = block_186(null,null,null,null,p7_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x602
}
// *** begin block 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_184(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x603: Object = unsafe.getObject(Class.forName("java.lang.Integer$IntegerCache"),200)
          val x604: Int = 128 + p6_3
          val x605: Long = x604.toLong
          val x606: Boolean = x603 eq null
          val x608: Object = if (x606) {          val x607: Object = throw new NullPointerException()
x607} else {x603}
          val x609: java.lang.Class[Object] = x603.getClass.asInstanceOf[Class[Object]]
          val x610: Boolean = x609.isArray
          val x611: Boolean = if (x610) {false} else {true}
          val x614: Unit = if (x611) {          val x612: java.lang.String = x609.getName
          val x613: Unit = throw new ArrayStoreException(x612)
x613} else {()}
          val x615: Boolean = x605 < 0
          val x619: Boolean = if (x615) {x615} else {          val x616: Int = java.lang.reflect.Array.getLength(x603)
          val x617: Long = x616.toLong
          val x618: Boolean = x605 >= x617
x618}
          val x622: Unit = if (x619) {          val x620: Int = x605.toInt
          val x621: Unit = throw new ArrayIndexOutOfBoundsException(x620)
x621} else {()}
          val x623: Long = 8 * x605
          val x624: Long = 24 + x623
          val x625: Object = unsafe.getObject(x603,x624)
          val x626: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,x625,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x626
}
// *** begin block 0:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_185(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x627: Boolean = p7_3 eq null
          val x629: Object = if (x627) {          val x628: Object = throw new NullPointerException()
x628} else {p7_3}
          val x630: Unit = block_188(null,null,null,null,p7_3,null,p7_0,p7_1,p7_2,p7_3,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x630
}
// *** begin block 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_186(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x631: Boolean = p8_3 eq null
          val x633: Object = if (x631) {          val x632: Object = throw new NullPointerException()
x632} else {p8_3}
          val x634: Unit = block_189(null,null,null,null,p8_3,p8_0,p8_1,p8_2,p8_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x634
}
// *** begin block 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_187(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x635: Unit = block_190(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p5_4,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x635
}
// *** begin block 0:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_188(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x636: Boolean = p8_3 eq null
          val x638: Object = if (x636) {          val x637: Object = throw new NullPointerException()
x637} else {p8_3}
          val x639: Unit = block_191(null,null,null,null,p8_3,null,null,p8_0,p8_1,p8_2,p8_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x639
}
// *** begin block 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_189(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x640: Unit = block_192(r,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x640
}
// *** begin block 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_190(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Object,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x641: Boolean = p4_6 eq null
          val x643: Object = if (x641) {          val x642: Object = throw new NullPointerException()
x642} else {p4_6}
          val x644: Unit = block_193(null,null,null,null,p4_6,p4_7,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x644
}
// *** begin block 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_191(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x645: Boolean = p9_3 eq null
          val x647: Object = if (x645) {          val x646: Object = throw new NullPointerException()
x646} else {p9_3}
          val x648: Unit = block_194(null,null,null,null,p9_3,p9_0,p9_1,p9_2,p9_3,null,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x648
}
// *** begin block 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_192(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x649: Unit = block_195(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x649
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_193(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x650: Boolean = p5_3 eq null
          val x652: Object = if (x650) {          val x651: Object = throw new NullPointerException()
x651} else {p5_3}
          val x653: Unit = block_196(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x653
}
// *** begin block 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_194(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x654: Unit = block_197(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x654
}
// *** begin block 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_195(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x655: Boolean = p7_3 eq null
          val x657: Object = if (x655) {          val x656: Object = throw new NullPointerException()
x656} else {p7_3}
          val x658: Unit = unsafe.putInt(x657,16, p7_4)
          val x659: Unit = block_198(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x659
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_196(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x660: Boolean = p6_3 eq null
          val x662: Object = if (x660) {          val x661: Object = throw new NullPointerException()
x661} else {p6_3}
          val x663: Object = unsafe.getObject(x662,16)
          val x664: Unit = block_199(r,p5_0,p5_1,p5_2,p5_3,p5_4,x663,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x664
}
// *** begin block 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_197(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x665: Boolean = p9_3 eq null
          val x667: Object = if (x665) {          val x666: Object = throw new NullPointerException()
x666} else {p9_3}
          val x668: Unit = unsafe.putObject(x667,32, p9_3)
          val x669: Object = unsafe.getObject(Class.forName("java.lang.Throwable"),200)
          val x670: Boolean = p9_3 eq null
          val x672: Object = if (x670) {          val x671: Object = throw new NullPointerException()
x671} else {p9_3}
          val x673: Unit = unsafe.putObject(x672,40, x669)
          val x674: Object = unsafe.getObject(Class.forName("java.lang.Throwable"),208)
          val x675: Boolean = p9_3 eq null
          val x677: Object = if (x675) {          val x676: Object = throw new NullPointerException()
x676} else {p9_3}
          val x678: Unit = unsafe.putObject(x677,48, x674)
          val x679: Boolean = p9_3 eq null
          val x681: Object = if (x679) {          val x680: Object = throw new NullPointerException()
x680} else {p9_3}
          val x682: Object = CONST_6.invoke(p9_3) // java.lang.Throwable.fillInStackTrace
          val x683: Unit = block_200(r,p9_0,p9_1,p9_2,p9_3,x682,null,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x683
}
// *** begin block 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_198(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x684: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x684
}
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_199(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x685: Unit = block_201(null,null,null,null,p5_4,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x685
}
// *** begin block 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_200(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x686: Unit = block_202(r,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x686
}
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_201(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x689: Unit = if (true) {          val x687: Unit = block_203(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x687} else {          val x688: Unit = block_204(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x688}
x689
}
// *** begin block 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_202(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x690: Unit = block_205(r,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x690
}
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_203(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x691: Boolean = p6_3 eq null
          val x693: Object = if (x691) {          val x692: Object = throw new NullPointerException()
x692} else {p6_3}
          val x694: Object = CONST_5.invoke(p6_3) // java.lang.Object.toString
          val x695: Unit = block_206(r,p6_0,p6_1,p6_2,p6_3,x694,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x695
}
// *** begin block 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_204(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x696: Unit = block_206(r,p6_0,p6_1,p6_2,p6_3,"null",p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x696
}
// *** begin block 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_205(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x697: Unit = block_207(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x697
}
// *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_206(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x698: Unit = block_208(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x698
}
// *** begin block 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_207(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x699: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x699
}
// *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_208(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x700: Boolean = p5_5 eq null
          val x702: Object = if (x700) {          val x701: Object = throw new NullPointerException()
x701} else {p5_5}
          val x703: Unit = block_209(null,null,null,null,p5_5,p5_6,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x703
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_209(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x704: Boolean = p6_3 eq null
          val x706: Object = if (x704) {          val x705: Object = throw new NullPointerException()
x705} else {p6_3}
          val x707: Unit = block_210(null,null,null,null,p6_3,p6_4,null,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x707
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_210(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x710: Unit = if (true) {          val x708: Unit = block_211(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x708} else {          val x709: Unit = block_212(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x709}
x710
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_211(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x711: Boolean = p7_4 eq null
          val x713: Object = if (x711) {          val x712: Object = throw new NullPointerException()
x712} else {p7_4}
          val x714: Unit = block_213(null,null,null,null,p7_4,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x714
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_212(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x715: Boolean = "null" eq null
          val x717: Object = if (x715) {          val x716: Object = throw new NullPointerException()
x716} else {"null"}
          val x718: Unit = block_213(null,null,null,null,"null",null,p7_0,p7_1,p7_2,p7_3,"null",p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x718
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_213(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x719: Boolean = p8_3 eq null
          val x721: Object = if (x719) {          val x720: Object = throw new NullPointerException()
x720} else {p8_3}
          val x722: Object = unsafe.getObject(x721,16)
          val x723: Boolean = x722 eq null
          val x725: Object = if (x723) {          val x724: Object = throw new NullPointerException()
x724} else {x722}
          val x726: Int = java.lang.reflect.Array.getLength(x725)
          val x727: Unit = block_214(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,x726,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x727
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_214(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x728: Boolean = p7_3 eq null
          val x730: Object = if (x728) {          val x729: Object = throw new NullPointerException()
x729} else {p7_3}
          val x731: Int = unsafe.getInt(x730,16)
          val x732: Int = p7_6 + x731
          val x733: Boolean = p7_3 eq null
          val x735: Object = if (x733) {          val x734: Object = throw new NullPointerException()
x734} else {p7_3}
          val x736: Unit = block_215(null,null,null,null,p7_3,x732,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_6,null,null,null,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x736
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_215(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x737: Boolean = p8_3 eq null
          val x739: Object = if (x737) {          val x738: Object = throw new NullPointerException()
x738} else {p8_3}
          val x740: Object = unsafe.getObject(x739,24)
          val x741: Boolean = x740 eq null
          val x743: Object = if (x741) {          val x742: Object = throw new NullPointerException()
x742} else {x740}
          val x744: Int = java.lang.reflect.Array.getLength(x743)
          val x745: Int = -x744
          val x746: Int = x745 + p8_4
          val x747: Boolean = x746 <= 0
          val x750: Unit = if (x747) {          val x748: Unit = block_216(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x748} else {          val x749: Unit = block_217(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x749}
x750
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_216(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x751: Unit = block_218(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x751
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_217(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x752: Boolean = p8_3 eq null
          val x754: Object = if (x752) {          val x753: Object = throw new NullPointerException()
x753} else {p8_3}
          val x755: Unit = CONST_4.invoke(p8_3.asInstanceOf[AnyRef],p8_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x756: Unit = block_216(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x756
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_218(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x757: Boolean = p7_3 eq null
          val x759: Object = if (x757) {          val x758: Object = throw new NullPointerException()
x758} else {p7_3}
          val x760: Object = unsafe.getObject(x759,24)
          val x761: Boolean = p7_3 eq null
          val x763: Object = if (x761) {          val x762: Object = throw new NullPointerException()
x762} else {p7_3}
          val x764: Int = unsafe.getInt(x763,16)
          val x765: Boolean = p7_4 eq null
          val x767: Object = if (x765) {          val x766: Object = throw new NullPointerException()
x766} else {p7_4}
          val x768: Unit = block_219(null,null,null,null,p7_4,0,p7_5,x760,x764,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x768
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_219(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x769: Boolean = p8_4 >= 0
          val x772: Unit = if (x769) {          val x770: Unit = block_220(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x770} else {          val x771: Unit = block_221(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x771}
x772
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_220(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x773: Boolean = p8_3 eq null
          val x775: Object = if (x773) {          val x774: Object = throw new NullPointerException()
x774} else {p8_3}
          val x776: Object = unsafe.getObject(x775,16)
          val x777: Boolean = x776 eq null
          val x779: Object = if (x777) {          val x778: Object = throw new NullPointerException()
x778} else {x776}
          val x780: Int = java.lang.reflect.Array.getLength(x779)
          val x781: Boolean = x780 >= p8_5
          val x784: Unit = if (x781) {          val x782: Unit = block_222(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x782} else {          val x783: Unit = block_223(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x783}
x784
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_221(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x785: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x786: Boolean = x785 eq null
          val x788: Object = if (x786) {          val x787: Object = throw new NullPointerException()
x787} else {x785}
          val x789: Unit = block_224(null,null,null,null,x785,p8_4,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x785,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x789
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_222(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x790: Boolean = p8_5 >= p8_4
          val x793: Unit = if (x790) {          val x791: Unit = block_225(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x791} else {          val x792: Unit = block_226(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x792}
x793
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_223(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x794: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x795: Boolean = x794 eq null
          val x797: Object = if (x795) {          val x796: Object = throw new NullPointerException()
x796} else {x794}
          val x798: Unit = block_227(null,null,null,null,x794,p8_5,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x794,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x798
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_224(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x799: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x800: Boolean = x799 eq null
          val x802: Object = if (x800) {          val x801: Object = throw new NullPointerException()
x801} else {x799}
          val x803: Unit = block_228(null,null,null,null,x799,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x799,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x803
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_225(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x804: Boolean = p8_3 eq null
          val x806: Object = if (x804) {          val x805: Object = throw new NullPointerException()
x805} else {p8_3}
          val x807: Object = unsafe.getObject(x806,16)
          val x808: Int = -p8_4
          val x809: Int = x808 + p8_5
          val x810: Unit = java.lang.System.arraycopy(x807,p8_4,p8_6,p8_7,x809).asInstanceOf[Object]
          val x811: Unit = block_229(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x811
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_226(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x812: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x813: Int = -p8_4
          val x814: Int = x813 + p8_5
          val x815: Boolean = x812 eq null
          val x817: Object = if (x815) {          val x816: Object = throw new NullPointerException()
x816} else {x812}
          val x818: Unit = block_230(null,null,null,null,x812,x814,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x812,null,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x818
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_227(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x819: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x820: Boolean = x819 eq null
          val x822: Object = if (x820) {          val x821: Object = throw new NullPointerException()
x821} else {x819}
          val x823: Unit = block_231(null,null,null,null,x819,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x819,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x823
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_228(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x824: Boolean = p10_3 eq null
          val x826: Object = if (x824) {          val x825: Object = throw new NullPointerException()
x825} else {p10_3}
          val x827: Unit = block_232(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x827
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_229(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x828: Unit = block_233(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x828
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_230(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x829: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x830: Boolean = x829 eq null
          val x832: Object = if (x830) {          val x831: Object = throw new NullPointerException()
x831} else {x829}
          val x833: Unit = block_234(null,null,null,null,x829,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x829,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x833
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_231(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x834: Boolean = p10_3 eq null
          val x836: Object = if (x834) {          val x835: Object = throw new NullPointerException()
x835} else {p10_3}
          val x837: Unit = block_235(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x837
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_232(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x838: Boolean = p11_3 eq null
          val x840: Object = if (x838) {          val x839: Object = throw new NullPointerException()
x839} else {p11_3}
          val x841: Unit = block_236(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x841
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_233(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x842: Boolean = p7_3 eq null
          val x844: Object = if (x842) {          val x843: Object = throw new NullPointerException()
x843} else {p7_3}
          val x845: Int = unsafe.getInt(x844,16)
          val x846: Int = p7_5 + x845
          val x847: Boolean = p7_3 eq null
          val x849: Object = if (x847) {          val x848: Object = throw new NullPointerException()
x848} else {p7_3}
          val x850: Unit = unsafe.putInt(x849,16, x846)
          val x851: Unit = block_237(r,p6_0,p6_1,p6_2,p6_3,p6_4,p7_3,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x851
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_234(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x852: Boolean = p10_3 eq null
          val x854: Object = if (x852) {          val x853: Object = throw new NullPointerException()
x853} else {p10_3}
          val x855: Unit = block_238(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x855
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_235(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x856: Boolean = p11_3 eq null
          val x858: Object = if (x856) {          val x857: Object = throw new NullPointerException()
x857} else {p11_3}
          val x859: Unit = block_239(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x859
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_236(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x860: Unit = block_240(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x860
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_237(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Object,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x861: Unit = block_241(r,p5_0,p5_1,p5_2,p5_3,p5_4,p6_3,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x861
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_238(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x862: Boolean = p11_3 eq null
          val x864: Object = if (x862) {          val x863: Object = throw new NullPointerException()
x863} else {p11_3}
          val x865: Unit = block_242(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x865
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_239(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x866: Unit = block_243(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x866
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_240(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x867: Object = new Array[char](p11_4)
          val x868: Boolean = p11_3 eq null
          val x870: Object = if (x868) {          val x869: Object = throw new NullPointerException()
x869} else {p11_3}
          val x871: Unit = unsafe.putObject(x870,24, x867)
          val x872: Unit = block_244(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x872
}
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_241(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x873: Unit = block_245(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_3,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x873
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_242(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x874: Unit = block_246(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x874
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_243(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x875: Object = new Array[char](p11_4)
          val x876: Boolean = p11_3 eq null
          val x878: Object = if (x876) {          val x877: Object = throw new NullPointerException()
x877} else {p11_3}
          val x879: Unit = unsafe.putObject(x878,24, x875)
          val x880: Unit = block_247(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x880
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_244(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x881: Unit = block_248(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x881
}
// *** begin block 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_245(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x882: Boolean = p4_6 eq null
          val x884: Object = if (x882) {          val x883: Object = throw new NullPointerException()
x883} else {p4_6}
          val x885: Unit = block_249(null,null,null,null,p4_6,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x885
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_246(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x886: Object = new Array[char](p11_4)
          val x887: Boolean = p11_3 eq null
          val x889: Object = if (x887) {          val x888: Object = throw new NullPointerException()
x888} else {p11_3}
          val x890: Unit = unsafe.putObject(x889,24, x886)
          val x891: Unit = block_250(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x891
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_247(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x892: Unit = block_251(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x892
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_248(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x893: Boolean = p9_6 eq null
          val x895: Object = if (x893) {          val x894: Object = throw new NullPointerException()
x894} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x896: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x896
}
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_249(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x897: Boolean = p5_3 eq null
          val x899: Object = if (x897) {          val x898: Object = throw new NullPointerException()
x898} else {p5_3}
          val x900: Unit = block_252(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x900
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_250(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x901: Unit = block_253(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x901
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_251(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x902: Boolean = p9_6 eq null
          val x904: Object = if (x902) {          val x903: Object = throw new NullPointerException()
x903} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x905: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x905
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_252(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x906: Boolean = p6_3 eq null
          val x908: Object = if (x906) {          val x907: Object = throw new NullPointerException()
x907} else {p6_3}
          val x909: Object = unsafe.getObject(x908,16)
          val x910: Unit = block_254(r,p5_0,p5_1,p5_2,p5_3,x909,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x910
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_253(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x911: Boolean = p9_6 eq null
          val x913: Object = if (x911) {          val x912: Object = throw new NullPointerException()
x912} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x914: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x914
}
// *** begin block 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_254(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x915: Boolean = p5_4 eq null
          val x917: Object = if (x915) {          val x916: Object = throw new NullPointerException()
x916} else {p5_4}
          val x918: Unit = block_255(null,null,null,null,p5_4,null,null,null,null,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x918
}
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_255(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x919: Object = unsafe.allocateInstance(classOf[java.lang.String])
          val x920: Boolean = p6_3 eq null
          val x922: Object = if (x920) {          val x921: Object = throw new NullPointerException()
x921} else {p6_3}
          val x923: Object = unsafe.getObject(x922,24)
          val x924: Boolean = p6_3 eq null
          val x926: Object = if (x924) {          val x925: Object = throw new NullPointerException()
x925} else {p6_3}
          val x927: Int = unsafe.getInt(x926,16)
          val x928: Boolean = x919 eq null
          val x930: Object = if (x928) {          val x929: Object = throw new NullPointerException()
x929} else {x919}
          val x931: Unit = block_256(null,null,null,null,x919,x923,0,x927,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,x919,null,null,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x931
}
// *** begin block 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_256(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x932: Boolean = p7_3 eq null
          val x934: Object = if (x932) {          val x933: Object = throw new NullPointerException()
x933} else {p7_3}
          val x935: Unit = block_257(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x935
}
// *** begin block 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_257(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x936: Unit = block_258(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x936
}
// *** begin block 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_258(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x937: Boolean = p7_3 eq null
          val x939: Object = if (x937) {          val x938: Object = throw new NullPointerException()
x938} else {p7_3}
          val x940: Unit = unsafe.putInt(x939,28, 0)
          val x941: Boolean = p7_5 >= 0
          val x944: Unit = if (x941) {          val x942: Unit = block_259(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x942} else {          val x943: Unit = block_260(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x943}
x944
}
// *** begin block 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_259(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x945: Boolean = p7_6 >= 0
          val x948: Unit = if (x945) {          val x946: Unit = block_261(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x946} else {          val x947: Unit = block_262(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 26:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x947}
x948
}
// *** begin block 13:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_260(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x949: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x950: Boolean = x949 eq null
          val x952: Object = if (x950) {          val x951: Object = throw new NullPointerException()
x951} else {x949}
          val x953: Unit = block_263(null,null,null,null,x949,p7_5,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x949,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x953
}
// *** begin block 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_261(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x954: Boolean = p7_4 eq null
          val x956: Object = if (x954) {          val x955: Object = throw new NullPointerException()
x955} else {p7_4}
          val x957: Int = java.lang.reflect.Array.getLength(x956)
          val x958: Int = -p7_6
          val x959: Int = x958 + x957
          val x960: Boolean = x959 >= p7_5
          val x963: Unit = if (x960) {          val x961: Unit = block_264(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x961} else {          val x962: Unit = block_265(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 43:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x962}
x963
}
// *** begin block 26:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_262(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x964: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x965: Boolean = x964 eq null
          val x967: Object = if (x965) {          val x966: Object = throw new NullPointerException()
x966} else {x964}
          val x968: Unit = block_266(null,null,null,null,x964,p7_6,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x964,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x968
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_263(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x969: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x970: Boolean = x969 eq null
          val x972: Object = if (x970) {          val x971: Object = throw new NullPointerException()
x971} else {x969}
          val x973: Unit = block_267(null,null,null,null,x969,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x969,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x973
}
// *** begin block 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_264(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x974: Int = p7_6 + p7_5
          val x975: Unit = block_268(null,null,null,null,p7_4,p7_5,x974,null,null,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_3,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x975
}
// *** begin block 43:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_265(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x976: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x977: Int = p7_6 + p7_5
          val x978: Boolean = x976 eq null
          val x980: Object = if (x978) {          val x979: Object = throw new NullPointerException()
x979} else {x976}
          val x981: Unit = block_269(null,null,null,null,x976,x977,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x976,null,null,null,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x981
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_266(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x982: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x983: Boolean = x982 eq null
          val x985: Object = if (x983) {          val x984: Object = throw new NullPointerException()
x984} else {x982}
          val x986: Unit = block_270(null,null,null,null,x982,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x982,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x986
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_267(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x987: Boolean = p9_3 eq null
          val x989: Object = if (x987) {          val x988: Object = throw new NullPointerException()
x988} else {p9_3}
          val x990: Unit = block_271(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x990
}
// *** begin block 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_268(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x991: Int = -p8_4
          val x992: Int = x991 + p8_5
          val x993: Boolean = x992 >= 0
          val x996: Unit = if (x993) {          val x994: Unit = block_272(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x992,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x994} else {          val x995: Unit = block_273(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x992,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x995}
x996
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_269(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x997: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x998: Boolean = x997 eq null
          val x1000: Object = if (x998) {          val x999: Object = throw new NullPointerException()
x999} else {x997}
          val x1001: Unit = block_274(null,null,null,null,x997,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x997,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1001
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_270(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1002: Boolean = p9_3 eq null
          val x1004: Object = if (x1002) {          val x1003: Object = throw new NullPointerException()
x1003} else {p9_3}
          val x1005: Unit = block_275(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1005
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_271(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1006: Boolean = p10_3 eq null
          val x1008: Object = if (x1006) {          val x1007: Object = throw new NullPointerException()
x1007} else {p10_3}
          val x1009: Unit = block_276(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1009
}
// *** begin block 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_272(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1010: Object = new Array[char](p8_6)
          val x1011: Boolean = p8_3 eq null
          val x1013: Object = if (x1011) {          val x1012: Object = throw new NullPointerException()
x1012} else {p8_3}
          val x1014: Int = java.lang.reflect.Array.getLength(x1013)
          val x1015: Int = -p8_4
          val x1016: Int = x1015 + x1014
          val x1017: Unit = block_277(null,null,null,null,x1016,p8_6,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,x1010,p8_3,p8_4,x1010,0,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1017
}
// *** begin block 8:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_273(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1018: Object = unsafe.allocateInstance(classOf[java.lang.IllegalArgumentException])
          val x1019: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x1020: Boolean = x1019 eq null
          val x1022: Object = if (x1020) {          val x1021: Object = throw new NullPointerException()
x1021} else {x1019}
          val x1023: Unit = block_278(null,null,null,null,x1019,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x1018,x1018,x1019,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1023
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_274(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1024: Boolean = p9_3 eq null
          val x1026: Object = if (x1024) {          val x1025: Object = throw new NullPointerException()
x1025} else {p9_3}
          val x1027: Unit = block_279(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1027
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_275(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1028: Boolean = p10_3 eq null
          val x1030: Object = if (x1028) {          val x1029: Object = throw new NullPointerException()
x1029} else {p10_3}
          val x1031: Unit = block_280(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1031
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_276(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1032: Unit = block_281(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1032
}
// *** begin block 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_277(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1033: Boolean = p9_4 < p9_3
          val x1036: Unit = if (x1033) {          val x1034: Unit = block_282(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1034} else {          val x1035: Unit = block_283(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1035}
x1036
}
// *** begin block 0:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_278(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1037: Boolean = p9_3 eq null
          val x1039: Object = if (x1037) {          val x1038: Object = throw new NullPointerException()
x1038} else {p9_3}
          val x1040: Unit = block_284(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1040
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_279(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1041: Boolean = p10_3 eq null
          val x1043: Object = if (x1041) {          val x1042: Object = throw new NullPointerException()
x1042} else {p10_3}
          val x1044: Unit = block_285(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1044
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_280(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1045: Unit = block_286(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1045
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_281(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1046: Object = new Array[char](p10_4)
          val x1047: Boolean = p10_3 eq null
          val x1049: Object = if (x1047) {          val x1048: Object = throw new NullPointerException()
x1048} else {p10_3}
          val x1050: Unit = unsafe.putObject(x1049,24, x1046)
          val x1051: Unit = block_287(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1051
}
// *** begin block 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_282(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1052: Unit = block_288(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p9_4,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1052
}
// *** begin block 5:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_283(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1053: Unit = block_289(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1053
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_284(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1054: Boolean = p10_3 eq null
          val x1056: Object = if (x1054) {          val x1055: Object = throw new NullPointerException()
x1055} else {p10_3}
          val x1057: Unit = block_290(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1057
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_285(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1058: Unit = block_291(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1058
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_286(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1059: Object = new Array[char](p10_4)
          val x1060: Boolean = p10_3 eq null
          val x1062: Object = if (x1060) {          val x1061: Object = throw new NullPointerException()
x1061} else {p10_3}
          val x1063: Unit = unsafe.putObject(x1062,24, x1059)
          val x1064: Unit = block_292(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1064
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_287(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1065: Unit = block_293(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1065
}
// *** begin block 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_288(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Int,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1066: Unit = java.lang.System.arraycopy(p8_8,p8_9,p8_10,p8_11,p8_12).asInstanceOf[Object]
          val x1067: Unit = block_294(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1067
}
// *** begin block 10:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_289(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Int,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1068: Unit = block_288(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p9_5,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1068
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_290(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1069: Unit = block_295(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1069
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_291(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1070: Object = new Array[char](p10_4)
          val x1071: Boolean = p10_3 eq null
          val x1073: Object = if (x1071) {          val x1072: Object = throw new NullPointerException()
x1072} else {p10_3}
          val x1074: Unit = unsafe.putObject(x1073,24, x1070)
          val x1075: Unit = block_296(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1075
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_292(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1076: Unit = block_297(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1076
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_293(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1077: Boolean = p8_6 eq null
          val x1079: Object = if (x1077) {          val x1078: Object = throw new NullPointerException()
x1078} else {p8_6}
          val x1080: Unit = block_298(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1080
}
// *** begin block 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_294(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1081: Unit = block_299(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p8_7,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1081
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_295(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1082: Object = new Array[char](p10_4)
          val x1083: Boolean = p10_3 eq null
          val x1085: Object = if (x1083) {          val x1084: Object = throw new NullPointerException()
x1084} else {p10_3}
          val x1086: Unit = unsafe.putObject(x1085,24, x1082)
          val x1087: Unit = block_300(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1087
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_296(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1088: Unit = block_301(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1088
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_297(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1089: Boolean = p8_6 eq null
          val x1091: Object = if (x1089) {          val x1090: Object = throw new NullPointerException()
x1090} else {p8_6}
          val x1092: Unit = block_302(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1092
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_298(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1093: Boolean = p9_3 eq null
          val x1095: Object = if (x1093) {          val x1094: Object = throw new NullPointerException()
x1094} else {p9_3}
          val x1096: Unit = block_303(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1096
}
// *** begin block 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_299(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Object,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1097: Boolean = p7_7 eq null
          val x1099: Object = if (x1097) {          val x1098: Object = throw new NullPointerException()
x1098} else {p7_7}
          val x1100: Unit = unsafe.putObject(x1099,16, p7_8)
          val x1101: Unit = block_304(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1101
}
// *** begin block 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_300(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1102: Unit = block_305(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1102
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_301(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1103: Boolean = p8_6 eq null
          val x1105: Object = if (x1103) {          val x1104: Object = throw new NullPointerException()
x1104} else {p8_6}
          val x1106: Unit = block_306(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1106
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_302(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1107: Boolean = p9_3 eq null
          val x1109: Object = if (x1107) {          val x1108: Object = throw new NullPointerException()
x1108} else {p9_3}
          val x1110: Unit = block_307(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1110
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_303(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1113: Unit = if (true) {          val x1111: Unit = block_308(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1111} else {          val x1112: Unit = block_309(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1112}
x1113
}
// *** begin block 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_304(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1114: Unit = block_310(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1114
}
// *** begin block 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_305(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1115: Boolean = p8_10 eq null
          val x1117: Object = if (x1115) {          val x1116: Object = throw new NullPointerException()
x1116} else {p8_10}
          val x1118: Unit = block_311(null,null,null,null,p8_10,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1118
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_306(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1119: Boolean = p9_3 eq null
          val x1121: Object = if (x1119) {          val x1120: Object = throw new NullPointerException()
x1120} else {p9_3}
          val x1122: Unit = block_312(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1122
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_307(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1125: Unit = if (true) {          val x1123: Unit = block_313(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1123} else {          val x1124: Unit = block_314(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1124}
x1125
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_308(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1126: Boolean = p10_4 eq null
          val x1128: Object = if (x1126) {          val x1127: Object = throw new NullPointerException()
x1127} else {p10_4}
          val x1129: Unit = block_315(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1129
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_309(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1130: Boolean = "null" eq null
          val x1132: Object = if (x1130) {          val x1131: Object = throw new NullPointerException()
x1131} else {"null"}
          val x1133: Unit = block_315(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1133
}
// *** begin block 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_310(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1134: Unit = block_316(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_4,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1134
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_311(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1135: Boolean = p9_3 eq null
          val x1137: Object = if (x1135) {          val x1136: Object = throw new NullPointerException()
x1136} else {p9_3}
          val x1138: Unit = block_317(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1138
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_312(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1141: Unit = if (true) {          val x1139: Unit = block_318(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1139} else {          val x1140: Unit = block_319(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1140}
x1141
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_313(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1142: Boolean = p10_4 eq null
          val x1144: Object = if (x1142) {          val x1143: Object = throw new NullPointerException()
x1143} else {p10_4}
          val x1145: Unit = block_320(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1145
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_314(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1146: Boolean = "null" eq null
          val x1148: Object = if (x1146) {          val x1147: Object = throw new NullPointerException()
x1147} else {"null"}
          val x1149: Unit = block_320(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1149
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_315(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1150: Boolean = p11_3 eq null
          val x1152: Object = if (x1150) {          val x1151: Object = throw new NullPointerException()
x1151} else {p11_3}
          val x1153: Object = unsafe.getObject(x1152,16)
          val x1154: Boolean = x1153 eq null
          val x1156: Object = if (x1154) {          val x1155: Object = throw new NullPointerException()
x1155} else {x1153}
          val x1157: Int = java.lang.reflect.Array.getLength(x1156)
          val x1158: Unit = block_321(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1157,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1158
}
// *** begin block 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_316(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1159: Boolean = p4_5 eq null
          val x1161: Object = if (x1159) {          val x1160: Object = throw new NullPointerException()
x1160} else {p4_5}
          val x1162: Unit = CONST_7.invoke(p4_5.asInstanceOf[AnyRef],p4_6.asInstanceOf[AnyRef]) // java.io.PrintStream.println
          val x1163: Unit = block_322(r,p4_0,p4_1,p4_2,p4_3,p4_4,null,null,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1163
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_317(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1166: Unit = if (true) {          val x1164: Unit = block_323(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1164} else {          val x1165: Unit = block_324(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1165}
x1166
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_318(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1167: Boolean = p10_4 eq null
          val x1169: Object = if (x1167) {          val x1168: Object = throw new NullPointerException()
x1168} else {p10_4}
          val x1170: Unit = block_325(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1170
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_319(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1171: Boolean = "null" eq null
          val x1173: Object = if (x1171) {          val x1172: Object = throw new NullPointerException()
x1172} else {"null"}
          val x1174: Unit = block_325(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1174
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_320(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1175: Boolean = p11_3 eq null
          val x1177: Object = if (x1175) {          val x1176: Object = throw new NullPointerException()
x1176} else {p11_3}
          val x1178: Object = unsafe.getObject(x1177,16)
          val x1179: Boolean = x1178 eq null
          val x1181: Object = if (x1179) {          val x1180: Object = throw new NullPointerException()
x1180} else {x1178}
          val x1182: Int = java.lang.reflect.Array.getLength(x1181)
          val x1183: Unit = block_326(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1182,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1183
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_321(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1184: Boolean = p10_3 eq null
          val x1186: Object = if (x1184) {          val x1185: Object = throw new NullPointerException()
x1185} else {p10_3}
          val x1187: Int = unsafe.getInt(x1186,16)
          val x1188: Int = p10_6 + x1187
          val x1189: Boolean = p10_3 eq null
          val x1191: Object = if (x1189) {          val x1190: Object = throw new NullPointerException()
x1190} else {p10_3}
          val x1192: Unit = block_327(null,null,null,null,p10_3,x1188,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1192
}
// *** begin block 28:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_322(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Any,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1193: Unit = block_328(r,p3_0,p3_1,p3_2,p3_3,p3_4,9,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1193
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_323(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1194: Boolean = p10_4 >= 0
          val x1197: Unit = if (x1194) {          val x1195: Unit = block_329(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1195} else {          val x1196: Unit = block_330(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1196}
x1197
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_324(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1198: Boolean = p10_3 eq null
          val x1200: Object = if (x1198) {          val x1199: Object = throw new NullPointerException()
x1199} else {p10_3}
          val x1201: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x1202: Unit = block_331(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1201,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1202
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_325(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1203: Boolean = p11_3 eq null
          val x1205: Object = if (x1203) {          val x1204: Object = throw new NullPointerException()
x1204} else {p11_3}
          val x1206: Object = unsafe.getObject(x1205,16)
          val x1207: Boolean = x1206 eq null
          val x1209: Object = if (x1207) {          val x1208: Object = throw new NullPointerException()
x1208} else {x1206}
          val x1210: Int = java.lang.reflect.Array.getLength(x1209)
          val x1211: Unit = block_332(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1210,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1211
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_326(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1212: Boolean = p10_3 eq null
          val x1214: Object = if (x1212) {          val x1213: Object = throw new NullPointerException()
x1213} else {p10_3}
          val x1215: Int = unsafe.getInt(x1214,16)
          val x1216: Int = p10_6 + x1215
          val x1217: Boolean = p10_3 eq null
          val x1219: Object = if (x1217) {          val x1218: Object = throw new NullPointerException()
x1218} else {p10_3}
          val x1220: Unit = block_333(null,null,null,null,p10_3,x1216,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1220
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_327(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1221: Boolean = p11_3 eq null
          val x1223: Object = if (x1221) {          val x1222: Object = throw new NullPointerException()
x1222} else {p11_3}
          val x1224: Object = unsafe.getObject(x1223,24)
          val x1225: Boolean = x1224 eq null
          val x1227: Object = if (x1225) {          val x1226: Object = throw new NullPointerException()
x1226} else {x1224}
          val x1228: Int = java.lang.reflect.Array.getLength(x1227)
          val x1229: Int = -x1228
          val x1230: Int = x1229 + p11_4
          val x1231: Boolean = x1230 <= 0
          val x1234: Unit = if (x1231) {          val x1232: Unit = block_334(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1232} else {          val x1233: Unit = block_335(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1233}
x1234
}
// *** begin block 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_328(r:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Int,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1235: Unit = block_336(r,p2_0,p2_1,p2_2,p2_3,p2_4,p3_5,p2_6) // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1235
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_329(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1236: Unit = block_337(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1236
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_330(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1237: Int = -p10_4
          val x1238: Unit = block_338(null,null,null,null,x1237,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1238
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_331(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1239: Unit = block_339(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1239
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_332(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1240: Boolean = p10_3 eq null
          val x1242: Object = if (x1240) {          val x1241: Object = throw new NullPointerException()
x1241} else {p10_3}
          val x1243: Int = unsafe.getInt(x1242,16)
          val x1244: Int = p10_6 + x1243
          val x1245: Boolean = p10_3 eq null
          val x1247: Object = if (x1245) {          val x1246: Object = throw new NullPointerException()
x1246} else {p10_3}
          val x1248: Unit = block_340(null,null,null,null,p10_3,x1244,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1248
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_333(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1249: Boolean = p11_3 eq null
          val x1251: Object = if (x1249) {          val x1250: Object = throw new NullPointerException()
x1250} else {p11_3}
          val x1252: Object = unsafe.getObject(x1251,24)
          val x1253: Boolean = x1252 eq null
          val x1255: Object = if (x1253) {          val x1254: Object = throw new NullPointerException()
x1254} else {x1252}
          val x1256: Int = java.lang.reflect.Array.getLength(x1255)
          val x1257: Int = -x1256
          val x1258: Int = x1257 + p11_4
          val x1259: Boolean = x1258 <= 0
          val x1262: Unit = if (x1259) {          val x1260: Unit = block_341(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1260} else {          val x1261: Unit = block_342(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1261}
x1262
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_334(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1263: Unit = block_343(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1263
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_335(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1264: Boolean = p11_3 eq null
          val x1266: Object = if (x1264) {          val x1265: Object = throw new NullPointerException()
x1265} else {p11_3}
          val x1267: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1268: Unit = block_334(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1268
}
// *** begin block 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_336(r:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Int,p2_6:Any): Any = {
          val x1269: Unit = (RES = p2_5) // return to root
x1269
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_337(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1270: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1271: Long = 0.toLong
          val x1272: Boolean = x1270 eq null
          val x1274: Object = if (x1272) {          val x1273: Object = throw new NullPointerException()
x1273} else {x1270}
          val x1275: java.lang.Class[Object] = x1270.getClass.asInstanceOf[Class[Object]]
          val x1276: Boolean = x1275.isArray
          val x1277: Boolean = if (x1276) {false} else {true}
          val x1280: Unit = if (x1277) {          val x1278: java.lang.String = x1275.getName
          val x1279: Unit = throw new ArrayStoreException(x1278)
x1279} else {()}
          val x1281: Boolean = x1271 < 0
          val x1285: Boolean = if (x1281) {x1281} else {          val x1282: Int = java.lang.reflect.Array.getLength(x1270)
          val x1283: Long = x1282.toLong
          val x1284: Boolean = x1271 >= x1283
x1284}
          val x1288: Unit = if (x1285) {          val x1286: Int = x1271.toInt
          val x1287: Unit = throw new ArrayIndexOutOfBoundsException(x1286)
x1287} else {()}
          val x1289: Long = 4 * x1271
          val x1290: Long = 24 + x1289
          val x1291: Int = unsafe.getInt(x1270,x1290)
          val x1292: Boolean = x1291 < p11_3
          val x1295: Unit = if (x1292) {          val x1293: Unit = block_344(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1293} else {          val x1294: Unit = block_345(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1294}
x1295
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_338(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1296: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1297: Long = 0.toLong
          val x1298: Boolean = x1296 eq null
          val x1300: Object = if (x1298) {          val x1299: Object = throw new NullPointerException()
x1299} else {x1296}
          val x1301: java.lang.Class[Object] = x1296.getClass.asInstanceOf[Class[Object]]
          val x1302: Boolean = x1301.isArray
          val x1303: Boolean = if (x1302) {false} else {true}
          val x1306: Unit = if (x1303) {          val x1304: java.lang.String = x1301.getName
          val x1305: Unit = throw new ArrayStoreException(x1304)
x1305} else {()}
          val x1307: Boolean = x1297 < 0
          val x1311: Boolean = if (x1307) {x1307} else {          val x1308: Int = java.lang.reflect.Array.getLength(x1296)
          val x1309: Long = x1308.toLong
          val x1310: Boolean = x1297 >= x1309
x1310}
          val x1314: Unit = if (x1311) {          val x1312: Int = x1297.toInt
          val x1313: Unit = throw new ArrayIndexOutOfBoundsException(x1312)
x1313} else {()}
          val x1315: Long = 4 * x1297
          val x1316: Long = 24 + x1315
          val x1317: Int = unsafe.getInt(x1296,x1316)
          val x1318: Boolean = x1317 < p11_3
          val x1321: Unit = if (x1318) {          val x1319: Unit = block_346(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1319} else {          val x1320: Unit = block_347(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1320}
x1321
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_339(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1322: Unit = block_348(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1322
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_340(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1323: Boolean = p11_3 eq null
          val x1325: Object = if (x1323) {          val x1324: Object = throw new NullPointerException()
x1324} else {p11_3}
          val x1326: Object = unsafe.getObject(x1325,24)
          val x1327: Boolean = x1326 eq null
          val x1329: Object = if (x1327) {          val x1328: Object = throw new NullPointerException()
x1328} else {x1326}
          val x1330: Int = java.lang.reflect.Array.getLength(x1329)
          val x1331: Int = -x1330
          val x1332: Int = x1331 + p11_4
          val x1333: Boolean = x1332 <= 0
          val x1336: Unit = if (x1333) {          val x1334: Unit = block_349(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1334} else {          val x1335: Unit = block_350(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1335}
x1336
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_341(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1337: Unit = block_351(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1337
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_342(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1338: Boolean = p11_3 eq null
          val x1340: Object = if (x1338) {          val x1339: Object = throw new NullPointerException()
x1339} else {p11_3}
          val x1341: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1342: Unit = block_341(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1342
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_343(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1343: Boolean = p10_3 eq null
          val x1345: Object = if (x1343) {          val x1344: Object = throw new NullPointerException()
x1344} else {p10_3}
          val x1346: Object = unsafe.getObject(x1345,24)
          val x1347: Boolean = p10_3 eq null
          val x1349: Object = if (x1347) {          val x1348: Object = throw new NullPointerException()
x1348} else {p10_3}
          val x1350: Int = unsafe.getInt(x1349,16)
          val x1351: Boolean = p10_4 eq null
          val x1353: Object = if (x1351) {          val x1352: Object = throw new NullPointerException()
x1352} else {p10_4}
          val x1354: Unit = block_352(null,null,null,null,p10_4,0,p10_5,x1346,x1350,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1354
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_344(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1355: Int = p11_4 + 1
          val x1356: Unit = block_353(r,p11_0,p11_1,p11_2,p11_3,x1355,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1356
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_345(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1357: Int = 1 + p11_4
          val x1358: Unit = block_354(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1357,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1358
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_346(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1359: Int = p11_4 + 1
          val x1360: Unit = block_355(r,p11_0,p11_1,p11_2,p11_3,x1359,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1360
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_347(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1361: Int = 1 + p11_4
          val x1362: Unit = block_356(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1361,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1362
}
// *** begin block 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_348(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1363: Boolean = p8_10 eq null
          val x1365: Object = if (x1363) {          val x1364: Object = throw new NullPointerException()
x1364} else {p8_10}
          val x1366: Unit = block_357(null,null,null,null,p8_10," > ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1366
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_349(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1367: Unit = block_358(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1367
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_350(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1368: Boolean = p11_3 eq null
          val x1370: Object = if (x1368) {          val x1369: Object = throw new NullPointerException()
x1369} else {p11_3}
          val x1371: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1372: Unit = block_349(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1372
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_351(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1373: Boolean = p10_3 eq null
          val x1375: Object = if (x1373) {          val x1374: Object = throw new NullPointerException()
x1374} else {p10_3}
          val x1376: Object = unsafe.getObject(x1375,24)
          val x1377: Boolean = p10_3 eq null
          val x1379: Object = if (x1377) {          val x1378: Object = throw new NullPointerException()
x1378} else {p10_3}
          val x1380: Int = unsafe.getInt(x1379,16)
          val x1381: Boolean = p10_4 eq null
          val x1383: Object = if (x1381) {          val x1382: Object = throw new NullPointerException()
x1382} else {p10_4}
          val x1384: Unit = block_359(null,null,null,null,p10_4,0,p10_5,x1376,x1380,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1384
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_352(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1385: Boolean = p11_4 >= 0
          val x1388: Unit = if (x1385) {          val x1386: Unit = block_360(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1386} else {          val x1387: Unit = block_361(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1387}
x1388
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_353(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1389: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1390: Long = p11_4.toLong
          val x1391: Boolean = x1389 eq null
          val x1393: Object = if (x1391) {          val x1392: Object = throw new NullPointerException()
x1392} else {x1389}
          val x1394: java.lang.Class[Object] = x1389.getClass.asInstanceOf[Class[Object]]
          val x1395: Boolean = x1394.isArray
          val x1396: Boolean = if (x1395) {false} else {true}
          val x1399: Unit = if (x1396) {          val x1397: java.lang.String = x1394.getName
          val x1398: Unit = throw new ArrayStoreException(x1397)
x1398} else {()}
          val x1400: Boolean = x1390 < 0
          val x1404: Boolean = if (x1400) {x1400} else {          val x1401: Int = java.lang.reflect.Array.getLength(x1389)
          val x1402: Long = x1401.toLong
          val x1403: Boolean = x1390 >= x1402
x1403}
          val x1407: Unit = if (x1404) {          val x1405: Int = x1390.toInt
          val x1406: Unit = throw new ArrayIndexOutOfBoundsException(x1405)
x1406} else {()}
          val x1408: Long = 4 * x1390
          val x1409: Long = 24 + x1408
          val x1410: Int = unsafe.getInt(x1389,x1409)
          val x1411: Boolean = x1410 < p11_3
          val x1414: Unit = if (x1411) {          val x1412: Unit = block_344(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1412} else {          val x1413: Unit = block_345(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1413}
x1414
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_354(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1415: Boolean = p10_3 eq null
          val x1417: Object = if (x1415) {          val x1416: Object = throw new NullPointerException()
x1416} else {p10_3}
          val x1418: Int = unsafe.getInt(x1417,16)
          val x1419: Int = p10_7 + x1418
          val x1420: Boolean = p10_3 eq null
          val x1422: Object = if (x1420) {          val x1421: Object = throw new NullPointerException()
x1421} else {p10_3}
          val x1423: Unit = block_362(null,null,null,null,p10_3,x1419,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x1419,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1423
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_355(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1424: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1425: Long = p11_4.toLong
          val x1426: Boolean = x1424 eq null
          val x1428: Object = if (x1426) {          val x1427: Object = throw new NullPointerException()
x1427} else {x1424}
          val x1429: java.lang.Class[Object] = x1424.getClass.asInstanceOf[Class[Object]]
          val x1430: Boolean = x1429.isArray
          val x1431: Boolean = if (x1430) {false} else {true}
          val x1434: Unit = if (x1431) {          val x1432: java.lang.String = x1429.getName
          val x1433: Unit = throw new ArrayStoreException(x1432)
x1433} else {()}
          val x1435: Boolean = x1425 < 0
          val x1439: Boolean = if (x1435) {x1435} else {          val x1436: Int = java.lang.reflect.Array.getLength(x1424)
          val x1437: Long = x1436.toLong
          val x1438: Boolean = x1425 >= x1437
x1438}
          val x1442: Unit = if (x1439) {          val x1440: Int = x1425.toInt
          val x1441: Unit = throw new ArrayIndexOutOfBoundsException(x1440)
x1441} else {()}
          val x1443: Long = 4 * x1425
          val x1444: Long = 24 + x1443
          val x1445: Int = unsafe.getInt(x1424,x1444)
          val x1446: Boolean = x1445 < p11_3
          val x1449: Unit = if (x1446) {          val x1447: Unit = block_346(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1447} else {          val x1448: Unit = block_347(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1448}
x1449
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_356(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1450: Int = 1 + p10_7
          val x1451: Unit = block_354(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1450,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1451
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_357(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1452: Boolean = p9_3 eq null
          val x1454: Object = if (x1452) {          val x1453: Object = throw new NullPointerException()
x1453} else {p9_3}
          val x1455: Unit = block_363(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1455
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_358(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1456: Boolean = p10_3 eq null
          val x1458: Object = if (x1456) {          val x1457: Object = throw new NullPointerException()
x1457} else {p10_3}
          val x1459: Object = unsafe.getObject(x1458,24)
          val x1460: Boolean = p10_3 eq null
          val x1462: Object = if (x1460) {          val x1461: Object = throw new NullPointerException()
x1461} else {p10_3}
          val x1463: Int = unsafe.getInt(x1462,16)
          val x1464: Boolean = p10_4 eq null
          val x1466: Object = if (x1464) {          val x1465: Object = throw new NullPointerException()
x1465} else {p10_4}
          val x1467: Unit = block_364(null,null,null,null,p10_4,0,p10_5,x1459,x1463,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1467
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_359(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1468: Boolean = p11_4 >= 0
          val x1471: Unit = if (x1468) {          val x1469: Unit = block_365(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1469} else {          val x1470: Unit = block_366(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1470}
x1471
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_360(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1472: Boolean = p11_3 eq null
          val x1474: Object = if (x1472) {          val x1473: Object = throw new NullPointerException()
x1473} else {p11_3}
          val x1475: Object = unsafe.getObject(x1474,16)
          val x1476: Boolean = x1475 eq null
          val x1478: Object = if (x1476) {          val x1477: Object = throw new NullPointerException()
x1477} else {x1475}
          val x1479: Int = java.lang.reflect.Array.getLength(x1478)
          val x1480: Boolean = x1479 >= p11_5
          val x1483: Unit = if (x1480) {          val x1481: Unit = block_367(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1481} else {          val x1482: Unit = block_368(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1482}
x1483
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_361(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1484: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1485: Boolean = x1484 eq null
          val x1487: Object = if (x1485) {          val x1486: Object = throw new NullPointerException()
x1486} else {x1484}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1488: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1488
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_362(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1489: Boolean = p11_3 eq null
          val x1491: Object = if (x1489) {          val x1490: Object = throw new NullPointerException()
x1490} else {p11_3}
          val x1492: Object = unsafe.getObject(x1491,24)
          val x1493: Boolean = x1492 eq null
          val x1495: Object = if (x1493) {          val x1494: Object = throw new NullPointerException()
x1494} else {x1492}
          val x1496: Int = java.lang.reflect.Array.getLength(x1495)
          val x1497: Int = -x1496
          val x1498: Int = x1497 + p11_4
          val x1499: Boolean = x1498 <= 0
          val x1502: Unit = if (x1499) {          val x1500: Unit = block_369(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1500} else {          val x1501: Unit = block_370(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1501}
x1502
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_363(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1505: Unit = if (true) {          val x1503: Unit = block_371(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1503} else {          val x1504: Unit = block_372(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1504}
x1505
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_364(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1506: Boolean = p11_4 >= 0
          val x1509: Unit = if (x1506) {          val x1507: Unit = block_373(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1507} else {          val x1508: Unit = block_374(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1508}
x1509
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_365(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1510: Boolean = p11_3 eq null
          val x1512: Object = if (x1510) {          val x1511: Object = throw new NullPointerException()
x1511} else {p11_3}
          val x1513: Object = unsafe.getObject(x1512,16)
          val x1514: Boolean = x1513 eq null
          val x1516: Object = if (x1514) {          val x1515: Object = throw new NullPointerException()
x1515} else {x1513}
          val x1517: Int = java.lang.reflect.Array.getLength(x1516)
          val x1518: Boolean = x1517 >= p11_5
          val x1521: Unit = if (x1518) {          val x1519: Unit = block_375(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1519} else {          val x1520: Unit = block_376(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1520}
x1521
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_366(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1522: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1523: Boolean = x1522 eq null
          val x1525: Object = if (x1523) {          val x1524: Object = throw new NullPointerException()
x1524} else {x1522}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1526: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1526
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_367(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1527: Boolean = p11_5 >= p11_4
          val x1530: Unit = if (x1527) {          val x1528: Unit = block_377(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1528} else {          val x1529: Unit = block_378(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1529}
x1530
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_368(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1531: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1532: Boolean = x1531 eq null
          val x1534: Object = if (x1532) {          val x1533: Object = throw new NullPointerException()
x1533} else {x1531}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1535: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1535
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_369(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1536: Unit = block_379(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1536
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_370(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1537: Boolean = p11_3 eq null
          val x1539: Object = if (x1537) {          val x1538: Object = throw new NullPointerException()
x1538} else {p11_3}
          val x1540: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1541: Unit = block_369(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1541
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_371(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1542: Boolean = p10_4 eq null
          val x1544: Object = if (x1542) {          val x1543: Object = throw new NullPointerException()
x1543} else {p10_4}
          val x1545: Unit = block_380(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1545
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_372(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1546: Boolean = "null" eq null
          val x1548: Object = if (x1546) {          val x1547: Object = throw new NullPointerException()
x1547} else {"null"}
          val x1549: Unit = block_380(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1549
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_373(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1550: Boolean = p11_3 eq null
          val x1552: Object = if (x1550) {          val x1551: Object = throw new NullPointerException()
x1551} else {p11_3}
          val x1553: Object = unsafe.getObject(x1552,16)
          val x1554: Boolean = x1553 eq null
          val x1556: Object = if (x1554) {          val x1555: Object = throw new NullPointerException()
x1555} else {x1553}
          val x1557: Int = java.lang.reflect.Array.getLength(x1556)
          val x1558: Boolean = x1557 >= p11_5
          val x1561: Unit = if (x1558) {          val x1559: Unit = block_381(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1559} else {          val x1560: Unit = block_382(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1560}
x1561
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_374(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1562: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1563: Boolean = x1562 eq null
          val x1565: Object = if (x1563) {          val x1564: Object = throw new NullPointerException()
x1564} else {x1562}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1566: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1566
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_375(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1567: Boolean = p11_5 >= p11_4
          val x1570: Unit = if (x1567) {          val x1568: Unit = block_383(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1568} else {          val x1569: Unit = block_384(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1569}
x1570
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_376(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1571: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1572: Boolean = x1571 eq null
          val x1574: Object = if (x1572) {          val x1573: Object = throw new NullPointerException()
x1573} else {x1571}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1575: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1575
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_377(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1576: Boolean = p11_3 eq null
          val x1578: Object = if (x1576) {          val x1577: Object = throw new NullPointerException()
x1577} else {p11_3}
          val x1579: Object = unsafe.getObject(x1578,16)
          val x1580: Int = -p11_4
          val x1581: Int = x1580 + p11_5
          val x1582: Unit = java.lang.System.arraycopy(x1579,p11_4,p11_6,p11_7,x1581).asInstanceOf[Object]
          val x1583: Unit = block_385(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1583
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_378(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1584: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1585: Int = -p11_4
          val x1586: Int = x1585 + p11_5
          val x1587: Boolean = x1584 eq null
          val x1589: Object = if (x1587) {          val x1588: Object = throw new NullPointerException()
x1588} else {x1584}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1590: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1590
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_379(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1591: Boolean = p10_3 eq null
          val x1593: Object = if (x1591) {          val x1592: Object = throw new NullPointerException()
x1592} else {p10_3}
          val x1594: Object = unsafe.getObject(x1593,24)
          val x1595: Unit = block_386(null,null,null,null,p10_4,p10_6,x1594,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1595
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_380(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1596: Boolean = p11_3 eq null
          val x1598: Object = if (x1596) {          val x1597: Object = throw new NullPointerException()
x1597} else {p11_3}
          val x1599: Object = unsafe.getObject(x1598,16)
          val x1600: Boolean = x1599 eq null
          val x1602: Object = if (x1600) {          val x1601: Object = throw new NullPointerException()
x1601} else {x1599}
          val x1603: Int = java.lang.reflect.Array.getLength(x1602)
          val x1604: Unit = block_387(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1603,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1604
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_381(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1605: Boolean = p11_5 >= p11_4
          val x1608: Unit = if (x1605) {          val x1606: Unit = block_388(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1606} else {          val x1607: Unit = block_389(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1607}
x1608
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_382(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1609: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1610: Boolean = x1609 eq null
          val x1612: Object = if (x1610) {          val x1611: Object = throw new NullPointerException()
x1611} else {x1609}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1613: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1613
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_383(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1614: Boolean = p11_3 eq null
          val x1616: Object = if (x1614) {          val x1615: Object = throw new NullPointerException()
x1615} else {p11_3}
          val x1617: Object = unsafe.getObject(x1616,16)
          val x1618: Int = -p11_4
          val x1619: Int = x1618 + p11_5
          val x1620: Unit = java.lang.System.arraycopy(x1617,p11_4,p11_6,p11_7,x1619).asInstanceOf[Object]
          val x1621: Unit = block_390(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1621
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_384(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1622: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1623: Int = -p11_4
          val x1624: Int = x1623 + p11_5
          val x1625: Boolean = x1622 eq null
          val x1627: Object = if (x1625) {          val x1626: Object = throw new NullPointerException()
x1626} else {x1622}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1628: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1628
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_385(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1629: Unit = block_391(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1629
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_386(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1630: Boolean = p11_3 >= 0
          val x1633: Unit = if (x1630) {          val x1631: Unit = block_392(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1631} else {          val x1632: Unit = block_393(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1632}
x1633
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_387(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1634: Boolean = p10_3 eq null
          val x1636: Object = if (x1634) {          val x1635: Object = throw new NullPointerException()
x1635} else {p10_3}
          val x1637: Int = unsafe.getInt(x1636,16)
          val x1638: Int = p10_6 + x1637
          val x1639: Boolean = p10_3 eq null
          val x1641: Object = if (x1639) {          val x1640: Object = throw new NullPointerException()
x1640} else {p10_3}
          val x1642: Unit = block_394(null,null,null,null,p10_3,x1638,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1642
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_388(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1643: Boolean = p11_3 eq null
          val x1645: Object = if (x1643) {          val x1644: Object = throw new NullPointerException()
x1644} else {p11_3}
          val x1646: Object = unsafe.getObject(x1645,16)
          val x1647: Int = -p11_4
          val x1648: Int = x1647 + p11_5
          val x1649: Unit = java.lang.System.arraycopy(x1646,p11_4,p11_6,p11_7,x1648).asInstanceOf[Object]
          val x1650: Unit = block_395(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1650
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_389(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1651: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1652: Int = -p11_4
          val x1653: Int = x1652 + p11_5
          val x1654: Boolean = x1651 eq null
          val x1656: Object = if (x1654) {          val x1655: Object = throw new NullPointerException()
x1655} else {x1651}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1657: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1657
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_390(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1658: Unit = block_396(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1658
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_391(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1659: Boolean = p10_3 eq null
          val x1661: Object = if (x1659) {          val x1660: Object = throw new NullPointerException()
x1660} else {p10_3}
          val x1662: Int = unsafe.getInt(x1661,16)
          val x1663: Int = p10_5 + x1662
          val x1664: Boolean = p10_3 eq null
          val x1666: Object = if (x1664) {          val x1665: Object = throw new NullPointerException()
x1665} else {p10_3}
          val x1667: Unit = unsafe.putInt(x1666,16, x1663)
          val x1668: Unit = block_397(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1668
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_392(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1669: Boolean = 65536 > p11_3
          val x1672: Unit = if (x1669) {          val x1670: Unit = block_398(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1670} else {          val x1671: Unit = block_399(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1671}
x1672
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_393(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1673: Int = -p11_3
          val x1674: Boolean = 65536 > x1673
          val x1677: Unit = if (x1674) {          val x1675: Unit = block_398(r,p11_0,p11_1,p11_2,x1673,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1675} else {          val x1676: Unit = block_399(r,p11_0,p11_1,p11_2,x1673,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1676}
x1677
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_394(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1678: Boolean = p11_3 eq null
          val x1680: Object = if (x1678) {          val x1679: Object = throw new NullPointerException()
x1679} else {p11_3}
          val x1681: Object = unsafe.getObject(x1680,24)
          val x1682: Boolean = x1681 eq null
          val x1684: Object = if (x1682) {          val x1683: Object = throw new NullPointerException()
x1683} else {x1681}
          val x1685: Int = java.lang.reflect.Array.getLength(x1684)
          val x1686: Int = -x1685
          val x1687: Int = x1686 + p11_4
          val x1688: Boolean = x1687 <= 0
          val x1691: Unit = if (x1688) {          val x1689: Unit = block_400(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1689} else {          val x1690: Unit = block_401(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1690}
x1691
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_395(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1692: Unit = block_402(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1692
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_396(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1693: Boolean = p10_3 eq null
          val x1695: Object = if (x1693) {          val x1694: Object = throw new NullPointerException()
x1694} else {p10_3}
          val x1696: Int = unsafe.getInt(x1695,16)
          val x1697: Int = p10_5 + x1696
          val x1698: Boolean = p10_3 eq null
          val x1700: Object = if (x1698) {          val x1699: Object = throw new NullPointerException()
x1699} else {p10_3}
          val x1701: Unit = unsafe.putInt(x1700,16, x1697)
          val x1702: Unit = block_403(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1702
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_397(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1703: Unit = block_404(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1703
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_398(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1704: Int = 52429 * p11_3
          val x1705: Int = x1704 >>> 19
          val x1706: Int = x1705 << 3
          val x1707: Int = x1705 << 1
          val x1708: Int = x1707 + x1706
          val x1709: Int = -x1708
          val x1710: Int = x1709 + p11_3
          val x1711: Int = p11_8 + -1
          val x1712: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x1713: Long = x1710.toLong
          val x1714: Boolean = x1712 eq null
          val x1716: Object = if (x1714) {          val x1715: Object = throw new NullPointerException()
x1715} else {x1712}
          val x1717: java.lang.Class[Object] = x1712.getClass.asInstanceOf[Class[Object]]
          val x1718: Boolean = x1717.isArray
          val x1719: Boolean = if (x1718) {false} else {true}
          val x1722: Unit = if (x1719) {          val x1720: java.lang.String = x1717.getName
          val x1721: Unit = throw new ArrayStoreException(x1720)
x1721} else {()}
          val x1723: Boolean = x1713 < 0
          val x1727: Boolean = if (x1723) {x1723} else {          val x1724: Int = java.lang.reflect.Array.getLength(x1712)
          val x1725: Long = x1724.toLong
          val x1726: Boolean = x1713 >= x1725
x1726}
          val x1730: Unit = if (x1727) {          val x1728: Int = x1713.toInt
          val x1729: Unit = throw new ArrayIndexOutOfBoundsException(x1728)
x1729} else {()}
          val x1731: Long = 2 * x1713
          val x1732: Long = 24 + x1731
          val x1733: Char = unsafe.getChar(x1712,x1732)
          val x1734: Int = x1733.toInt
          val x1735: Char = x1734.toChar
          val x1736: Long = x1711.toLong
          val x1737: Boolean = p11_5 eq null
          val x1739: Object = if (x1737) {          val x1738: Object = throw new NullPointerException()
x1738} else {p11_5}
          val x1740: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1741: Boolean = x1740.isArray
          val x1742: Boolean = if (x1741) {false} else {true}
          val x1745: Unit = if (x1742) {          val x1743: java.lang.String = x1740.getName
          val x1744: Unit = throw new ArrayStoreException(x1743)
x1744} else {()}
          val x1746: Boolean = x1736 < 0
          val x1750: Boolean = if (x1746) {x1746} else {          val x1747: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1748: Long = x1747.toLong
          val x1749: Boolean = x1736 >= x1748
x1749}
          val x1753: Unit = if (x1750) {          val x1751: Int = x1736.toInt
          val x1752: Unit = throw new ArrayIndexOutOfBoundsException(x1751)
x1752} else {()}
          val x1754: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1755: java.lang.Class[Object] = x1754.getComponentType.asInstanceOf[Class[Object]]
          val x1756: Boolean = x1755.isAssignableFrom(classOf[Char])
          val x1757: Boolean = if (x1756) {false} else {true}
          val x1759: Unit = if (x1757) {          val x1758: Unit = throw new ArrayStoreException("char")
x1758} else {()}
          val x1760: Long = 2 * x1736
          val x1761: Long = 24 + x1760
          val x1762: Unit = unsafe.putChar(p11_5,x1761, x1735)
          val x1765: Unit = if (true) {          val x1763: Unit = block_398(r,p11_0,p11_1,p11_2,x1705,p11_4,p11_5,x1705,x1710,x1711,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1763} else {          val x1764: Unit = block_405(r,p11_0,p11_1,p11_2,x1705,p11_4,p11_5,x1705,x1710,x1711,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1764}
x1765
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_399(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1766: Int = p11_3 / 100
          val x1767: Int = x1766 << 6
          val x1768: Int = x1766 << 5
          val x1769: Int = x1768 + x1767
          val x1770: Int = x1766 << 2
          val x1771: Int = x1770 + x1769
          val x1772: Int = -x1771
          val x1773: Int = x1772 + p11_3
          val x1774: Int = p11_8 + -1
          val x1775: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x1776: Long = x1773.toLong
          val x1777: Boolean = x1775 eq null
          val x1779: Object = if (x1777) {          val x1778: Object = throw new NullPointerException()
x1778} else {x1775}
          val x1780: java.lang.Class[Object] = x1775.getClass.asInstanceOf[Class[Object]]
          val x1781: Boolean = x1780.isArray
          val x1782: Boolean = if (x1781) {false} else {true}
          val x1785: Unit = if (x1782) {          val x1783: java.lang.String = x1780.getName
          val x1784: Unit = throw new ArrayStoreException(x1783)
x1784} else {()}
          val x1786: Boolean = x1776 < 0
          val x1790: Boolean = if (x1786) {x1786} else {          val x1787: Int = java.lang.reflect.Array.getLength(x1775)
          val x1788: Long = x1787.toLong
          val x1789: Boolean = x1776 >= x1788
x1789}
          val x1793: Unit = if (x1790) {          val x1791: Int = x1776.toInt
          val x1792: Unit = throw new ArrayIndexOutOfBoundsException(x1791)
x1792} else {()}
          val x1794: Long = 2 * x1776
          val x1795: Long = 24 + x1794
          val x1796: Char = unsafe.getChar(x1775,x1795)
          val x1797: Int = x1796.toInt
          val x1798: Char = x1797.toChar
          val x1799: Long = x1774.toLong
          val x1800: Boolean = p11_5 eq null
          val x1802: Object = if (x1800) {          val x1801: Object = throw new NullPointerException()
x1801} else {p11_5}
          val x1803: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1804: Boolean = x1803.isArray
          val x1805: Boolean = if (x1804) {false} else {true}
          val x1808: Unit = if (x1805) {          val x1806: java.lang.String = x1803.getName
          val x1807: Unit = throw new ArrayStoreException(x1806)
x1807} else {()}
          val x1809: Boolean = x1799 < 0
          val x1813: Boolean = if (x1809) {x1809} else {          val x1810: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1811: Long = x1810.toLong
          val x1812: Boolean = x1799 >= x1811
x1812}
          val x1816: Unit = if (x1813) {          val x1814: Int = x1799.toInt
          val x1815: Unit = throw new ArrayIndexOutOfBoundsException(x1814)
x1815} else {()}
          val x1817: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1818: java.lang.Class[Object] = x1817.getComponentType.asInstanceOf[Class[Object]]
          val x1819: Boolean = x1818.isAssignableFrom(classOf[Char])
          val x1820: Boolean = if (x1819) {false} else {true}
          val x1822: Unit = if (x1820) {          val x1821: Unit = throw new ArrayStoreException("char")
x1821} else {()}
          val x1823: Long = 2 * x1799
          val x1824: Long = 24 + x1823
          val x1825: Unit = unsafe.putChar(p11_5,x1824, x1798)
          val x1826: Int = x1774 + -1
          val x1827: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x1828: Long = x1773.toLong
          val x1829: Boolean = x1827 eq null
          val x1831: Object = if (x1829) {          val x1830: Object = throw new NullPointerException()
x1830} else {x1827}
          val x1832: java.lang.Class[Object] = x1827.getClass.asInstanceOf[Class[Object]]
          val x1833: Boolean = x1832.isArray
          val x1834: Boolean = if (x1833) {false} else {true}
          val x1837: Unit = if (x1834) {          val x1835: java.lang.String = x1832.getName
          val x1836: Unit = throw new ArrayStoreException(x1835)
x1836} else {()}
          val x1838: Boolean = x1828 < 0
          val x1842: Boolean = if (x1838) {x1838} else {          val x1839: Int = java.lang.reflect.Array.getLength(x1827)
          val x1840: Long = x1839.toLong
          val x1841: Boolean = x1828 >= x1840
x1841}
          val x1845: Unit = if (x1842) {          val x1843: Int = x1828.toInt
          val x1844: Unit = throw new ArrayIndexOutOfBoundsException(x1843)
x1844} else {()}
          val x1846: Long = 2 * x1828
          val x1847: Long = 24 + x1846
          val x1848: Char = unsafe.getChar(x1827,x1847)
          val x1849: Int = x1848.toInt
          val x1850: Char = x1849.toChar
          val x1851: Long = x1826.toLong
          val x1852: Boolean = p11_5 eq null
          val x1854: Object = if (x1852) {          val x1853: Object = throw new NullPointerException()
x1853} else {p11_5}
          val x1855: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1856: Boolean = x1855.isArray
          val x1857: Boolean = if (x1856) {false} else {true}
          val x1860: Unit = if (x1857) {          val x1858: java.lang.String = x1855.getName
          val x1859: Unit = throw new ArrayStoreException(x1858)
x1859} else {()}
          val x1861: Boolean = x1851 < 0
          val x1865: Boolean = if (x1861) {x1861} else {          val x1862: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1863: Long = x1862.toLong
          val x1864: Boolean = x1851 >= x1863
x1864}
          val x1868: Unit = if (x1865) {          val x1866: Int = x1851.toInt
          val x1867: Unit = throw new ArrayIndexOutOfBoundsException(x1866)
x1867} else {()}
          val x1869: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1870: java.lang.Class[Object] = x1869.getComponentType.asInstanceOf[Class[Object]]
          val x1871: Boolean = x1870.isAssignableFrom(classOf[Char])
          val x1872: Boolean = if (x1871) {false} else {true}
          val x1874: Unit = if (x1872) {          val x1873: Unit = throw new ArrayStoreException("char")
x1873} else {()}
          val x1875: Long = 2 * x1851
          val x1876: Long = 24 + x1875
          val x1877: Unit = unsafe.putChar(p11_5,x1876, x1850)
          val x1878: Unit = block_392(r,p11_0,p11_1,p11_2,x1766,p11_4,p11_5,x1766,x1773,x1826,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1878
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_400(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1879: Unit = block_406(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1879
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_401(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1880: Boolean = p11_3 eq null
          val x1882: Object = if (x1880) {          val x1881: Object = throw new NullPointerException()
x1881} else {p11_3}
          val x1883: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1884: Unit = block_400(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1884
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_402(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1885: Boolean = p10_3 eq null
          val x1887: Object = if (x1885) {          val x1886: Object = throw new NullPointerException()
x1886} else {p10_3}
          val x1888: Int = unsafe.getInt(x1887,16)
          val x1889: Int = p10_5 + x1888
          val x1890: Boolean = p10_3 eq null
          val x1892: Object = if (x1890) {          val x1891: Object = throw new NullPointerException()
x1891} else {p10_3}
          val x1893: Unit = unsafe.putInt(x1892,16, x1889)
          val x1894: Unit = block_407(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1894
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_403(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1895: Unit = block_408(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1895
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_404(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1896: Boolean = p8_6 eq null
          val x1898: Object = if (x1896) {          val x1897: Object = throw new NullPointerException()
x1897} else {p8_6}
          val x1899: Unit = block_409(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1899
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_405(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1900: Unit = block_410(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1900
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_406(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1901: Boolean = p10_3 eq null
          val x1903: Object = if (x1901) {          val x1902: Object = throw new NullPointerException()
x1902} else {p10_3}
          val x1904: Object = unsafe.getObject(x1903,24)
          val x1905: Boolean = p10_3 eq null
          val x1907: Object = if (x1905) {          val x1906: Object = throw new NullPointerException()
x1906} else {p10_3}
          val x1908: Int = unsafe.getInt(x1907,16)
          val x1909: Boolean = p10_4 eq null
          val x1911: Object = if (x1909) {          val x1910: Object = throw new NullPointerException()
x1910} else {p10_4}
          val x1912: Unit = block_411(null,null,null,null,p10_4,0,p10_5,x1904,x1908,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1912
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_407(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1913: Unit = block_412(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1913
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_408(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1914: Boolean = p8_6 eq null
          val x1916: Object = if (x1914) {          val x1915: Object = throw new NullPointerException()
x1915} else {p8_6}
          val x1917: Unit = block_413(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1917
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_409(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1918: Boolean = p9_3 eq null
          val x1920: Object = if (x1918) {          val x1919: Object = throw new NullPointerException()
x1919} else {p9_3}
          val x1921: Unit = block_414(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1921
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_410(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1924: Unit = if (false) {          val x1922: Unit = block_415(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1922} else {          val x1923: Unit = block_416(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1923}
x1924
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_411(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1925: Boolean = p11_4 >= 0
          val x1928: Unit = if (x1925) {          val x1926: Unit = block_417(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1926} else {          val x1927: Unit = block_418(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1927}
x1928
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_412(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1929: Boolean = p8_6 eq null
          val x1931: Object = if (x1929) {          val x1930: Object = throw new NullPointerException()
x1930} else {p8_6}
          val x1932: Unit = block_419(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1932
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_413(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1933: Boolean = p9_3 eq null
          val x1935: Object = if (x1933) {          val x1934: Object = throw new NullPointerException()
x1934} else {p9_3}
          val x1936: Unit = block_420(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1936
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_414(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1939: Unit = if (true) {          val x1937: Unit = block_421(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1937} else {          val x1938: Unit = block_422(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1938}
x1939
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_415(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1940: Unit = block_423(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1940
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_416(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1941: Int = p11_8 + -1
          val x1942: Char = p11_9.toChar
          val x1943: Long = x1941.toLong
          val x1944: Boolean = p11_5 eq null
          val x1946: Object = if (x1944) {          val x1945: Object = throw new NullPointerException()
x1945} else {p11_5}
          val x1947: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1948: Boolean = x1947.isArray
          val x1949: Boolean = if (x1948) {false} else {true}
          val x1952: Unit = if (x1949) {          val x1950: java.lang.String = x1947.getName
          val x1951: Unit = throw new ArrayStoreException(x1950)
x1951} else {()}
          val x1953: Boolean = x1943 < 0
          val x1957: Boolean = if (x1953) {x1953} else {          val x1954: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1955: Long = x1954.toLong
          val x1956: Boolean = x1943 >= x1955
x1956}
          val x1960: Unit = if (x1957) {          val x1958: Int = x1943.toInt
          val x1959: Unit = throw new ArrayIndexOutOfBoundsException(x1958)
x1959} else {()}
          val x1961: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1962: java.lang.Class[Object] = x1961.getComponentType.asInstanceOf[Class[Object]]
          val x1963: Boolean = x1962.isAssignableFrom(classOf[Char])
          val x1964: Boolean = if (x1963) {false} else {true}
          val x1966: Unit = if (x1964) {          val x1965: Unit = throw new ArrayStoreException("char")
x1965} else {()}
          val x1967: Long = 2 * x1943
          val x1968: Long = 24 + x1967
          val x1969: Unit = unsafe.putChar(p11_5,x1968, x1942)
          val x1970: Unit = block_423(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1970
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_417(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1971: Boolean = p11_3 eq null
          val x1973: Object = if (x1971) {          val x1972: Object = throw new NullPointerException()
x1972} else {p11_3}
          val x1974: Object = unsafe.getObject(x1973,16)
          val x1975: Boolean = x1974 eq null
          val x1977: Object = if (x1975) {          val x1976: Object = throw new NullPointerException()
x1976} else {x1974}
          val x1978: Int = java.lang.reflect.Array.getLength(x1977)
          val x1979: Boolean = x1978 >= p11_5
          val x1982: Unit = if (x1979) {          val x1980: Unit = block_424(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1980} else {          val x1981: Unit = block_425(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1981}
x1982
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_418(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1983: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1984: Boolean = x1983 eq null
          val x1986: Object = if (x1984) {          val x1985: Object = throw new NullPointerException()
x1985} else {x1983}
          val x1987: Unit = block_426(null,null,null,null,x1983,p11_4,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x1983,null,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1987
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_419(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1988: Boolean = p9_3 eq null
          val x1990: Object = if (x1988) {          val x1989: Object = throw new NullPointerException()
x1989} else {p9_3}
          val x1991: Unit = block_427(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1991
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_420(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1994: Unit = if (true) {          val x1992: Unit = block_428(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1992} else {          val x1993: Unit = block_429(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1993}
x1994
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_421(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1995: Boolean = p10_4 >= 0
          val x1998: Unit = if (x1995) {          val x1996: Unit = block_430(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1996} else {          val x1997: Unit = block_431(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1997}
x1998
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_422(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1999: Boolean = p10_3 eq null
          val x2001: Object = if (x1999) {          val x2000: Object = throw new NullPointerException()
x2000} else {p10_3}
          val x2002: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2003: Unit = block_432(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2002,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2003
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_423(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2004: Boolean = p10_3 eq null
          val x2006: Object = if (x2004) {          val x2005: Object = throw new NullPointerException()
x2005} else {p10_3}
          val x2007: Unit = unsafe.putInt(x2006,16, p10_6)
          val x2008: Unit = block_339(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2008
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_424(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2009: Boolean = p11_5 >= p11_4
          val x2012: Unit = if (x2009) {          val x2010: Unit = block_433(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2010} else {          val x2011: Unit = block_434(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2011}
x2012
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_425(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2013: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x2014: Boolean = x2013 eq null
          val x2016: Object = if (x2014) {          val x2015: Object = throw new NullPointerException()
x2015} else {x2013}
          val x2017: Unit = block_435(null,null,null,null,x2013,p11_5,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x2013,null,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2017
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_426(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2018: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x2019: Boolean = x2018 eq null
          val x2021: Object = if (x2019) {          val x2020: Object = throw new NullPointerException()
x2020} else {x2018}
          val x2022: Unit = block_436(null,null,null,null,x2018,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2018,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2022
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_427(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2025: Unit = if (true) {          val x2023: Unit = block_437(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2023} else {          val x2024: Unit = block_438(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2024}
x2025
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_428(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2026: Boolean = p10_4 >= 0
          val x2029: Unit = if (x2026) {          val x2027: Unit = block_439(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2027} else {          val x2028: Unit = block_440(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2028}
x2029
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_429(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2030: Boolean = p10_3 eq null
          val x2032: Object = if (x2030) {          val x2031: Object = throw new NullPointerException()
x2031} else {p10_3}
          val x2033: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2034: Unit = block_441(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2033,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2034
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_430(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2035: Unit = block_442(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2035
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_431(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2036: Int = -p10_4
          val x2037: Unit = block_443(null,null,null,null,x2036,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2037
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_432(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2038: Unit = block_444(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2038
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_433(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2039: Boolean = p11_3 eq null
          val x2041: Object = if (x2039) {          val x2040: Object = throw new NullPointerException()
x2040} else {p11_3}
          val x2042: Object = unsafe.getObject(x2041,16)
          val x2043: Int = -p11_4
          val x2044: Int = x2043 + p11_5
          val x2045: Unit = java.lang.System.arraycopy(x2042,p11_4,p11_6,p11_7,x2044).asInstanceOf[Object]
          val x2046: Unit = block_445(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2046
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_434(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2047: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x2048: Int = -p11_4
          val x2049: Int = x2048 + p11_5
          val x2050: Boolean = x2047 eq null
          val x2052: Object = if (x2050) {          val x2051: Object = throw new NullPointerException()
x2051} else {x2047}
          val x2053: Unit = block_446(null,null,null,null,x2047,x2049,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x2047,null,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2053
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_435(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2054: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x2055: Boolean = x2054 eq null
          val x2057: Object = if (x2055) {          val x2056: Object = throw new NullPointerException()
x2056} else {x2054}
          val x2058: Unit = block_447(null,null,null,null,x2054,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2054,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2058
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_436(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2059: Boolean = p13_3 eq null
          val x2061: Object = if (x2059) {          val x2060: Object = throw new NullPointerException()
x2060} else {p13_3}
          val x2062: Unit = block_448(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2062
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_437(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2063: Boolean = p10_4 >= 0
          val x2066: Unit = if (x2063) {          val x2064: Unit = block_449(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2064} else {          val x2065: Unit = block_450(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2065}
x2066
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_438(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2067: Boolean = p10_3 eq null
          val x2069: Object = if (x2067) {          val x2068: Object = throw new NullPointerException()
x2068} else {p10_3}
          val x2070: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2071: Unit = block_451(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2070,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2071
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_439(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2072: Unit = block_452(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2072
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_440(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2073: Int = -p10_4
          val x2074: Unit = block_453(null,null,null,null,x2073,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2074
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_441(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2075: Unit = block_454(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2075
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_442(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2076: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2077: Long = 0.toLong
          val x2078: Boolean = x2076 eq null
          val x2080: Object = if (x2078) {          val x2079: Object = throw new NullPointerException()
x2079} else {x2076}
          val x2081: java.lang.Class[Object] = x2076.getClass.asInstanceOf[Class[Object]]
          val x2082: Boolean = x2081.isArray
          val x2083: Boolean = if (x2082) {false} else {true}
          val x2086: Unit = if (x2083) {          val x2084: java.lang.String = x2081.getName
          val x2085: Unit = throw new ArrayStoreException(x2084)
x2085} else {()}
          val x2087: Boolean = x2077 < 0
          val x2091: Boolean = if (x2087) {x2087} else {          val x2088: Int = java.lang.reflect.Array.getLength(x2076)
          val x2089: Long = x2088.toLong
          val x2090: Boolean = x2077 >= x2089
x2090}
          val x2094: Unit = if (x2091) {          val x2092: Int = x2077.toInt
          val x2093: Unit = throw new ArrayIndexOutOfBoundsException(x2092)
x2093} else {()}
          val x2095: Long = 4 * x2077
          val x2096: Long = 24 + x2095
          val x2097: Int = unsafe.getInt(x2076,x2096)
          val x2098: Boolean = x2097 < p11_3
          val x2101: Unit = if (x2098) {          val x2099: Unit = block_455(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2099} else {          val x2100: Unit = block_456(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2100}
x2101
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_443(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2102: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2103: Long = 0.toLong
          val x2104: Boolean = x2102 eq null
          val x2106: Object = if (x2104) {          val x2105: Object = throw new NullPointerException()
x2105} else {x2102}
          val x2107: java.lang.Class[Object] = x2102.getClass.asInstanceOf[Class[Object]]
          val x2108: Boolean = x2107.isArray
          val x2109: Boolean = if (x2108) {false} else {true}
          val x2112: Unit = if (x2109) {          val x2110: java.lang.String = x2107.getName
          val x2111: Unit = throw new ArrayStoreException(x2110)
x2111} else {()}
          val x2113: Boolean = x2103 < 0
          val x2117: Boolean = if (x2113) {x2113} else {          val x2114: Int = java.lang.reflect.Array.getLength(x2102)
          val x2115: Long = x2114.toLong
          val x2116: Boolean = x2103 >= x2115
x2116}
          val x2120: Unit = if (x2117) {          val x2118: Int = x2103.toInt
          val x2119: Unit = throw new ArrayIndexOutOfBoundsException(x2118)
x2119} else {()}
          val x2121: Long = 4 * x2103
          val x2122: Long = 24 + x2121
          val x2123: Int = unsafe.getInt(x2102,x2122)
          val x2124: Boolean = x2123 < p11_3
          val x2127: Unit = if (x2124) {          val x2125: Unit = block_457(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2125} else {          val x2126: Unit = block_458(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2126}
x2127
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_444(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2128: Unit = block_459(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2128
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_445(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2129: Unit = block_460(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2129
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_446(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2130: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x2131: Boolean = x2130 eq null
          val x2133: Object = if (x2131) {          val x2132: Object = throw new NullPointerException()
x2132} else {x2130}
          val x2134: Unit = block_461(null,null,null,null,x2130,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2130,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2134
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_447(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2135: Boolean = p13_3 eq null
          val x2137: Object = if (x2135) {          val x2136: Object = throw new NullPointerException()
x2136} else {p13_3}
          val x2138: Unit = block_462(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2138
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_448(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2139: Boolean = p14_3 eq null
          val x2141: Object = if (x2139) {          val x2140: Object = throw new NullPointerException()
x2140} else {p14_3}
          val x2142: Unit = block_463(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2142
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_449(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2143: Unit = block_464(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2143
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_450(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2144: Int = -p10_4
          val x2145: Unit = block_465(null,null,null,null,x2144,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2145
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_451(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2146: Unit = block_466(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2146
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_452(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2147: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2148: Long = 0.toLong
          val x2149: Boolean = x2147 eq null
          val x2151: Object = if (x2149) {          val x2150: Object = throw new NullPointerException()
x2150} else {x2147}
          val x2152: java.lang.Class[Object] = x2147.getClass.asInstanceOf[Class[Object]]
          val x2153: Boolean = x2152.isArray
          val x2154: Boolean = if (x2153) {false} else {true}
          val x2157: Unit = if (x2154) {          val x2155: java.lang.String = x2152.getName
          val x2156: Unit = throw new ArrayStoreException(x2155)
x2156} else {()}
          val x2158: Boolean = x2148 < 0
          val x2162: Boolean = if (x2158) {x2158} else {          val x2159: Int = java.lang.reflect.Array.getLength(x2147)
          val x2160: Long = x2159.toLong
          val x2161: Boolean = x2148 >= x2160
x2161}
          val x2165: Unit = if (x2162) {          val x2163: Int = x2148.toInt
          val x2164: Unit = throw new ArrayIndexOutOfBoundsException(x2163)
x2164} else {()}
          val x2166: Long = 4 * x2148
          val x2167: Long = 24 + x2166
          val x2168: Int = unsafe.getInt(x2147,x2167)
          val x2169: Boolean = x2168 < p11_3
          val x2172: Unit = if (x2169) {          val x2170: Unit = block_467(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2170} else {          val x2171: Unit = block_468(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2171}
x2172
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_453(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2173: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2174: Long = 0.toLong
          val x2175: Boolean = x2173 eq null
          val x2177: Object = if (x2175) {          val x2176: Object = throw new NullPointerException()
x2176} else {x2173}
          val x2178: java.lang.Class[Object] = x2173.getClass.asInstanceOf[Class[Object]]
          val x2179: Boolean = x2178.isArray
          val x2180: Boolean = if (x2179) {false} else {true}
          val x2183: Unit = if (x2180) {          val x2181: java.lang.String = x2178.getName
          val x2182: Unit = throw new ArrayStoreException(x2181)
x2182} else {()}
          val x2184: Boolean = x2174 < 0
          val x2188: Boolean = if (x2184) {x2184} else {          val x2185: Int = java.lang.reflect.Array.getLength(x2173)
          val x2186: Long = x2185.toLong
          val x2187: Boolean = x2174 >= x2186
x2187}
          val x2191: Unit = if (x2188) {          val x2189: Int = x2174.toInt
          val x2190: Unit = throw new ArrayIndexOutOfBoundsException(x2189)
x2190} else {()}
          val x2192: Long = 4 * x2174
          val x2193: Long = 24 + x2192
          val x2194: Int = unsafe.getInt(x2173,x2193)
          val x2195: Boolean = x2194 < p11_3
          val x2198: Unit = if (x2195) {          val x2196: Unit = block_469(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2196} else {          val x2197: Unit = block_470(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2197}
x2198
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_454(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2199: Unit = block_471(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2199
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_455(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2200: Int = p11_4 + 1
          val x2201: Unit = block_472(r,p11_0,p11_1,p11_2,p11_3,x2200,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2201
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_456(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2202: Int = 1 + p11_4
          val x2203: Unit = block_473(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2202,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2203
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_457(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2204: Int = p11_4 + 1
          val x2205: Unit = block_474(r,p11_0,p11_1,p11_2,p11_3,x2204,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2205
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_458(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2206: Int = 1 + p11_4
          val x2207: Unit = block_475(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2206,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2207
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_459(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2208: Boolean = p8_6 eq null
          val x2210: Object = if (x2208) {          val x2209: Object = throw new NullPointerException()
x2209} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2211: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2211
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_460(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2212: Boolean = p10_3 eq null
          val x2214: Object = if (x2212) {          val x2213: Object = throw new NullPointerException()
x2213} else {p10_3}
          val x2215: Int = unsafe.getInt(x2214,16)
          val x2216: Int = p10_5 + x2215
          val x2217: Boolean = p10_3 eq null
          val x2219: Object = if (x2217) {          val x2218: Object = throw new NullPointerException()
x2218} else {p10_3}
          val x2220: Unit = unsafe.putInt(x2219,16, x2216)
          val x2221: Unit = block_476(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2221
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_461(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2222: Boolean = p13_3 eq null
          val x2224: Object = if (x2222) {          val x2223: Object = throw new NullPointerException()
x2223} else {p13_3}
          val x2225: Unit = block_477(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2225
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_462(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2226: Boolean = p14_3 eq null
          val x2228: Object = if (x2226) {          val x2227: Object = throw new NullPointerException()
x2227} else {p14_3}
          val x2229: Unit = block_478(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2229
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_463(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2230: Unit = block_479(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2230
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_464(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2231: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2232: Long = 0.toLong
          val x2233: Boolean = x2231 eq null
          val x2235: Object = if (x2233) {          val x2234: Object = throw new NullPointerException()
x2234} else {x2231}
          val x2236: java.lang.Class[Object] = x2231.getClass.asInstanceOf[Class[Object]]
          val x2237: Boolean = x2236.isArray
          val x2238: Boolean = if (x2237) {false} else {true}
          val x2241: Unit = if (x2238) {          val x2239: java.lang.String = x2236.getName
          val x2240: Unit = throw new ArrayStoreException(x2239)
x2240} else {()}
          val x2242: Boolean = x2232 < 0
          val x2246: Boolean = if (x2242) {x2242} else {          val x2243: Int = java.lang.reflect.Array.getLength(x2231)
          val x2244: Long = x2243.toLong
          val x2245: Boolean = x2232 >= x2244
x2245}
          val x2249: Unit = if (x2246) {          val x2247: Int = x2232.toInt
          val x2248: Unit = throw new ArrayIndexOutOfBoundsException(x2247)
x2248} else {()}
          val x2250: Long = 4 * x2232
          val x2251: Long = 24 + x2250
          val x2252: Int = unsafe.getInt(x2231,x2251)
          val x2253: Boolean = x2252 < p11_3
          val x2256: Unit = if (x2253) {          val x2254: Unit = block_480(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2254} else {          val x2255: Unit = block_481(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2255}
x2256
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_465(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2257: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2258: Long = 0.toLong
          val x2259: Boolean = x2257 eq null
          val x2261: Object = if (x2259) {          val x2260: Object = throw new NullPointerException()
x2260} else {x2257}
          val x2262: java.lang.Class[Object] = x2257.getClass.asInstanceOf[Class[Object]]
          val x2263: Boolean = x2262.isArray
          val x2264: Boolean = if (x2263) {false} else {true}
          val x2267: Unit = if (x2264) {          val x2265: java.lang.String = x2262.getName
          val x2266: Unit = throw new ArrayStoreException(x2265)
x2266} else {()}
          val x2268: Boolean = x2258 < 0
          val x2272: Boolean = if (x2268) {x2268} else {          val x2269: Int = java.lang.reflect.Array.getLength(x2257)
          val x2270: Long = x2269.toLong
          val x2271: Boolean = x2258 >= x2270
x2271}
          val x2275: Unit = if (x2272) {          val x2273: Int = x2258.toInt
          val x2274: Unit = throw new ArrayIndexOutOfBoundsException(x2273)
x2274} else {()}
          val x2276: Long = 4 * x2258
          val x2277: Long = 24 + x2276
          val x2278: Int = unsafe.getInt(x2257,x2277)
          val x2279: Boolean = x2278 < p11_3
          val x2282: Unit = if (x2279) {          val x2280: Unit = block_482(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2280} else {          val x2281: Unit = block_483(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2281}
x2282
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_466(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2283: Unit = block_484(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2283
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_467(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2284: Int = p11_4 + 1
          val x2285: Unit = block_485(r,p11_0,p11_1,p11_2,p11_3,x2284,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2285
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_468(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2286: Int = 1 + p11_4
          val x2287: Unit = block_486(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2286,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2287
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_469(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2288: Int = p11_4 + 1
          val x2289: Unit = block_487(r,p11_0,p11_1,p11_2,p11_3,x2288,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2289
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_470(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2290: Int = 1 + p11_4
          val x2291: Unit = block_488(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2290,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2291
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_471(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2292: Boolean = p8_6 eq null
          val x2294: Object = if (x2292) {          val x2293: Object = throw new NullPointerException()
x2293} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2295: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2295
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_472(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2296: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2297: Long = p11_4.toLong
          val x2298: Boolean = x2296 eq null
          val x2300: Object = if (x2298) {          val x2299: Object = throw new NullPointerException()
x2299} else {x2296}
          val x2301: java.lang.Class[Object] = x2296.getClass.asInstanceOf[Class[Object]]
          val x2302: Boolean = x2301.isArray
          val x2303: Boolean = if (x2302) {false} else {true}
          val x2306: Unit = if (x2303) {          val x2304: java.lang.String = x2301.getName
          val x2305: Unit = throw new ArrayStoreException(x2304)
x2305} else {()}
          val x2307: Boolean = x2297 < 0
          val x2311: Boolean = if (x2307) {x2307} else {          val x2308: Int = java.lang.reflect.Array.getLength(x2296)
          val x2309: Long = x2308.toLong
          val x2310: Boolean = x2297 >= x2309
x2310}
          val x2314: Unit = if (x2311) {          val x2312: Int = x2297.toInt
          val x2313: Unit = throw new ArrayIndexOutOfBoundsException(x2312)
x2313} else {()}
          val x2315: Long = 4 * x2297
          val x2316: Long = 24 + x2315
          val x2317: Int = unsafe.getInt(x2296,x2316)
          val x2318: Boolean = x2317 < p11_3
          val x2321: Unit = if (x2318) {          val x2319: Unit = block_455(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2319} else {          val x2320: Unit = block_456(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2320}
x2321
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_473(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2322: Boolean = p10_3 eq null
          val x2324: Object = if (x2322) {          val x2323: Object = throw new NullPointerException()
x2323} else {p10_3}
          val x2325: Int = unsafe.getInt(x2324,16)
          val x2326: Int = p10_7 + x2325
          val x2327: Boolean = p10_3 eq null
          val x2329: Object = if (x2327) {          val x2328: Object = throw new NullPointerException()
x2328} else {p10_3}
          val x2330: Unit = block_489(null,null,null,null,p10_3,x2326,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2326,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2330
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_474(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2331: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2332: Long = p11_4.toLong
          val x2333: Boolean = x2331 eq null
          val x2335: Object = if (x2333) {          val x2334: Object = throw new NullPointerException()
x2334} else {x2331}
          val x2336: java.lang.Class[Object] = x2331.getClass.asInstanceOf[Class[Object]]
          val x2337: Boolean = x2336.isArray
          val x2338: Boolean = if (x2337) {false} else {true}
          val x2341: Unit = if (x2338) {          val x2339: java.lang.String = x2336.getName
          val x2340: Unit = throw new ArrayStoreException(x2339)
x2340} else {()}
          val x2342: Boolean = x2332 < 0
          val x2346: Boolean = if (x2342) {x2342} else {          val x2343: Int = java.lang.reflect.Array.getLength(x2331)
          val x2344: Long = x2343.toLong
          val x2345: Boolean = x2332 >= x2344
x2345}
          val x2349: Unit = if (x2346) {          val x2347: Int = x2332.toInt
          val x2348: Unit = throw new ArrayIndexOutOfBoundsException(x2347)
x2348} else {()}
          val x2350: Long = 4 * x2332
          val x2351: Long = 24 + x2350
          val x2352: Int = unsafe.getInt(x2331,x2351)
          val x2353: Boolean = x2352 < p11_3
          val x2356: Unit = if (x2353) {          val x2354: Unit = block_457(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2354} else {          val x2355: Unit = block_458(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2355}
x2356
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_475(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2357: Int = 1 + p10_7
          val x2358: Unit = block_473(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2357,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2358
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_476(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2359: Unit = block_490(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2359
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_477(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2360: Boolean = p14_3 eq null
          val x2362: Object = if (x2360) {          val x2361: Object = throw new NullPointerException()
x2361} else {p14_3}
          val x2363: Unit = block_491(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2363
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_478(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2364: Unit = block_492(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2364
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_479(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2365: Object = new Array[char](p14_4)
          val x2366: Boolean = p14_3 eq null
          val x2368: Object = if (x2366) {          val x2367: Object = throw new NullPointerException()
x2367} else {p14_3}
          val x2369: Unit = unsafe.putObject(x2368,24, x2365)
          val x2370: Unit = block_493(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2370
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_480(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2371: Int = p11_4 + 1
          val x2372: Unit = block_494(r,p11_0,p11_1,p11_2,p11_3,x2371,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2372
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_481(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2373: Int = 1 + p11_4
          val x2374: Unit = block_495(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2373,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2374
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_482(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2375: Int = p11_4 + 1
          val x2376: Unit = block_496(r,p11_0,p11_1,p11_2,p11_3,x2375,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2376
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_483(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2377: Int = 1 + p11_4
          val x2378: Unit = block_497(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2377,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2378
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_484(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2379: Boolean = p8_6 eq null
          val x2381: Object = if (x2379) {          val x2380: Object = throw new NullPointerException()
x2380} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2382: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2382
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_485(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2383: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2384: Long = p11_4.toLong
          val x2385: Boolean = x2383 eq null
          val x2387: Object = if (x2385) {          val x2386: Object = throw new NullPointerException()
x2386} else {x2383}
          val x2388: java.lang.Class[Object] = x2383.getClass.asInstanceOf[Class[Object]]
          val x2389: Boolean = x2388.isArray
          val x2390: Boolean = if (x2389) {false} else {true}
          val x2393: Unit = if (x2390) {          val x2391: java.lang.String = x2388.getName
          val x2392: Unit = throw new ArrayStoreException(x2391)
x2392} else {()}
          val x2394: Boolean = x2384 < 0
          val x2398: Boolean = if (x2394) {x2394} else {          val x2395: Int = java.lang.reflect.Array.getLength(x2383)
          val x2396: Long = x2395.toLong
          val x2397: Boolean = x2384 >= x2396
x2397}
          val x2401: Unit = if (x2398) {          val x2399: Int = x2384.toInt
          val x2400: Unit = throw new ArrayIndexOutOfBoundsException(x2399)
x2400} else {()}
          val x2402: Long = 4 * x2384
          val x2403: Long = 24 + x2402
          val x2404: Int = unsafe.getInt(x2383,x2403)
          val x2405: Boolean = x2404 < p11_3
          val x2408: Unit = if (x2405) {          val x2406: Unit = block_467(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2406} else {          val x2407: Unit = block_468(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2407}
x2408
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_486(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2409: Boolean = p10_3 eq null
          val x2411: Object = if (x2409) {          val x2410: Object = throw new NullPointerException()
x2410} else {p10_3}
          val x2412: Int = unsafe.getInt(x2411,16)
          val x2413: Int = p10_7 + x2412
          val x2414: Boolean = p10_3 eq null
          val x2416: Object = if (x2414) {          val x2415: Object = throw new NullPointerException()
x2415} else {p10_3}
          val x2417: Unit = block_498(null,null,null,null,p10_3,x2413,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2413,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2417
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_487(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2418: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2419: Long = p11_4.toLong
          val x2420: Boolean = x2418 eq null
          val x2422: Object = if (x2420) {          val x2421: Object = throw new NullPointerException()
x2421} else {x2418}
          val x2423: java.lang.Class[Object] = x2418.getClass.asInstanceOf[Class[Object]]
          val x2424: Boolean = x2423.isArray
          val x2425: Boolean = if (x2424) {false} else {true}
          val x2428: Unit = if (x2425) {          val x2426: java.lang.String = x2423.getName
          val x2427: Unit = throw new ArrayStoreException(x2426)
x2427} else {()}
          val x2429: Boolean = x2419 < 0
          val x2433: Boolean = if (x2429) {x2429} else {          val x2430: Int = java.lang.reflect.Array.getLength(x2418)
          val x2431: Long = x2430.toLong
          val x2432: Boolean = x2419 >= x2431
x2432}
          val x2436: Unit = if (x2433) {          val x2434: Int = x2419.toInt
          val x2435: Unit = throw new ArrayIndexOutOfBoundsException(x2434)
x2435} else {()}
          val x2437: Long = 4 * x2419
          val x2438: Long = 24 + x2437
          val x2439: Int = unsafe.getInt(x2418,x2438)
          val x2440: Boolean = x2439 < p11_3
          val x2443: Unit = if (x2440) {          val x2441: Unit = block_469(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2441} else {          val x2442: Unit = block_470(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2442}
x2443
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_488(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2444: Int = 1 + p10_7
          val x2445: Unit = block_486(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2444,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2445
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_489(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2446: Boolean = p11_3 eq null
          val x2448: Object = if (x2446) {          val x2447: Object = throw new NullPointerException()
x2447} else {p11_3}
          val x2449: Object = unsafe.getObject(x2448,24)
          val x2450: Boolean = x2449 eq null
          val x2452: Object = if (x2450) {          val x2451: Object = throw new NullPointerException()
x2451} else {x2449}
          val x2453: Int = java.lang.reflect.Array.getLength(x2452)
          val x2454: Int = -x2453
          val x2455: Int = x2454 + p11_4
          val x2456: Boolean = x2455 <= 0
          val x2459: Unit = if (x2456) {          val x2457: Unit = block_499(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2457} else {          val x2458: Unit = block_500(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2458}
x2459
}
// *** begin block 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_490(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2460: Boolean = p8_10 eq null
          val x2462: Object = if (x2460) {          val x2461: Object = throw new NullPointerException()
x2461} else {p8_10}
          val x2463: Unit = block_501(null,null,null,null,p8_10,p8_5,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2463
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_491(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2464: Unit = block_502(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2464
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_492(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2465: Object = new Array[char](p14_4)
          val x2466: Boolean = p14_3 eq null
          val x2468: Object = if (x2466) {          val x2467: Object = throw new NullPointerException()
x2467} else {p14_3}
          val x2469: Unit = unsafe.putObject(x2468,24, x2465)
          val x2470: Unit = block_503(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2470
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_493(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2471: Unit = block_504(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2471
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_494(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2472: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2473: Long = p11_4.toLong
          val x2474: Boolean = x2472 eq null
          val x2476: Object = if (x2474) {          val x2475: Object = throw new NullPointerException()
x2475} else {x2472}
          val x2477: java.lang.Class[Object] = x2472.getClass.asInstanceOf[Class[Object]]
          val x2478: Boolean = x2477.isArray
          val x2479: Boolean = if (x2478) {false} else {true}
          val x2482: Unit = if (x2479) {          val x2480: java.lang.String = x2477.getName
          val x2481: Unit = throw new ArrayStoreException(x2480)
x2481} else {()}
          val x2483: Boolean = x2473 < 0
          val x2487: Boolean = if (x2483) {x2483} else {          val x2484: Int = java.lang.reflect.Array.getLength(x2472)
          val x2485: Long = x2484.toLong
          val x2486: Boolean = x2473 >= x2485
x2486}
          val x2490: Unit = if (x2487) {          val x2488: Int = x2473.toInt
          val x2489: Unit = throw new ArrayIndexOutOfBoundsException(x2488)
x2489} else {()}
          val x2491: Long = 4 * x2473
          val x2492: Long = 24 + x2491
          val x2493: Int = unsafe.getInt(x2472,x2492)
          val x2494: Boolean = x2493 < p11_3
          val x2497: Unit = if (x2494) {          val x2495: Unit = block_480(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2495} else {          val x2496: Unit = block_481(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2496}
x2497
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_495(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2498: Boolean = p10_3 eq null
          val x2500: Object = if (x2498) {          val x2499: Object = throw new NullPointerException()
x2499} else {p10_3}
          val x2501: Int = unsafe.getInt(x2500,16)
          val x2502: Int = p10_7 + x2501
          val x2503: Boolean = p10_3 eq null
          val x2505: Object = if (x2503) {          val x2504: Object = throw new NullPointerException()
x2504} else {p10_3}
          val x2506: Unit = block_505(null,null,null,null,p10_3,x2502,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2502,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2506
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_496(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2507: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2508: Long = p11_4.toLong
          val x2509: Boolean = x2507 eq null
          val x2511: Object = if (x2509) {          val x2510: Object = throw new NullPointerException()
x2510} else {x2507}
          val x2512: java.lang.Class[Object] = x2507.getClass.asInstanceOf[Class[Object]]
          val x2513: Boolean = x2512.isArray
          val x2514: Boolean = if (x2513) {false} else {true}
          val x2517: Unit = if (x2514) {          val x2515: java.lang.String = x2512.getName
          val x2516: Unit = throw new ArrayStoreException(x2515)
x2516} else {()}
          val x2518: Boolean = x2508 < 0
          val x2522: Boolean = if (x2518) {x2518} else {          val x2519: Int = java.lang.reflect.Array.getLength(x2507)
          val x2520: Long = x2519.toLong
          val x2521: Boolean = x2508 >= x2520
x2521}
          val x2525: Unit = if (x2522) {          val x2523: Int = x2508.toInt
          val x2524: Unit = throw new ArrayIndexOutOfBoundsException(x2523)
x2524} else {()}
          val x2526: Long = 4 * x2508
          val x2527: Long = 24 + x2526
          val x2528: Int = unsafe.getInt(x2507,x2527)
          val x2529: Boolean = x2528 < p11_3
          val x2532: Unit = if (x2529) {          val x2530: Unit = block_482(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2530} else {          val x2531: Unit = block_483(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2531}
x2532
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_497(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2533: Int = 1 + p10_7
          val x2534: Unit = block_495(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2533,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2534
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_498(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2535: Boolean = p11_3 eq null
          val x2537: Object = if (x2535) {          val x2536: Object = throw new NullPointerException()
x2536} else {p11_3}
          val x2538: Object = unsafe.getObject(x2537,24)
          val x2539: Boolean = x2538 eq null
          val x2541: Object = if (x2539) {          val x2540: Object = throw new NullPointerException()
x2540} else {x2538}
          val x2542: Int = java.lang.reflect.Array.getLength(x2541)
          val x2543: Int = -x2542
          val x2544: Int = x2543 + p11_4
          val x2545: Boolean = x2544 <= 0
          val x2548: Unit = if (x2545) {          val x2546: Unit = block_506(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2546} else {          val x2547: Unit = block_507(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2547}
x2548
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_499(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2549: Unit = block_508(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2549
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_500(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2550: Boolean = p11_3 eq null
          val x2552: Object = if (x2550) {          val x2551: Object = throw new NullPointerException()
x2551} else {p11_3}
          val x2553: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2554: Unit = block_499(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2554
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_501(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2555: Boolean = p9_3 eq null
          val x2557: Object = if (x2555) {          val x2556: Object = throw new NullPointerException()
x2556} else {p9_3}
          val x2558: Unit = block_509(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2558
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_502(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2559: Object = new Array[char](p14_4)
          val x2560: Boolean = p14_3 eq null
          val x2562: Object = if (x2560) {          val x2561: Object = throw new NullPointerException()
x2561} else {p14_3}
          val x2563: Unit = unsafe.putObject(x2562,24, x2559)
          val x2564: Unit = block_510(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2564
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_503(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2565: Unit = block_511(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2565
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_504(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2566: Boolean = p12_6 eq null
          val x2568: Object = if (x2566) {          val x2567: Object = throw new NullPointerException()
x2567} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2569: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2569
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_505(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2570: Boolean = p11_3 eq null
          val x2572: Object = if (x2570) {          val x2571: Object = throw new NullPointerException()
x2571} else {p11_3}
          val x2573: Object = unsafe.getObject(x2572,24)
          val x2574: Boolean = x2573 eq null
          val x2576: Object = if (x2574) {          val x2575: Object = throw new NullPointerException()
x2575} else {x2573}
          val x2577: Int = java.lang.reflect.Array.getLength(x2576)
          val x2578: Int = -x2577
          val x2579: Int = x2578 + p11_4
          val x2580: Boolean = x2579 <= 0
          val x2583: Unit = if (x2580) {          val x2581: Unit = block_512(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2581} else {          val x2582: Unit = block_513(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2582}
x2583
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_506(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2584: Unit = block_514(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2584
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_507(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2585: Boolean = p11_3 eq null
          val x2587: Object = if (x2585) {          val x2586: Object = throw new NullPointerException()
x2586} else {p11_3}
          val x2588: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2589: Unit = block_506(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2589
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_508(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2590: Boolean = p10_3 eq null
          val x2592: Object = if (x2590) {          val x2591: Object = throw new NullPointerException()
x2591} else {p10_3}
          val x2593: Object = unsafe.getObject(x2592,24)
          val x2594: Unit = block_515(null,null,null,null,p10_4,p10_6,x2593,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2594
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_509(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2597: Unit = if (true) {          val x2595: Unit = block_516(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2595} else {          val x2596: Unit = block_517(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2596}
x2597
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_510(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2598: Unit = block_518(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2598
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_511(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2599: Boolean = p12_6 eq null
          val x2601: Object = if (x2599) {          val x2600: Object = throw new NullPointerException()
x2600} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2602: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2602
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_512(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2603: Unit = block_519(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2603
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_513(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2604: Boolean = p11_3 eq null
          val x2606: Object = if (x2604) {          val x2605: Object = throw new NullPointerException()
x2605} else {p11_3}
          val x2607: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2608: Unit = block_512(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2608
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_514(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2609: Boolean = p10_3 eq null
          val x2611: Object = if (x2609) {          val x2610: Object = throw new NullPointerException()
x2610} else {p10_3}
          val x2612: Object = unsafe.getObject(x2611,24)
          val x2613: Unit = block_520(null,null,null,null,p10_4,p10_6,x2612,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2613
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_515(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2614: Boolean = p11_3 >= 0
          val x2617: Unit = if (x2614) {          val x2615: Unit = block_521(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2615} else {          val x2616: Unit = block_522(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2616}
x2617
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_516(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2618: Boolean = p10_4 >= 0
          val x2621: Unit = if (x2618) {          val x2619: Unit = block_523(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2619} else {          val x2620: Unit = block_524(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2620}
x2621
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_517(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2622: Boolean = p10_3 eq null
          val x2624: Object = if (x2622) {          val x2623: Object = throw new NullPointerException()
x2623} else {p10_3}
          val x2625: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2626: Unit = block_525(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2625,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2626
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_518(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2627: Boolean = p12_6 eq null
          val x2629: Object = if (x2627) {          val x2628: Object = throw new NullPointerException()
x2628} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2630: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2630
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_519(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2631: Boolean = p10_3 eq null
          val x2633: Object = if (x2631) {          val x2632: Object = throw new NullPointerException()
x2632} else {p10_3}
          val x2634: Object = unsafe.getObject(x2633,24)
          val x2635: Unit = block_526(null,null,null,null,p10_4,p10_6,x2634,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2635
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_520(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2636: Boolean = p11_3 >= 0
          val x2639: Unit = if (x2636) {          val x2637: Unit = block_527(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2637} else {          val x2638: Unit = block_528(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2638}
x2639
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_521(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2640: Boolean = 65536 > p11_3
          val x2643: Unit = if (x2640) {          val x2641: Unit = block_529(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2641} else {          val x2642: Unit = block_530(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2642}
x2643
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_522(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2644: Int = -p11_3
          val x2645: Boolean = 65536 > x2644
          val x2648: Unit = if (x2645) {          val x2646: Unit = block_529(r,p11_0,p11_1,p11_2,x2644,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2646} else {          val x2647: Unit = block_530(r,p11_0,p11_1,p11_2,x2644,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2647}
x2648
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_523(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2649: Unit = block_531(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2649
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_524(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2650: Int = -p10_4
          val x2651: Unit = block_532(null,null,null,null,x2650,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2651
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_525(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2652: Unit = block_533(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2652
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_526(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2653: Boolean = p11_3 >= 0
          val x2656: Unit = if (x2653) {          val x2654: Unit = block_534(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2654} else {          val x2655: Unit = block_535(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2655}
x2656
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_527(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2657: Boolean = 65536 > p11_3
          val x2660: Unit = if (x2657) {          val x2658: Unit = block_536(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2658} else {          val x2659: Unit = block_537(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2659}
x2660
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_528(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2661: Int = -p11_3
          val x2662: Boolean = 65536 > x2661
          val x2665: Unit = if (x2662) {          val x2663: Unit = block_536(r,p11_0,p11_1,p11_2,x2661,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2663} else {          val x2664: Unit = block_537(r,p11_0,p11_1,p11_2,x2661,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2664}
x2665
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_529(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2666: Int = 52429 * p11_3
          val x2667: Int = x2666 >>> 19
          val x2668: Int = x2667 << 3
          val x2669: Int = x2667 << 1
          val x2670: Int = x2669 + x2668
          val x2671: Int = -x2670
          val x2672: Int = x2671 + p11_3
          val x2673: Int = p11_8 + -1
          val x2674: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x2675: Long = x2672.toLong
          val x2676: Boolean = x2674 eq null
          val x2678: Object = if (x2676) {          val x2677: Object = throw new NullPointerException()
x2677} else {x2674}
          val x2679: java.lang.Class[Object] = x2674.getClass.asInstanceOf[Class[Object]]
          val x2680: Boolean = x2679.isArray
          val x2681: Boolean = if (x2680) {false} else {true}
          val x2684: Unit = if (x2681) {          val x2682: java.lang.String = x2679.getName
          val x2683: Unit = throw new ArrayStoreException(x2682)
x2683} else {()}
          val x2685: Boolean = x2675 < 0
          val x2689: Boolean = if (x2685) {x2685} else {          val x2686: Int = java.lang.reflect.Array.getLength(x2674)
          val x2687: Long = x2686.toLong
          val x2688: Boolean = x2675 >= x2687
x2688}
          val x2692: Unit = if (x2689) {          val x2690: Int = x2675.toInt
          val x2691: Unit = throw new ArrayIndexOutOfBoundsException(x2690)
x2691} else {()}
          val x2693: Long = 2 * x2675
          val x2694: Long = 24 + x2693
          val x2695: Char = unsafe.getChar(x2674,x2694)
          val x2696: Int = x2695.toInt
          val x2697: Char = x2696.toChar
          val x2698: Long = x2673.toLong
          val x2699: Boolean = p11_5 eq null
          val x2701: Object = if (x2699) {          val x2700: Object = throw new NullPointerException()
x2700} else {p11_5}
          val x2702: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2703: Boolean = x2702.isArray
          val x2704: Boolean = if (x2703) {false} else {true}
          val x2707: Unit = if (x2704) {          val x2705: java.lang.String = x2702.getName
          val x2706: Unit = throw new ArrayStoreException(x2705)
x2706} else {()}
          val x2708: Boolean = x2698 < 0
          val x2712: Boolean = if (x2708) {x2708} else {          val x2709: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2710: Long = x2709.toLong
          val x2711: Boolean = x2698 >= x2710
x2711}
          val x2715: Unit = if (x2712) {          val x2713: Int = x2698.toInt
          val x2714: Unit = throw new ArrayIndexOutOfBoundsException(x2713)
x2714} else {()}
          val x2716: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2717: java.lang.Class[Object] = x2716.getComponentType.asInstanceOf[Class[Object]]
          val x2718: Boolean = x2717.isAssignableFrom(classOf[Char])
          val x2719: Boolean = if (x2718) {false} else {true}
          val x2721: Unit = if (x2719) {          val x2720: Unit = throw new ArrayStoreException("char")
x2720} else {()}
          val x2722: Long = 2 * x2698
          val x2723: Long = 24 + x2722
          val x2724: Unit = unsafe.putChar(p11_5,x2723, x2697)
          val x2727: Unit = if (true) {          val x2725: Unit = block_529(r,p11_0,p11_1,p11_2,x2667,p11_4,p11_5,x2667,x2672,x2673,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2725} else {          val x2726: Unit = block_538(r,p11_0,p11_1,p11_2,x2667,p11_4,p11_5,x2667,x2672,x2673,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2726}
x2727
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_530(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2728: Int = p11_3 / 100
          val x2729: Int = x2728 << 6
          val x2730: Int = x2728 << 5
          val x2731: Int = x2730 + x2729
          val x2732: Int = x2728 << 2
          val x2733: Int = x2732 + x2731
          val x2734: Int = -x2733
          val x2735: Int = x2734 + p11_3
          val x2736: Int = p11_8 + -1
          val x2737: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x2738: Long = x2735.toLong
          val x2739: Boolean = x2737 eq null
          val x2741: Object = if (x2739) {          val x2740: Object = throw new NullPointerException()
x2740} else {x2737}
          val x2742: java.lang.Class[Object] = x2737.getClass.asInstanceOf[Class[Object]]
          val x2743: Boolean = x2742.isArray
          val x2744: Boolean = if (x2743) {false} else {true}
          val x2747: Unit = if (x2744) {          val x2745: java.lang.String = x2742.getName
          val x2746: Unit = throw new ArrayStoreException(x2745)
x2746} else {()}
          val x2748: Boolean = x2738 < 0
          val x2752: Boolean = if (x2748) {x2748} else {          val x2749: Int = java.lang.reflect.Array.getLength(x2737)
          val x2750: Long = x2749.toLong
          val x2751: Boolean = x2738 >= x2750
x2751}
          val x2755: Unit = if (x2752) {          val x2753: Int = x2738.toInt
          val x2754: Unit = throw new ArrayIndexOutOfBoundsException(x2753)
x2754} else {()}
          val x2756: Long = 2 * x2738
          val x2757: Long = 24 + x2756
          val x2758: Char = unsafe.getChar(x2737,x2757)
          val x2759: Int = x2758.toInt
          val x2760: Char = x2759.toChar
          val x2761: Long = x2736.toLong
          val x2762: Boolean = p11_5 eq null
          val x2764: Object = if (x2762) {          val x2763: Object = throw new NullPointerException()
x2763} else {p11_5}
          val x2765: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2766: Boolean = x2765.isArray
          val x2767: Boolean = if (x2766) {false} else {true}
          val x2770: Unit = if (x2767) {          val x2768: java.lang.String = x2765.getName
          val x2769: Unit = throw new ArrayStoreException(x2768)
x2769} else {()}
          val x2771: Boolean = x2761 < 0
          val x2775: Boolean = if (x2771) {x2771} else {          val x2772: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2773: Long = x2772.toLong
          val x2774: Boolean = x2761 >= x2773
x2774}
          val x2778: Unit = if (x2775) {          val x2776: Int = x2761.toInt
          val x2777: Unit = throw new ArrayIndexOutOfBoundsException(x2776)
x2777} else {()}
          val x2779: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2780: java.lang.Class[Object] = x2779.getComponentType.asInstanceOf[Class[Object]]
          val x2781: Boolean = x2780.isAssignableFrom(classOf[Char])
          val x2782: Boolean = if (x2781) {false} else {true}
          val x2784: Unit = if (x2782) {          val x2783: Unit = throw new ArrayStoreException("char")
x2783} else {()}
          val x2785: Long = 2 * x2761
          val x2786: Long = 24 + x2785
          val x2787: Unit = unsafe.putChar(p11_5,x2786, x2760)
          val x2788: Int = x2736 + -1
          val x2789: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x2790: Long = x2735.toLong
          val x2791: Boolean = x2789 eq null
          val x2793: Object = if (x2791) {          val x2792: Object = throw new NullPointerException()
x2792} else {x2789}
          val x2794: java.lang.Class[Object] = x2789.getClass.asInstanceOf[Class[Object]]
          val x2795: Boolean = x2794.isArray
          val x2796: Boolean = if (x2795) {false} else {true}
          val x2799: Unit = if (x2796) {          val x2797: java.lang.String = x2794.getName
          val x2798: Unit = throw new ArrayStoreException(x2797)
x2798} else {()}
          val x2800: Boolean = x2790 < 0
          val x2804: Boolean = if (x2800) {x2800} else {          val x2801: Int = java.lang.reflect.Array.getLength(x2789)
          val x2802: Long = x2801.toLong
          val x2803: Boolean = x2790 >= x2802
x2803}
          val x2807: Unit = if (x2804) {          val x2805: Int = x2790.toInt
          val x2806: Unit = throw new ArrayIndexOutOfBoundsException(x2805)
x2806} else {()}
          val x2808: Long = 2 * x2790
          val x2809: Long = 24 + x2808
          val x2810: Char = unsafe.getChar(x2789,x2809)
          val x2811: Int = x2810.toInt
          val x2812: Char = x2811.toChar
          val x2813: Long = x2788.toLong
          val x2814: Boolean = p11_5 eq null
          val x2816: Object = if (x2814) {          val x2815: Object = throw new NullPointerException()
x2815} else {p11_5}
          val x2817: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2818: Boolean = x2817.isArray
          val x2819: Boolean = if (x2818) {false} else {true}
          val x2822: Unit = if (x2819) {          val x2820: java.lang.String = x2817.getName
          val x2821: Unit = throw new ArrayStoreException(x2820)
x2821} else {()}
          val x2823: Boolean = x2813 < 0
          val x2827: Boolean = if (x2823) {x2823} else {          val x2824: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2825: Long = x2824.toLong
          val x2826: Boolean = x2813 >= x2825
x2826}
          val x2830: Unit = if (x2827) {          val x2828: Int = x2813.toInt
          val x2829: Unit = throw new ArrayIndexOutOfBoundsException(x2828)
x2829} else {()}
          val x2831: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2832: java.lang.Class[Object] = x2831.getComponentType.asInstanceOf[Class[Object]]
          val x2833: Boolean = x2832.isAssignableFrom(classOf[Char])
          val x2834: Boolean = if (x2833) {false} else {true}
          val x2836: Unit = if (x2834) {          val x2835: Unit = throw new ArrayStoreException("char")
x2835} else {()}
          val x2837: Long = 2 * x2813
          val x2838: Long = 24 + x2837
          val x2839: Unit = unsafe.putChar(p11_5,x2838, x2812)
          val x2840: Unit = block_521(r,p11_0,p11_1,p11_2,x2728,p11_4,p11_5,x2728,x2735,x2788,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2840
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_531(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2841: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2842: Long = 0.toLong
          val x2843: Boolean = x2841 eq null
          val x2845: Object = if (x2843) {          val x2844: Object = throw new NullPointerException()
x2844} else {x2841}
          val x2846: java.lang.Class[Object] = x2841.getClass.asInstanceOf[Class[Object]]
          val x2847: Boolean = x2846.isArray
          val x2848: Boolean = if (x2847) {false} else {true}
          val x2851: Unit = if (x2848) {          val x2849: java.lang.String = x2846.getName
          val x2850: Unit = throw new ArrayStoreException(x2849)
x2850} else {()}
          val x2852: Boolean = x2842 < 0
          val x2856: Boolean = if (x2852) {x2852} else {          val x2853: Int = java.lang.reflect.Array.getLength(x2841)
          val x2854: Long = x2853.toLong
          val x2855: Boolean = x2842 >= x2854
x2855}
          val x2859: Unit = if (x2856) {          val x2857: Int = x2842.toInt
          val x2858: Unit = throw new ArrayIndexOutOfBoundsException(x2857)
x2858} else {()}
          val x2860: Long = 4 * x2842
          val x2861: Long = 24 + x2860
          val x2862: Int = unsafe.getInt(x2841,x2861)
          val x2863: Boolean = x2862 < p11_3
          val x2866: Unit = if (x2863) {          val x2864: Unit = block_539(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2864} else {          val x2865: Unit = block_540(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2865}
x2866
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_532(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2867: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2868: Long = 0.toLong
          val x2869: Boolean = x2867 eq null
          val x2871: Object = if (x2869) {          val x2870: Object = throw new NullPointerException()
x2870} else {x2867}
          val x2872: java.lang.Class[Object] = x2867.getClass.asInstanceOf[Class[Object]]
          val x2873: Boolean = x2872.isArray
          val x2874: Boolean = if (x2873) {false} else {true}
          val x2877: Unit = if (x2874) {          val x2875: java.lang.String = x2872.getName
          val x2876: Unit = throw new ArrayStoreException(x2875)
x2876} else {()}
          val x2878: Boolean = x2868 < 0
          val x2882: Boolean = if (x2878) {x2878} else {          val x2879: Int = java.lang.reflect.Array.getLength(x2867)
          val x2880: Long = x2879.toLong
          val x2881: Boolean = x2868 >= x2880
x2881}
          val x2885: Unit = if (x2882) {          val x2883: Int = x2868.toInt
          val x2884: Unit = throw new ArrayIndexOutOfBoundsException(x2883)
x2884} else {()}
          val x2886: Long = 4 * x2868
          val x2887: Long = 24 + x2886
          val x2888: Int = unsafe.getInt(x2867,x2887)
          val x2889: Boolean = x2888 < p11_3
          val x2892: Unit = if (x2889) {          val x2890: Unit = block_541(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2890} else {          val x2891: Unit = block_542(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2891}
x2892
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_533(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2893: Unit = block_543(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2893
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_534(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2894: Boolean = 65536 > p11_3
          val x2897: Unit = if (x2894) {          val x2895: Unit = block_544(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2895} else {          val x2896: Unit = block_545(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2896}
x2897
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_535(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2898: Int = -p11_3
          val x2899: Boolean = 65536 > x2898
          val x2902: Unit = if (x2899) {          val x2900: Unit = block_544(r,p11_0,p11_1,p11_2,x2898,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2900} else {          val x2901: Unit = block_545(r,p11_0,p11_1,p11_2,x2898,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2901}
x2902
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_536(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2903: Int = 52429 * p11_3
          val x2904: Int = x2903 >>> 19
          val x2905: Int = x2904 << 3
          val x2906: Int = x2904 << 1
          val x2907: Int = x2906 + x2905
          val x2908: Int = -x2907
          val x2909: Int = x2908 + p11_3
          val x2910: Int = p11_8 + -1
          val x2911: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x2912: Long = x2909.toLong
          val x2913: Boolean = x2911 eq null
          val x2915: Object = if (x2913) {          val x2914: Object = throw new NullPointerException()
x2914} else {x2911}
          val x2916: java.lang.Class[Object] = x2911.getClass.asInstanceOf[Class[Object]]
          val x2917: Boolean = x2916.isArray
          val x2918: Boolean = if (x2917) {false} else {true}
          val x2921: Unit = if (x2918) {          val x2919: java.lang.String = x2916.getName
          val x2920: Unit = throw new ArrayStoreException(x2919)
x2920} else {()}
          val x2922: Boolean = x2912 < 0
          val x2926: Boolean = if (x2922) {x2922} else {          val x2923: Int = java.lang.reflect.Array.getLength(x2911)
          val x2924: Long = x2923.toLong
          val x2925: Boolean = x2912 >= x2924
x2925}
          val x2929: Unit = if (x2926) {          val x2927: Int = x2912.toInt
          val x2928: Unit = throw new ArrayIndexOutOfBoundsException(x2927)
x2928} else {()}
          val x2930: Long = 2 * x2912
          val x2931: Long = 24 + x2930
          val x2932: Char = unsafe.getChar(x2911,x2931)
          val x2933: Int = x2932.toInt
          val x2934: Char = x2933.toChar
          val x2935: Long = x2910.toLong
          val x2936: Boolean = p11_5 eq null
          val x2938: Object = if (x2936) {          val x2937: Object = throw new NullPointerException()
x2937} else {p11_5}
          val x2939: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2940: Boolean = x2939.isArray
          val x2941: Boolean = if (x2940) {false} else {true}
          val x2944: Unit = if (x2941) {          val x2942: java.lang.String = x2939.getName
          val x2943: Unit = throw new ArrayStoreException(x2942)
x2943} else {()}
          val x2945: Boolean = x2935 < 0
          val x2949: Boolean = if (x2945) {x2945} else {          val x2946: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2947: Long = x2946.toLong
          val x2948: Boolean = x2935 >= x2947
x2948}
          val x2952: Unit = if (x2949) {          val x2950: Int = x2935.toInt
          val x2951: Unit = throw new ArrayIndexOutOfBoundsException(x2950)
x2951} else {()}
          val x2953: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2954: java.lang.Class[Object] = x2953.getComponentType.asInstanceOf[Class[Object]]
          val x2955: Boolean = x2954.isAssignableFrom(classOf[Char])
          val x2956: Boolean = if (x2955) {false} else {true}
          val x2958: Unit = if (x2956) {          val x2957: Unit = throw new ArrayStoreException("char")
x2957} else {()}
          val x2959: Long = 2 * x2935
          val x2960: Long = 24 + x2959
          val x2961: Unit = unsafe.putChar(p11_5,x2960, x2934)
          val x2964: Unit = if (true) {          val x2962: Unit = block_536(r,p11_0,p11_1,p11_2,x2904,p11_4,p11_5,x2904,x2909,x2910,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2962} else {          val x2963: Unit = block_546(r,p11_0,p11_1,p11_2,x2904,p11_4,p11_5,x2904,x2909,x2910,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2963}
x2964
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_537(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2965: Int = p11_3 / 100
          val x2966: Int = x2965 << 6
          val x2967: Int = x2965 << 5
          val x2968: Int = x2967 + x2966
          val x2969: Int = x2965 << 2
          val x2970: Int = x2969 + x2968
          val x2971: Int = -x2970
          val x2972: Int = x2971 + p11_3
          val x2973: Int = p11_8 + -1
          val x2974: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x2975: Long = x2972.toLong
          val x2976: Boolean = x2974 eq null
          val x2978: Object = if (x2976) {          val x2977: Object = throw new NullPointerException()
x2977} else {x2974}
          val x2979: java.lang.Class[Object] = x2974.getClass.asInstanceOf[Class[Object]]
          val x2980: Boolean = x2979.isArray
          val x2981: Boolean = if (x2980) {false} else {true}
          val x2984: Unit = if (x2981) {          val x2982: java.lang.String = x2979.getName
          val x2983: Unit = throw new ArrayStoreException(x2982)
x2983} else {()}
          val x2985: Boolean = x2975 < 0
          val x2989: Boolean = if (x2985) {x2985} else {          val x2986: Int = java.lang.reflect.Array.getLength(x2974)
          val x2987: Long = x2986.toLong
          val x2988: Boolean = x2975 >= x2987
x2988}
          val x2992: Unit = if (x2989) {          val x2990: Int = x2975.toInt
          val x2991: Unit = throw new ArrayIndexOutOfBoundsException(x2990)
x2991} else {()}
          val x2993: Long = 2 * x2975
          val x2994: Long = 24 + x2993
          val x2995: Char = unsafe.getChar(x2974,x2994)
          val x2996: Int = x2995.toInt
          val x2997: Char = x2996.toChar
          val x2998: Long = x2973.toLong
          val x2999: Boolean = p11_5 eq null
          val x3001: Object = if (x2999) {          val x3000: Object = throw new NullPointerException()
x3000} else {p11_5}
          val x3002: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3003: Boolean = x3002.isArray
          val x3004: Boolean = if (x3003) {false} else {true}
          val x3007: Unit = if (x3004) {          val x3005: java.lang.String = x3002.getName
          val x3006: Unit = throw new ArrayStoreException(x3005)
x3006} else {()}
          val x3008: Boolean = x2998 < 0
          val x3012: Boolean = if (x3008) {x3008} else {          val x3009: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3010: Long = x3009.toLong
          val x3011: Boolean = x2998 >= x3010
x3011}
          val x3015: Unit = if (x3012) {          val x3013: Int = x2998.toInt
          val x3014: Unit = throw new ArrayIndexOutOfBoundsException(x3013)
x3014} else {()}
          val x3016: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3017: java.lang.Class[Object] = x3016.getComponentType.asInstanceOf[Class[Object]]
          val x3018: Boolean = x3017.isAssignableFrom(classOf[Char])
          val x3019: Boolean = if (x3018) {false} else {true}
          val x3021: Unit = if (x3019) {          val x3020: Unit = throw new ArrayStoreException("char")
x3020} else {()}
          val x3022: Long = 2 * x2998
          val x3023: Long = 24 + x3022
          val x3024: Unit = unsafe.putChar(p11_5,x3023, x2997)
          val x3025: Int = x2973 + -1
          val x3026: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x3027: Long = x2972.toLong
          val x3028: Boolean = x3026 eq null
          val x3030: Object = if (x3028) {          val x3029: Object = throw new NullPointerException()
x3029} else {x3026}
          val x3031: java.lang.Class[Object] = x3026.getClass.asInstanceOf[Class[Object]]
          val x3032: Boolean = x3031.isArray
          val x3033: Boolean = if (x3032) {false} else {true}
          val x3036: Unit = if (x3033) {          val x3034: java.lang.String = x3031.getName
          val x3035: Unit = throw new ArrayStoreException(x3034)
x3035} else {()}
          val x3037: Boolean = x3027 < 0
          val x3041: Boolean = if (x3037) {x3037} else {          val x3038: Int = java.lang.reflect.Array.getLength(x3026)
          val x3039: Long = x3038.toLong
          val x3040: Boolean = x3027 >= x3039
x3040}
          val x3044: Unit = if (x3041) {          val x3042: Int = x3027.toInt
          val x3043: Unit = throw new ArrayIndexOutOfBoundsException(x3042)
x3043} else {()}
          val x3045: Long = 2 * x3027
          val x3046: Long = 24 + x3045
          val x3047: Char = unsafe.getChar(x3026,x3046)
          val x3048: Int = x3047.toInt
          val x3049: Char = x3048.toChar
          val x3050: Long = x3025.toLong
          val x3051: Boolean = p11_5 eq null
          val x3053: Object = if (x3051) {          val x3052: Object = throw new NullPointerException()
x3052} else {p11_5}
          val x3054: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3055: Boolean = x3054.isArray
          val x3056: Boolean = if (x3055) {false} else {true}
          val x3059: Unit = if (x3056) {          val x3057: java.lang.String = x3054.getName
          val x3058: Unit = throw new ArrayStoreException(x3057)
x3058} else {()}
          val x3060: Boolean = x3050 < 0
          val x3064: Boolean = if (x3060) {x3060} else {          val x3061: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3062: Long = x3061.toLong
          val x3063: Boolean = x3050 >= x3062
x3063}
          val x3067: Unit = if (x3064) {          val x3065: Int = x3050.toInt
          val x3066: Unit = throw new ArrayIndexOutOfBoundsException(x3065)
x3066} else {()}
          val x3068: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3069: java.lang.Class[Object] = x3068.getComponentType.asInstanceOf[Class[Object]]
          val x3070: Boolean = x3069.isAssignableFrom(classOf[Char])
          val x3071: Boolean = if (x3070) {false} else {true}
          val x3073: Unit = if (x3071) {          val x3072: Unit = throw new ArrayStoreException("char")
x3072} else {()}
          val x3074: Long = 2 * x3050
          val x3075: Long = 24 + x3074
          val x3076: Unit = unsafe.putChar(p11_5,x3075, x3049)
          val x3077: Unit = block_527(r,p11_0,p11_1,p11_2,x2965,p11_4,p11_5,x2965,x2972,x3025,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3077
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_538(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3078: Unit = block_547(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3078
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_539(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3079: Int = p11_4 + 1
          val x3080: Unit = block_548(r,p11_0,p11_1,p11_2,p11_3,x3079,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3080
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_540(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3081: Int = 1 + p11_4
          val x3082: Unit = block_549(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3081,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3082
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_541(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3083: Int = p11_4 + 1
          val x3084: Unit = block_550(r,p11_0,p11_1,p11_2,p11_3,x3083,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3084
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_542(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3085: Int = 1 + p11_4
          val x3086: Unit = block_551(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3085,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3086
}
// *** begin block 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_543(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3087: Boolean = p8_10 eq null
          val x3089: Object = if (x3087) {          val x3088: Object = throw new NullPointerException()
x3088} else {p8_10}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x3090: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x3090
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_544(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3091: Int = 52429 * p11_3
          val x3092: Int = x3091 >>> 19
          val x3093: Int = x3092 << 3
          val x3094: Int = x3092 << 1
          val x3095: Int = x3094 + x3093
          val x3096: Int = -x3095
          val x3097: Int = x3096 + p11_3
          val x3098: Int = p11_8 + -1
          val x3099: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x3100: Long = x3097.toLong
          val x3101: Boolean = x3099 eq null
          val x3103: Object = if (x3101) {          val x3102: Object = throw new NullPointerException()
x3102} else {x3099}
          val x3104: java.lang.Class[Object] = x3099.getClass.asInstanceOf[Class[Object]]
          val x3105: Boolean = x3104.isArray
          val x3106: Boolean = if (x3105) {false} else {true}
          val x3109: Unit = if (x3106) {          val x3107: java.lang.String = x3104.getName
          val x3108: Unit = throw new ArrayStoreException(x3107)
x3108} else {()}
          val x3110: Boolean = x3100 < 0
          val x3114: Boolean = if (x3110) {x3110} else {          val x3111: Int = java.lang.reflect.Array.getLength(x3099)
          val x3112: Long = x3111.toLong
          val x3113: Boolean = x3100 >= x3112
x3113}
          val x3117: Unit = if (x3114) {          val x3115: Int = x3100.toInt
          val x3116: Unit = throw new ArrayIndexOutOfBoundsException(x3115)
x3116} else {()}
          val x3118: Long = 2 * x3100
          val x3119: Long = 24 + x3118
          val x3120: Char = unsafe.getChar(x3099,x3119)
          val x3121: Int = x3120.toInt
          val x3122: Char = x3121.toChar
          val x3123: Long = x3098.toLong
          val x3124: Boolean = p11_5 eq null
          val x3126: Object = if (x3124) {          val x3125: Object = throw new NullPointerException()
x3125} else {p11_5}
          val x3127: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3128: Boolean = x3127.isArray
          val x3129: Boolean = if (x3128) {false} else {true}
          val x3132: Unit = if (x3129) {          val x3130: java.lang.String = x3127.getName
          val x3131: Unit = throw new ArrayStoreException(x3130)
x3131} else {()}
          val x3133: Boolean = x3123 < 0
          val x3137: Boolean = if (x3133) {x3133} else {          val x3134: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3135: Long = x3134.toLong
          val x3136: Boolean = x3123 >= x3135
x3136}
          val x3140: Unit = if (x3137) {          val x3138: Int = x3123.toInt
          val x3139: Unit = throw new ArrayIndexOutOfBoundsException(x3138)
x3139} else {()}
          val x3141: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3142: java.lang.Class[Object] = x3141.getComponentType.asInstanceOf[Class[Object]]
          val x3143: Boolean = x3142.isAssignableFrom(classOf[Char])
          val x3144: Boolean = if (x3143) {false} else {true}
          val x3146: Unit = if (x3144) {          val x3145: Unit = throw new ArrayStoreException("char")
x3145} else {()}
          val x3147: Long = 2 * x3123
          val x3148: Long = 24 + x3147
          val x3149: Unit = unsafe.putChar(p11_5,x3148, x3122)
          val x3152: Unit = if (true) {          val x3150: Unit = block_544(r,p11_0,p11_1,p11_2,x3092,p11_4,p11_5,x3092,x3097,x3098,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3150} else {          val x3151: Unit = block_552(r,p11_0,p11_1,p11_2,x3092,p11_4,p11_5,x3092,x3097,x3098,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3151}
x3152
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_545(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3153: Int = p11_3 / 100
          val x3154: Int = x3153 << 6
          val x3155: Int = x3153 << 5
          val x3156: Int = x3155 + x3154
          val x3157: Int = x3153 << 2
          val x3158: Int = x3157 + x3156
          val x3159: Int = -x3158
          val x3160: Int = x3159 + p11_3
          val x3161: Int = p11_8 + -1
          val x3162: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x3163: Long = x3160.toLong
          val x3164: Boolean = x3162 eq null
          val x3166: Object = if (x3164) {          val x3165: Object = throw new NullPointerException()
x3165} else {x3162}
          val x3167: java.lang.Class[Object] = x3162.getClass.asInstanceOf[Class[Object]]
          val x3168: Boolean = x3167.isArray
          val x3169: Boolean = if (x3168) {false} else {true}
          val x3172: Unit = if (x3169) {          val x3170: java.lang.String = x3167.getName
          val x3171: Unit = throw new ArrayStoreException(x3170)
x3171} else {()}
          val x3173: Boolean = x3163 < 0
          val x3177: Boolean = if (x3173) {x3173} else {          val x3174: Int = java.lang.reflect.Array.getLength(x3162)
          val x3175: Long = x3174.toLong
          val x3176: Boolean = x3163 >= x3175
x3176}
          val x3180: Unit = if (x3177) {          val x3178: Int = x3163.toInt
          val x3179: Unit = throw new ArrayIndexOutOfBoundsException(x3178)
x3179} else {()}
          val x3181: Long = 2 * x3163
          val x3182: Long = 24 + x3181
          val x3183: Char = unsafe.getChar(x3162,x3182)
          val x3184: Int = x3183.toInt
          val x3185: Char = x3184.toChar
          val x3186: Long = x3161.toLong
          val x3187: Boolean = p11_5 eq null
          val x3189: Object = if (x3187) {          val x3188: Object = throw new NullPointerException()
x3188} else {p11_5}
          val x3190: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3191: Boolean = x3190.isArray
          val x3192: Boolean = if (x3191) {false} else {true}
          val x3195: Unit = if (x3192) {          val x3193: java.lang.String = x3190.getName
          val x3194: Unit = throw new ArrayStoreException(x3193)
x3194} else {()}
          val x3196: Boolean = x3186 < 0
          val x3200: Boolean = if (x3196) {x3196} else {          val x3197: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3198: Long = x3197.toLong
          val x3199: Boolean = x3186 >= x3198
x3199}
          val x3203: Unit = if (x3200) {          val x3201: Int = x3186.toInt
          val x3202: Unit = throw new ArrayIndexOutOfBoundsException(x3201)
x3202} else {()}
          val x3204: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3205: java.lang.Class[Object] = x3204.getComponentType.asInstanceOf[Class[Object]]
          val x3206: Boolean = x3205.isAssignableFrom(classOf[Char])
          val x3207: Boolean = if (x3206) {false} else {true}
          val x3209: Unit = if (x3207) {          val x3208: Unit = throw new ArrayStoreException("char")
x3208} else {()}
          val x3210: Long = 2 * x3186
          val x3211: Long = 24 + x3210
          val x3212: Unit = unsafe.putChar(p11_5,x3211, x3185)
          val x3213: Int = x3161 + -1
          val x3214: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x3215: Long = x3160.toLong
          val x3216: Boolean = x3214 eq null
          val x3218: Object = if (x3216) {          val x3217: Object = throw new NullPointerException()
x3217} else {x3214}
          val x3219: java.lang.Class[Object] = x3214.getClass.asInstanceOf[Class[Object]]
          val x3220: Boolean = x3219.isArray
          val x3221: Boolean = if (x3220) {false} else {true}
          val x3224: Unit = if (x3221) {          val x3222: java.lang.String = x3219.getName
          val x3223: Unit = throw new ArrayStoreException(x3222)
x3223} else {()}
          val x3225: Boolean = x3215 < 0
          val x3229: Boolean = if (x3225) {x3225} else {          val x3226: Int = java.lang.reflect.Array.getLength(x3214)
          val x3227: Long = x3226.toLong
          val x3228: Boolean = x3215 >= x3227
x3228}
          val x3232: Unit = if (x3229) {          val x3230: Int = x3215.toInt
          val x3231: Unit = throw new ArrayIndexOutOfBoundsException(x3230)
x3231} else {()}
          val x3233: Long = 2 * x3215
          val x3234: Long = 24 + x3233
          val x3235: Char = unsafe.getChar(x3214,x3234)
          val x3236: Int = x3235.toInt
          val x3237: Char = x3236.toChar
          val x3238: Long = x3213.toLong
          val x3239: Boolean = p11_5 eq null
          val x3241: Object = if (x3239) {          val x3240: Object = throw new NullPointerException()
x3240} else {p11_5}
          val x3242: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3243: Boolean = x3242.isArray
          val x3244: Boolean = if (x3243) {false} else {true}
          val x3247: Unit = if (x3244) {          val x3245: java.lang.String = x3242.getName
          val x3246: Unit = throw new ArrayStoreException(x3245)
x3246} else {()}
          val x3248: Boolean = x3238 < 0
          val x3252: Boolean = if (x3248) {x3248} else {          val x3249: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3250: Long = x3249.toLong
          val x3251: Boolean = x3238 >= x3250
x3251}
          val x3255: Unit = if (x3252) {          val x3253: Int = x3238.toInt
          val x3254: Unit = throw new ArrayIndexOutOfBoundsException(x3253)
x3254} else {()}
          val x3256: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3257: java.lang.Class[Object] = x3256.getComponentType.asInstanceOf[Class[Object]]
          val x3258: Boolean = x3257.isAssignableFrom(classOf[Char])
          val x3259: Boolean = if (x3258) {false} else {true}
          val x3261: Unit = if (x3259) {          val x3260: Unit = throw new ArrayStoreException("char")
x3260} else {()}
          val x3262: Long = 2 * x3238
          val x3263: Long = 24 + x3262
          val x3264: Unit = unsafe.putChar(p11_5,x3263, x3237)
          val x3265: Unit = block_534(r,p11_0,p11_1,p11_2,x3153,p11_4,p11_5,x3153,x3160,x3213,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3265
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_546(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3266: Unit = block_553(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3266
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_547(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3269: Unit = if (false) {          val x3267: Unit = block_554(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3267} else {          val x3268: Unit = block_555(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3268}
x3269
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_548(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3270: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x3271: Long = p11_4.toLong
          val x3272: Boolean = x3270 eq null
          val x3274: Object = if (x3272) {          val x3273: Object = throw new NullPointerException()
x3273} else {x3270}
          val x3275: java.lang.Class[Object] = x3270.getClass.asInstanceOf[Class[Object]]
          val x3276: Boolean = x3275.isArray
          val x3277: Boolean = if (x3276) {false} else {true}
          val x3280: Unit = if (x3277) {          val x3278: java.lang.String = x3275.getName
          val x3279: Unit = throw new ArrayStoreException(x3278)
x3279} else {()}
          val x3281: Boolean = x3271 < 0
          val x3285: Boolean = if (x3281) {x3281} else {          val x3282: Int = java.lang.reflect.Array.getLength(x3270)
          val x3283: Long = x3282.toLong
          val x3284: Boolean = x3271 >= x3283
x3284}
          val x3288: Unit = if (x3285) {          val x3286: Int = x3271.toInt
          val x3287: Unit = throw new ArrayIndexOutOfBoundsException(x3286)
x3287} else {()}
          val x3289: Long = 4 * x3271
          val x3290: Long = 24 + x3289
          val x3291: Int = unsafe.getInt(x3270,x3290)
          val x3292: Boolean = x3291 < p11_3
          val x3295: Unit = if (x3292) {          val x3293: Unit = block_539(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3293} else {          val x3294: Unit = block_540(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3294}
x3295
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_549(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3296: Boolean = p10_3 eq null
          val x3298: Object = if (x3296) {          val x3297: Object = throw new NullPointerException()
x3297} else {p10_3}
          val x3299: Int = unsafe.getInt(x3298,16)
          val x3300: Int = p10_7 + x3299
          val x3301: Boolean = p10_3 eq null
          val x3303: Object = if (x3301) {          val x3302: Object = throw new NullPointerException()
x3302} else {p10_3}
          val x3304: Unit = block_556(null,null,null,null,p10_3,x3300,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x3300,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3304
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_550(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3305: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x3306: Long = p11_4.toLong
          val x3307: Boolean = x3305 eq null
          val x3309: Object = if (x3307) {          val x3308: Object = throw new NullPointerException()
x3308} else {x3305}
          val x3310: java.lang.Class[Object] = x3305.getClass.asInstanceOf[Class[Object]]
          val x3311: Boolean = x3310.isArray
          val x3312: Boolean = if (x3311) {false} else {true}
          val x3315: Unit = if (x3312) {          val x3313: java.lang.String = x3310.getName
          val x3314: Unit = throw new ArrayStoreException(x3313)
x3314} else {()}
          val x3316: Boolean = x3306 < 0
          val x3320: Boolean = if (x3316) {x3316} else {          val x3317: Int = java.lang.reflect.Array.getLength(x3305)
          val x3318: Long = x3317.toLong
          val x3319: Boolean = x3306 >= x3318
x3319}
          val x3323: Unit = if (x3320) {          val x3321: Int = x3306.toInt
          val x3322: Unit = throw new ArrayIndexOutOfBoundsException(x3321)
x3322} else {()}
          val x3324: Long = 4 * x3306
          val x3325: Long = 24 + x3324
          val x3326: Int = unsafe.getInt(x3305,x3325)
          val x3327: Boolean = x3326 < p11_3
          val x3330: Unit = if (x3327) {          val x3328: Unit = block_541(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3328} else {          val x3329: Unit = block_542(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3329}
x3330
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_551(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3331: Int = 1 + p10_7
          val x3332: Unit = block_549(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3331,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3332
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_552(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3333: Unit = block_557(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3333
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_553(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3336: Unit = if (false) {          val x3334: Unit = block_558(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3334} else {          val x3335: Unit = block_559(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3335}
x3336
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_554(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3337: Unit = block_560(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3337
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_555(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3338: Int = p11_8 + -1
          val x3339: Char = p11_9.toChar
          val x3340: Long = x3338.toLong
          val x3341: Boolean = p11_5 eq null
          val x3343: Object = if (x3341) {          val x3342: Object = throw new NullPointerException()
x3342} else {p11_5}
          val x3344: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3345: Boolean = x3344.isArray
          val x3346: Boolean = if (x3345) {false} else {true}
          val x3349: Unit = if (x3346) {          val x3347: java.lang.String = x3344.getName
          val x3348: Unit = throw new ArrayStoreException(x3347)
x3348} else {()}
          val x3350: Boolean = x3340 < 0
          val x3354: Boolean = if (x3350) {x3350} else {          val x3351: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3352: Long = x3351.toLong
          val x3353: Boolean = x3340 >= x3352
x3353}
          val x3357: Unit = if (x3354) {          val x3355: Int = x3340.toInt
          val x3356: Unit = throw new ArrayIndexOutOfBoundsException(x3355)
x3356} else {()}
          val x3358: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3359: java.lang.Class[Object] = x3358.getComponentType.asInstanceOf[Class[Object]]
          val x3360: Boolean = x3359.isAssignableFrom(classOf[Char])
          val x3361: Boolean = if (x3360) {false} else {true}
          val x3363: Unit = if (x3361) {          val x3362: Unit = throw new ArrayStoreException("char")
x3362} else {()}
          val x3364: Long = 2 * x3340
          val x3365: Long = 24 + x3364
          val x3366: Unit = unsafe.putChar(p11_5,x3365, x3339)
          val x3367: Unit = block_560(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3367
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_556(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3368: Boolean = p11_3 eq null
          val x3370: Object = if (x3368) {          val x3369: Object = throw new NullPointerException()
x3369} else {p11_3}
          val x3371: Object = unsafe.getObject(x3370,24)
          val x3372: Boolean = x3371 eq null
          val x3374: Object = if (x3372) {          val x3373: Object = throw new NullPointerException()
x3373} else {x3371}
          val x3375: Int = java.lang.reflect.Array.getLength(x3374)
          val x3376: Int = -x3375
          val x3377: Int = x3376 + p11_4
          val x3378: Boolean = x3377 <= 0
          val x3381: Unit = if (x3378) {          val x3379: Unit = block_561(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3379} else {          val x3380: Unit = block_562(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3380}
x3381
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_557(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3384: Unit = if (false) {          val x3382: Unit = block_563(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3382} else {          val x3383: Unit = block_564(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3383}
x3384
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_558(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3385: Unit = block_565(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3385
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_559(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3386: Int = p11_8 + -1
          val x3387: Char = p11_9.toChar
          val x3388: Long = x3386.toLong
          val x3389: Boolean = p11_5 eq null
          val x3391: Object = if (x3389) {          val x3390: Object = throw new NullPointerException()
x3390} else {p11_5}
          val x3392: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3393: Boolean = x3392.isArray
          val x3394: Boolean = if (x3393) {false} else {true}
          val x3397: Unit = if (x3394) {          val x3395: java.lang.String = x3392.getName
          val x3396: Unit = throw new ArrayStoreException(x3395)
x3396} else {()}
          val x3398: Boolean = x3388 < 0
          val x3402: Boolean = if (x3398) {x3398} else {          val x3399: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3400: Long = x3399.toLong
          val x3401: Boolean = x3388 >= x3400
x3401}
          val x3405: Unit = if (x3402) {          val x3403: Int = x3388.toInt
          val x3404: Unit = throw new ArrayIndexOutOfBoundsException(x3403)
x3404} else {()}
          val x3406: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3407: java.lang.Class[Object] = x3406.getComponentType.asInstanceOf[Class[Object]]
          val x3408: Boolean = x3407.isAssignableFrom(classOf[Char])
          val x3409: Boolean = if (x3408) {false} else {true}
          val x3411: Unit = if (x3409) {          val x3410: Unit = throw new ArrayStoreException("char")
x3410} else {()}
          val x3412: Long = 2 * x3388
          val x3413: Long = 24 + x3412
          val x3414: Unit = unsafe.putChar(p11_5,x3413, x3387)
          val x3415: Unit = block_565(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3415
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_560(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3416: Boolean = p10_3 eq null
          val x3418: Object = if (x3416) {          val x3417: Object = throw new NullPointerException()
x3417} else {p10_3}
          val x3419: Unit = unsafe.putInt(x3418,16, p10_6)
          val x3420: Unit = block_444(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3420
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_561(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3421: Unit = block_566(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3421
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_562(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3422: Boolean = p11_3 eq null
          val x3424: Object = if (x3422) {          val x3423: Object = throw new NullPointerException()
x3423} else {p11_3}
          val x3425: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x3426: Unit = block_561(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3426
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_563(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3427: Unit = block_567(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3427
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_564(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3428: Int = p11_8 + -1
          val x3429: Char = p11_9.toChar
          val x3430: Long = x3428.toLong
          val x3431: Boolean = p11_5 eq null
          val x3433: Object = if (x3431) {          val x3432: Object = throw new NullPointerException()
x3432} else {p11_5}
          val x3434: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3435: Boolean = x3434.isArray
          val x3436: Boolean = if (x3435) {false} else {true}
          val x3439: Unit = if (x3436) {          val x3437: java.lang.String = x3434.getName
          val x3438: Unit = throw new ArrayStoreException(x3437)
x3438} else {()}
          val x3440: Boolean = x3430 < 0
          val x3444: Boolean = if (x3440) {x3440} else {          val x3441: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3442: Long = x3441.toLong
          val x3443: Boolean = x3430 >= x3442
x3443}
          val x3447: Unit = if (x3444) {          val x3445: Int = x3430.toInt
          val x3446: Unit = throw new ArrayIndexOutOfBoundsException(x3445)
x3446} else {()}
          val x3448: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3449: java.lang.Class[Object] = x3448.getComponentType.asInstanceOf[Class[Object]]
          val x3450: Boolean = x3449.isAssignableFrom(classOf[Char])
          val x3451: Boolean = if (x3450) {false} else {true}
          val x3453: Unit = if (x3451) {          val x3452: Unit = throw new ArrayStoreException("char")
x3452} else {()}
          val x3454: Long = 2 * x3430
          val x3455: Long = 24 + x3454
          val x3456: Unit = unsafe.putChar(p11_5,x3455, x3429)
          val x3457: Unit = block_567(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3457
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_565(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3458: Boolean = p10_3 eq null
          val x3460: Object = if (x3458) {          val x3459: Object = throw new NullPointerException()
x3459} else {p10_3}
          val x3461: Unit = unsafe.putInt(x3460,16, p10_6)
          val x3462: Unit = block_454(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3462
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_566(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3463: Boolean = p10_3 eq null
          val x3465: Object = if (x3463) {          val x3464: Object = throw new NullPointerException()
x3464} else {p10_3}
          val x3466: Object = unsafe.getObject(x3465,24)
          val x3467: Unit = block_568(null,null,null,null,p10_4,p10_6,x3466,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3467
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_567(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3468: Boolean = p10_3 eq null
          val x3470: Object = if (x3468) {          val x3469: Object = throw new NullPointerException()
x3469} else {p10_3}
          val x3471: Unit = unsafe.putInt(x3470,16, p10_6)
          val x3472: Unit = block_466(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3472
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_568(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3473: Boolean = p11_3 >= 0
          val x3476: Unit = if (x3473) {          val x3474: Unit = block_569(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3474} else {          val x3475: Unit = block_570(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3475}
x3476
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_569(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3477: Boolean = 65536 > p11_3
          val x3480: Unit = if (x3477) {          val x3478: Unit = block_571(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3478} else {          val x3479: Unit = block_572(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3479}
x3480
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_570(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3481: Int = -p11_3
          val x3482: Boolean = 65536 > x3481
          val x3485: Unit = if (x3482) {          val x3483: Unit = block_571(r,p11_0,p11_1,p11_2,x3481,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3483} else {          val x3484: Unit = block_572(r,p11_0,p11_1,p11_2,x3481,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3484}
x3485
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_571(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3486: Int = 52429 * p11_3
          val x3487: Int = x3486 >>> 19
          val x3488: Int = x3487 << 3
          val x3489: Int = x3487 << 1
          val x3490: Int = x3489 + x3488
          val x3491: Int = -x3490
          val x3492: Int = x3491 + p11_3
          val x3493: Int = p11_8 + -1
          val x3494: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x3495: Long = x3492.toLong
          val x3496: Boolean = x3494 eq null
          val x3498: Object = if (x3496) {          val x3497: Object = throw new NullPointerException()
x3497} else {x3494}
          val x3499: java.lang.Class[Object] = x3494.getClass.asInstanceOf[Class[Object]]
          val x3500: Boolean = x3499.isArray
          val x3501: Boolean = if (x3500) {false} else {true}
          val x3504: Unit = if (x3501) {          val x3502: java.lang.String = x3499.getName
          val x3503: Unit = throw new ArrayStoreException(x3502)
x3503} else {()}
          val x3505: Boolean = x3495 < 0
          val x3509: Boolean = if (x3505) {x3505} else {          val x3506: Int = java.lang.reflect.Array.getLength(x3494)
          val x3507: Long = x3506.toLong
          val x3508: Boolean = x3495 >= x3507
x3508}
          val x3512: Unit = if (x3509) {          val x3510: Int = x3495.toInt
          val x3511: Unit = throw new ArrayIndexOutOfBoundsException(x3510)
x3511} else {()}
          val x3513: Long = 2 * x3495
          val x3514: Long = 24 + x3513
          val x3515: Char = unsafe.getChar(x3494,x3514)
          val x3516: Int = x3515.toInt
          val x3517: Char = x3516.toChar
          val x3518: Long = x3493.toLong
          val x3519: Boolean = p11_5 eq null
          val x3521: Object = if (x3519) {          val x3520: Object = throw new NullPointerException()
x3520} else {p11_5}
          val x3522: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3523: Boolean = x3522.isArray
          val x3524: Boolean = if (x3523) {false} else {true}
          val x3527: Unit = if (x3524) {          val x3525: java.lang.String = x3522.getName
          val x3526: Unit = throw new ArrayStoreException(x3525)
x3526} else {()}
          val x3528: Boolean = x3518 < 0
          val x3532: Boolean = if (x3528) {x3528} else {          val x3529: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3530: Long = x3529.toLong
          val x3531: Boolean = x3518 >= x3530
x3531}
          val x3535: Unit = if (x3532) {          val x3533: Int = x3518.toInt
          val x3534: Unit = throw new ArrayIndexOutOfBoundsException(x3533)
x3534} else {()}
          val x3536: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3537: java.lang.Class[Object] = x3536.getComponentType.asInstanceOf[Class[Object]]
          val x3538: Boolean = x3537.isAssignableFrom(classOf[Char])
          val x3539: Boolean = if (x3538) {false} else {true}
          val x3541: Unit = if (x3539) {          val x3540: Unit = throw new ArrayStoreException("char")
x3540} else {()}
          val x3542: Long = 2 * x3518
          val x3543: Long = 24 + x3542
          val x3544: Unit = unsafe.putChar(p11_5,x3543, x3517)
          val x3547: Unit = if (true) {          val x3545: Unit = block_571(r,p11_0,p11_1,p11_2,x3487,p11_4,p11_5,x3487,x3492,x3493,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3545} else {          val x3546: Unit = block_573(r,p11_0,p11_1,p11_2,x3487,p11_4,p11_5,x3487,x3492,x3493,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3546}
x3547
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_572(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3548: Int = p11_3 / 100
          val x3549: Int = x3548 << 6
          val x3550: Int = x3548 << 5
          val x3551: Int = x3550 + x3549
          val x3552: Int = x3548 << 2
          val x3553: Int = x3552 + x3551
          val x3554: Int = -x3553
          val x3555: Int = x3554 + p11_3
          val x3556: Int = p11_8 + -1
          val x3557: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x3558: Long = x3555.toLong
          val x3559: Boolean = x3557 eq null
          val x3561: Object = if (x3559) {          val x3560: Object = throw new NullPointerException()
x3560} else {x3557}
          val x3562: java.lang.Class[Object] = x3557.getClass.asInstanceOf[Class[Object]]
          val x3563: Boolean = x3562.isArray
          val x3564: Boolean = if (x3563) {false} else {true}
          val x3567: Unit = if (x3564) {          val x3565: java.lang.String = x3562.getName
          val x3566: Unit = throw new ArrayStoreException(x3565)
x3566} else {()}
          val x3568: Boolean = x3558 < 0
          val x3572: Boolean = if (x3568) {x3568} else {          val x3569: Int = java.lang.reflect.Array.getLength(x3557)
          val x3570: Long = x3569.toLong
          val x3571: Boolean = x3558 >= x3570
x3571}
          val x3575: Unit = if (x3572) {          val x3573: Int = x3558.toInt
          val x3574: Unit = throw new ArrayIndexOutOfBoundsException(x3573)
x3574} else {()}
          val x3576: Long = 2 * x3558
          val x3577: Long = 24 + x3576
          val x3578: Char = unsafe.getChar(x3557,x3577)
          val x3579: Int = x3578.toInt
          val x3580: Char = x3579.toChar
          val x3581: Long = x3556.toLong
          val x3582: Boolean = p11_5 eq null
          val x3584: Object = if (x3582) {          val x3583: Object = throw new NullPointerException()
x3583} else {p11_5}
          val x3585: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3586: Boolean = x3585.isArray
          val x3587: Boolean = if (x3586) {false} else {true}
          val x3590: Unit = if (x3587) {          val x3588: java.lang.String = x3585.getName
          val x3589: Unit = throw new ArrayStoreException(x3588)
x3589} else {()}
          val x3591: Boolean = x3581 < 0
          val x3595: Boolean = if (x3591) {x3591} else {          val x3592: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3593: Long = x3592.toLong
          val x3594: Boolean = x3581 >= x3593
x3594}
          val x3598: Unit = if (x3595) {          val x3596: Int = x3581.toInt
          val x3597: Unit = throw new ArrayIndexOutOfBoundsException(x3596)
x3597} else {()}
          val x3599: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3600: java.lang.Class[Object] = x3599.getComponentType.asInstanceOf[Class[Object]]
          val x3601: Boolean = x3600.isAssignableFrom(classOf[Char])
          val x3602: Boolean = if (x3601) {false} else {true}
          val x3604: Unit = if (x3602) {          val x3603: Unit = throw new ArrayStoreException("char")
x3603} else {()}
          val x3605: Long = 2 * x3581
          val x3606: Long = 24 + x3605
          val x3607: Unit = unsafe.putChar(p11_5,x3606, x3580)
          val x3608: Int = x3556 + -1
          val x3609: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x3610: Long = x3555.toLong
          val x3611: Boolean = x3609 eq null
          val x3613: Object = if (x3611) {          val x3612: Object = throw new NullPointerException()
x3612} else {x3609}
          val x3614: java.lang.Class[Object] = x3609.getClass.asInstanceOf[Class[Object]]
          val x3615: Boolean = x3614.isArray
          val x3616: Boolean = if (x3615) {false} else {true}
          val x3619: Unit = if (x3616) {          val x3617: java.lang.String = x3614.getName
          val x3618: Unit = throw new ArrayStoreException(x3617)
x3618} else {()}
          val x3620: Boolean = x3610 < 0
          val x3624: Boolean = if (x3620) {x3620} else {          val x3621: Int = java.lang.reflect.Array.getLength(x3609)
          val x3622: Long = x3621.toLong
          val x3623: Boolean = x3610 >= x3622
x3623}
          val x3627: Unit = if (x3624) {          val x3625: Int = x3610.toInt
          val x3626: Unit = throw new ArrayIndexOutOfBoundsException(x3625)
x3626} else {()}
          val x3628: Long = 2 * x3610
          val x3629: Long = 24 + x3628
          val x3630: Char = unsafe.getChar(x3609,x3629)
          val x3631: Int = x3630.toInt
          val x3632: Char = x3631.toChar
          val x3633: Long = x3608.toLong
          val x3634: Boolean = p11_5 eq null
          val x3636: Object = if (x3634) {          val x3635: Object = throw new NullPointerException()
x3635} else {p11_5}
          val x3637: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3638: Boolean = x3637.isArray
          val x3639: Boolean = if (x3638) {false} else {true}
          val x3642: Unit = if (x3639) {          val x3640: java.lang.String = x3637.getName
          val x3641: Unit = throw new ArrayStoreException(x3640)
x3641} else {()}
          val x3643: Boolean = x3633 < 0
          val x3647: Boolean = if (x3643) {x3643} else {          val x3644: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3645: Long = x3644.toLong
          val x3646: Boolean = x3633 >= x3645
x3646}
          val x3650: Unit = if (x3647) {          val x3648: Int = x3633.toInt
          val x3649: Unit = throw new ArrayIndexOutOfBoundsException(x3648)
x3649} else {()}
          val x3651: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3652: java.lang.Class[Object] = x3651.getComponentType.asInstanceOf[Class[Object]]
          val x3653: Boolean = x3652.isAssignableFrom(classOf[Char])
          val x3654: Boolean = if (x3653) {false} else {true}
          val x3656: Unit = if (x3654) {          val x3655: Unit = throw new ArrayStoreException("char")
x3655} else {()}
          val x3657: Long = 2 * x3633
          val x3658: Long = 24 + x3657
          val x3659: Unit = unsafe.putChar(p11_5,x3658, x3632)
          val x3660: Unit = block_569(r,p11_0,p11_1,p11_2,x3548,p11_4,p11_5,x3548,x3555,x3608,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3660
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_573(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3661: Unit = block_574(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3661
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_574(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3664: Unit = if (false) {          val x3662: Unit = block_575(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3662} else {          val x3663: Unit = block_576(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3663}
x3664
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_575(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3665: Unit = block_577(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3665
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_576(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3666: Int = p11_8 + -1
          val x3667: Char = p11_9.toChar
          val x3668: Long = x3666.toLong
          val x3669: Boolean = p11_5 eq null
          val x3671: Object = if (x3669) {          val x3670: Object = throw new NullPointerException()
x3670} else {p11_5}
          val x3672: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3673: Boolean = x3672.isArray
          val x3674: Boolean = if (x3673) {false} else {true}
          val x3677: Unit = if (x3674) {          val x3675: java.lang.String = x3672.getName
          val x3676: Unit = throw new ArrayStoreException(x3675)
x3676} else {()}
          val x3678: Boolean = x3668 < 0
          val x3682: Boolean = if (x3678) {x3678} else {          val x3679: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3680: Long = x3679.toLong
          val x3681: Boolean = x3668 >= x3680
x3681}
          val x3685: Unit = if (x3682) {          val x3683: Int = x3668.toInt
          val x3684: Unit = throw new ArrayIndexOutOfBoundsException(x3683)
x3684} else {()}
          val x3686: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3687: java.lang.Class[Object] = x3686.getComponentType.asInstanceOf[Class[Object]]
          val x3688: Boolean = x3687.isAssignableFrom(classOf[Char])
          val x3689: Boolean = if (x3688) {false} else {true}
          val x3691: Unit = if (x3689) {          val x3690: Unit = throw new ArrayStoreException("char")
x3690} else {()}
          val x3692: Long = 2 * x3668
          val x3693: Long = 24 + x3692
          val x3694: Unit = unsafe.putChar(p11_5,x3693, x3667)
          val x3695: Unit = block_577(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3695
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_577(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3696: Boolean = p10_3 eq null
          val x3698: Object = if (x3696) {          val x3697: Object = throw new NullPointerException()
x3697} else {p10_3}
          val x3699: Unit = unsafe.putInt(x3698,16, p10_6)
          val x3700: Unit = block_533(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3700
}

}; BODY.RES }
}

warning: there were 156 deprecation warnings; re-run with -deprecation for details
one warning found
compilation: ok
hello: 8
9
