          val x0 = 8.asInstanceOf[Int]
object Generated {
val unsafe = null.asInstanceOf[sun.misc.Unsafe]
type char = Char
// *** begin block 0:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x1 = unsafe.allocateInstance(classOf[scala.collection.mutable.StringBuilder])
// *** begin block 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x2 = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
// *** begin block 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x3 = new Array[char](16)
          val x4 = unsafe.putObject(x2,24, x3)
// *** begin block 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x5 = java.lang.System.arraycopy((null:[C),0,x3,0,0).asInstanceOf[Object]
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x6 = unsafe.putInt(x2,16, 0)
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x7 = unsafe.putObject(x1,16, x2)
// *** begin block 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 10:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x8 = java.lang.System.arraycopy((null:[C),0,x3,0,7).asInstanceOf[Object]
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x9 = unsafe.putInt(x2,16, 7)
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x10 = unsafe.getBoolean(Class.forName("java.lang.Integer"),260)
          val x11 = if (x10) {1} else {0}
// *** begin block 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x12 = -128 > x0
          val x14 = if (x12) {()} else {          val x13 = goto 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x13}
// *** begin block 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x15 = unsafe.allocateInstance(classOf[java.lang.Integer])
          val x16 = goto 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x17 = 127 < x0
          val x20 = if (x17) {          val x18 = goto 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x18} else {          val x19 = goto 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x19}
// *** begin block 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x21 = goto 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x22 = unsafe.allocateInstance(classOf[java.lang.Integer])
          val x23 = goto 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x24 = 128 + x0
          val x25 = x24.toLong
          val x26 = (null:Array[Object]).getClass()
          val x27 = !x26.isArray()
          val x29 = if (x27) {          val x28 = throw new ArrayStoreException(x26.getName())
x28} else {()}
          val x30 = x25 < 0
          val x32 = if (x30) {x30} else {          val x31 = x25 >= 256
x31}
          val x35 = if (x32) {          val x33 = x25.toInt
          val x34 = throw new ArrayIndexOutOfBoundsException(x33)
x34} else {()}
          val x36 = 8 * x25
          val x37 = 24 + x36
          val x38 = unsafe.getObject((null:Array[Object]),x37)
          val x39 = goto 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x40 = goto 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x41 = goto 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x42 = goto 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x43 = goto 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x44 = goto 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x45 = goto 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x46 = goto 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x47 = goto 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x48 = goto 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x49 = unsafe.putInt(x15,16, x0)
          val x50 = goto 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x51 = goto 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x52 = goto 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x53 = goto 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x54 = unsafe.putInt(x22,16, x0)
          val x55 = goto 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x56 = goto 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x57 = goto 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x58 = goto 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x59 = goto 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x60 = goto 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x61 = goto 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x62 = x38 eq null
          val x64 = if (x62) {          val x63 = throw new NullPointerException()
x63} else {x38}
          val x65 = x38.asInstanceOf[java.lang.Object].toString().asInstanceOf[Object]
          val x66 = goto 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x67 = goto 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 19:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x68 = goto 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x69 = goto 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x70 = goto 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x71 = goto 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x72 = goto 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x73 = goto 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x74 = goto 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x75 = goto 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x76 = goto 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x77 = goto 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x78 = goto 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x79 = goto 0:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x80 = goto 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x81 = x65 eq null
          val x83 = if (x81) {          val x82 = throw new NullPointerException()
x82} else {x65}
          val x84 = x65.asInstanceOf[java.lang.String].length().asInstanceOf[Object]
          val x85 = x84.asInstanceOf[Int]
          val x86 = goto 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x87 = goto 0:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x88 = goto 0:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x89 = goto 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x90 = goto 9:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x91 = goto 0:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x92 = -16 + x85
          val x93 = x92 <= 0
          val x96 = if (x93) {          val x94 = goto 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x94} else {          val x95 = goto 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x95}
// *** begin block 9:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x97 = goto 23:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x98 = goto 9:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x99 = goto 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x100 = goto 0:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 23:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x101 = goto 0:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 9:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x102 = goto 23:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x103 = x65 eq null
          val x105 = if (x103) {          val x104 = throw new NullPointerException()
x104} else {x65}
          val x106 = x65.asInstanceOf[java.lang.String].getChars(0,x85,x3,0).asInstanceOf[Object]
          val x107 = goto 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x108 = -x85
          val x109 = x108 + 34
          val x110 = x109 >= 0
          val x113 = if (x110) {          val x111 = goto 18:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x111} else {          val x112 = goto 16:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x112}
// *** begin block 0:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x114 = (null:[I).getClass()
          val x115 = !x114.isArray()
          val x117 = if (x115) {          val x116 = throw new ArrayStoreException(x114.getName())
x116} else {()}
          val x118 = goto 11:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 23:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 23:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x119 = goto 0:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x120 = unsafe.putInt(x2,16, x85)
          val x121 = goto 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 18:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x122 = goto 37:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 16:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x123 = x85 >= 0
          val x126 = if (x123) {          val x124 = goto 37:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x124} else {          val x125 = goto 22:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x125}
// *** begin block 11:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x127 = goto 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x128 = (null:[I).getClass()
          val x129 = !x128.isArray()
          val x131 = if (x129) {          val x130 = throw new ArrayStoreException(x128.getName())
x130} else {()}
          val x132 = goto 11:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x133 = goto 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 37:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x134 = goto 0:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 37:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 37:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x135 = goto 0:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x136 = x85 >= 0
          val x139 = if (x136) {          val x137 = goto 34:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x137} else {          val x138 = goto 26:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x138}
// *** begin block 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x140 = new Array[char](1)
          val x141 = goto 0:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 11:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<Integer.stringSize>(I)I // 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x142 = goto 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x143 = goto 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x144 = new Array[char](34)
          val x145 = goto 0:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x146 = new Array[char](x85)
          val x147 = goto 0:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 34:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x148 = goto 0:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 26:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x149 = unsafe.allocateInstance(classOf[java.lang.OutOfMemoryError])
          val x150 = goto 0:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x151 = goto 17:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 27:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x152 = new Array[char](1)
          val x153 = goto 0:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x154 = goto 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x155 = goto 5:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x156 = x85 < 16
          val x159 = if (x156) {          val x157 = goto 9:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x157} else {          val x158 = goto 5:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x158}
// *** SEEN 2: 0:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x160 = new Array[char](2147483647)
          val x161 = goto 0:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x162 = goto 0:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 17:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x163 = goto 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x164 = goto 17:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x165 = goto 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 5:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x166 = goto 10:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x167 = goto 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 5:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 5:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x168 = goto 10:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x169 = goto 5:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x170 = goto 0:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x171 = (null:[C).getClass()
          val x172 = !x171.isArray()
          val x174 = if (x172) {          val x173 = throw new ArrayStoreException(x171.getName())
x173} else {()}
          val x175 = unsafe.getChar((null:[C),24)
          val x176 = x175.toInt
          val x177 = x176.toChar
          val x178 = x140.getClass()
          val x179 = !x178.isArray()
          val x181 = if (x179) {          val x180 = throw new ArrayStoreException(x178.getName())
x180} else {()}
          val x182 = !array.getClass().getComponentType().isAssignableFrom(char)
          val x184 = if (x182) {          val x183 = throw new ArrayStoreException(char)
x183} else {()}
          val x185 = unsafe.putChar(x140,24, x177)
          val x186 = goto 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 17:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 17:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x187 = goto 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x188 = goto 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 10:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x189 = goto 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x190 = java.lang.System.arraycopy(x3,0,x146,0,x85).asInstanceOf[Object]
          val x191 = goto 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 10:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 10:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x192 = goto 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 5:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 5:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x193 = goto 10:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x194 = goto 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x195 = (null:[C).getClass()
          val x196 = !x195.isArray()
          val x198 = if (x196) {          val x197 = throw new ArrayStoreException(x195.getName())
x197} else {()}
          val x199 = unsafe.getChar((null:[C),24)
          val x200 = x199.toInt
          val x201 = x200.toChar
          val x202 = x140.getClass()
          val x203 = !x202.isArray()
          val x205 = if (x203) {          val x204 = throw new ArrayStoreException(x202.getName())
x204} else {()}
          val x206 = throw new ArrayIndexOutOfBoundsException(-1)
          val x207 = !array.getClass().getComponentType().isAssignableFrom(char)
          val x209 = if (x207) {          val x208 = throw new ArrayStoreException(char)
x208} else {()}
          val x210 = unsafe.putChar(x140,22, x201)
          val x211 = goto 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x212 = (null:[C).getClass()
          val x213 = !x212.isArray()
          val x215 = if (x213) {          val x214 = throw new ArrayStoreException(x212.getName())
x214} else {()}
          val x216 = unsafe.getChar((null:[C),24)
          val x217 = x216.toInt
          val x218 = x217.toChar
          val x219 = x152.getClass()
          val x220 = !x219.isArray()
          val x222 = if (x220) {          val x221 = throw new ArrayStoreException(x219.getName())
x221} else {()}
          val x223 = !array.getClass().getComponentType().isAssignableFrom(char)
          val x225 = if (x223) {          val x224 = throw new ArrayStoreException(char)
x224} else {()}
          val x226 = unsafe.putChar(x152,24, x218)
          val x227 = goto 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x228 = goto 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x229 = java.lang.System.arraycopy(x3,0,x144,0,16).asInstanceOf[Object]
          val x230 = goto 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x231 = goto 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x232 = java.lang.System.arraycopy(x3,0,x146,0,16).asInstanceOf[Object]
          val x233 = goto 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 10:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 10:<Math.min>(II)I // 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x234 = goto 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x235 = goto 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x236 = (null:[C).getClass()
          val x237 = !x236.isArray()
          val x239 = if (x237) {          val x238 = throw new ArrayStoreException(x236.getName())
x238} else {()}
          val x240 = unsafe.getChar((null:[C),24)
          val x241 = x240.toInt
          val x242 = x241.toChar
          val x243 = x140.getClass()
          val x244 = !x243.isArray()
          val x246 = if (x244) {          val x245 = throw new ArrayStoreException(x243.getName())
x245} else {()}
          val x247 = throw new ArrayIndexOutOfBoundsException(-2)
          val x248 = !array.getClass().getComponentType().isAssignableFrom(char)
          val x250 = if (x248) {          val x249 = throw new ArrayStoreException(char)
x249} else {()}
          val x251 = unsafe.putChar(x140,20, x242)
          val x252 = goto 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 4: 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x253 = unsafe.allocateInstance(classOf[java.lang.String])
          val x254 = goto 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x255 = goto 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x256 = unsafe.putObject(x2,24, x146)
          val x257 = goto 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x258 = goto 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x259 = java.lang.System.arraycopy(x3,0,x160,0,16).asInstanceOf[Object]
          val x260 = goto 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x261 = goto 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 5: 75:<Integer.getChars>(II[C)V // 38:<Integer.toString>(I)Ljava/lang/String; // 7:<Integer.toString>()Ljava/lang/String; // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x262 = goto 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x263 = unsafe.putObject(x2,24, x144)
          val x264 = goto 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x265 = goto 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x266 = unsafe.putObject(x2,24, x146)
          val x267 = goto 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 17:<Arrays.copyOf>([CI)[C // 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x268 = goto 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x269 = unsafe.putObject(x149,32, x149)
          val x270 = unsafe.putObject(x149,40, (null:Array[Object]))
          val x271 = unsafe.putObject(x149,48, (null:java.util.Collections$UnmodifiableRandomAccessList))
          val x272 = unsafe.monitorEnter(x149)
          val x273 = goto 0:<Throwable.fillInStackTrace>()Ljava/lang/Throwable; // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x274 = goto 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x275 = goto 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x276 = x65 eq null
          val x278 = if (x276) {          val x277 = throw new NullPointerException()
x277} else {x65}
          val x279 = x65.asInstanceOf[java.lang.String].getChars(0,x85,x146,0).asInstanceOf[Object]
          val x280 = goto 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x281 = goto 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 46:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x282 = unsafe.putObject(x2,24, x160)
          val x283 = goto 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Throwable.fillInStackTrace>()Ljava/lang/Throwable; // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x284 = goto 14:<Throwable.fillInStackTrace>()Ljava/lang/Throwable; // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x285 = unsafe.putInt(x253,28, 0)
          val x286 = goto 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x287 = x65 eq null
          val x289 = if (x287) {          val x288 = throw new NullPointerException()
x288} else {x65}
          val x290 = x65.asInstanceOf[java.lang.String].getChars(0,x85,x160,0).asInstanceOf[Object]
          val x291 = goto 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x292 = unsafe.putInt(x2,16, x85)
          val x293 = goto 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x294 = x65 eq null
          val x296 = if (x294) {          val x295 = throw new NullPointerException()
x295} else {x65}
          val x297 = x65.asInstanceOf[java.lang.String].getChars(0,x85,x160,0).asInstanceOf[Object]
          val x298 = goto 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 4: 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<Throwable.fillInStackTrace>()Ljava/lang/Throwable; // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x299 = x149.asInstanceOf[java.lang.Throwable].fillInStackTrace(0).asInstanceOf[Object]
          val x300 = goto 19:<Throwable.fillInStackTrace>()Ljava/lang/Throwable; // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x301 = goto 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x302 = unsafe.putInt(x2,16, x85)
          val x303 = goto 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x304 = goto 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x305 = unsafe.putInt(x2,16, x85)
          val x306 = goto 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 19:<Throwable.fillInStackTrace>()Ljava/lang/Throwable; // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x307 = unsafe.putObject(x149,40, (null:Array[Object]))
          val x308 = unsafe.monitorEnter(x149)
          val x309 = goto 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x310 = goto 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x311 = goto 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x312 = goto 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x313 = goto 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x314 = goto 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x315 = goto 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x316 = goto 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x317 = goto 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x318 = goto 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Error.<init>>()V // 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x319 = goto 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x320 = goto 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x321 = goto 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x322 = goto 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x323 = goto 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<VirtualMachineError.<init>>()V // 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x324 = goto 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x325 = new Array[char](0)
          val x326 = goto 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x327 = goto 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x328 = goto 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x329 = goto 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<OutOfMemoryError.<init>>()V // 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x330 = goto 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x331 = goto 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x332 = goto 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x333 = goto 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x334 = goto 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 33:<AbstractStringBuilder.expandCapacity>(I)V // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x335 = goto 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x336 = goto 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x337 = goto 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x338 = unsafe.allocateInstance(classOf[java.lang.String])
          val x339 = goto 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x340 = goto 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 5: 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x341 = java.lang.System.arraycopy(x3,0,x325,0,0).asInstanceOf[Object]
          val x342 = goto 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x343 = unsafe.allocateInstance(classOf[java.lang.String])
          val x344 = goto 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x345 = goto 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x346 = unsafe.allocateInstance(classOf[java.lang.String])
          val x347 = goto 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x348 = goto 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x349 = goto 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x350 = goto 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x351 = goto 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x352 = unsafe.putObject(x253,16, x325)
          val x353 = goto 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x354 = goto 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x355 = unsafe.putInt(x338,28, 0)
          val x356 = goto 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x357 = goto 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x358 = goto 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x359 = unsafe.putInt(x343,28, 0)
          val x360 = goto 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x361 = goto 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x362 = unsafe.putInt(x346,28, 0)
          val x363 = goto 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x364 = goto 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x365 = goto 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x366 = goto 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x367 = goto 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x368 = goto 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x369 = goto 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x370 = goto 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x371 = goto 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x372 = goto 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x373 = goto 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x374 = goto 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x375 = goto 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x376 = goto 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x377 = goto 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x378 = new Array[char](0)
          val x379 = goto 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x380 = goto 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x381 = goto 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x382 = new Array[char](0)
          val x383 = goto 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x384 = goto 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x385 = new Array[char](0)
          val x386 = goto 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x387 = goto 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x388 = goto 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x389 = goto 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x390 = goto 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x391 = goto 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x392 = goto 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x393 = java.lang.System.arraycopy(x160,0,x378,0,0).asInstanceOf[Object]
          val x394 = goto 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x395 = goto 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x396 = goto 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x397 = java.lang.System.arraycopy(x160,0,x382,0,0).asInstanceOf[Object]
          val x398 = goto 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x399 = goto 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x400 = java.lang.System.arraycopy(x160,0,x385,0,0).asInstanceOf[Object]
          val x401 = goto 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x402 = goto 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x403 = goto 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x404 = unsafe.putObject(x338,16, x378)
          val x405 = goto 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x406 = goto 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x407 = goto 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x408 = unsafe.putObject(x343,16, x382)
          val x409 = goto 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x410 = goto 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x411 = unsafe.putObject(x346,16, x385)
          val x412 = goto 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x413 = java.lang.Thread.currentThread().asInstanceOf[Object]
          val x414 = goto 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x415 = goto 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x416 = goto 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x417 = goto 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x418 = goto 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x419 = goto 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x420 = goto 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x421 = goto 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x422 = x413 eq null
          val x424 = if (x422) {          val x423 = throw new NullPointerException()
x423} else {x413}
          val x425 = x424 eq null
          val x426 = if (x425) {Class.forName("java.lang.Thread")} else {x424}
          val x427 = unsafe.getObject(x426,120)
          val x428 = goto 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x429 = goto 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x430 = goto 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 25:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x431 = goto 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x432 = goto 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x433 = goto 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x434 = goto 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x435 = goto 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x436 = goto 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x437 = goto 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x438 = goto 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x439 = goto 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x440 = x427 eq null
          val x442 = if (x440) {          val x441 = throw new NullPointerException()
x441} else {x427}
          val x443 = goto 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x444 = goto 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x445 = goto 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x446 = goto 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x447 = goto 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x448 = goto 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x449 = goto 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<Console$.outVar>()Lscala/util/DynamicVariable; // 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x450 = goto 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x451 = goto 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x452 = goto 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x453 = goto 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x454 = goto 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x455 = x427 eq null
          val x457 = if (x455) {          val x456 = throw new NullPointerException()
x456} else {x427}
          val x458 = x457 eq null
          val x459 = if (x458) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x457}
          val x460 = unsafe.getObject(x459,24)
          val x461 = x460 eq null
          val x463 = if (x461) {          val x462 = throw new NullPointerException()
x462} else {x460}
          val x464 = java.lang.reflect.Array.getLength(x463)
          val x465 = -1 + x464
          val x466 = x465 & -1936384785
          val x467 = x427 eq null
          val x469 = if (x467) {          val x468 = throw new NullPointerException()
x468} else {x427}
          val x470 = x469 eq null
          val x471 = if (x470) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x469}
          val x472 = unsafe.getObject(x471,24)
          val x473 = x466.toLong
          val x474 = x472 eq null
          val x476 = if (x474) {          val x475 = throw new NullPointerException()
x475} else {x472}
          val x477 = x472.getClass()
          val x478 = !x477.isArray()
          val x480 = if (x478) {          val x479 = throw new ArrayStoreException(x477.getName())
x479} else {()}
          val x481 = x473 < 0
          val x485 = if (x481) {x481} else {          val x482 = java.lang.reflect.Array.getLength(x472)
          val x483 = x482.toLong
          val x484 = x473 >= x483
x484}
          val x488 = if (x485) {          val x486 = x473.toInt
          val x487 = throw new ArrayIndexOutOfBoundsException(x486)
x487} else {()}
          val x489 = 8 * x473
          val x490 = 24 + x489
          val x491 = unsafe.getObject(x472,x490)
          val x492 = goto 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x493 = goto 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x494 = goto 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x495 = goto 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x496 = x491 eq null
          val x498 = if (x496) {          val x497 = throw new NullPointerException()
x497} else {x491}
          val x499 = x491.asInstanceOf[java.lang.ref.Reference].get().asInstanceOf[Object]
          val x500 = goto 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x501 = goto 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x502 = goto 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<DynamicVariable.tl>()Ljava/lang/InheritableThreadLocal; // 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x503 = goto 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x504 = goto 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x505 = goto 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x506 = java.lang.Thread.currentThread().asInstanceOf[Object]
          val x507 = goto 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x508 = goto 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x509 = x427 eq null
          val x511 = if (x509) {          val x510 = throw new NullPointerException()
x510} else {x427}
          val x512 = goto 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x513 = java.lang.Thread.currentThread().asInstanceOf[Object]
          val x514 = goto 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x515 = goto 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x516 = java.lang.Thread.currentThread().asInstanceOf[Object]
          val x517 = goto 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x518 = x427 eq null
          val x520 = if (x518) {          val x519 = throw new NullPointerException()
x519} else {x427}
          val x521 = x520 eq null
          val x522 = if (x521) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x520}
          val x523 = unsafe.getObject(x522,24)
          val x524 = x523 eq null
          val x526 = if (x524) {          val x525 = throw new NullPointerException()
x525} else {x523}
          val x527 = java.lang.reflect.Array.getLength(x526)
          val x528 = goto 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x529 = goto 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x530 = x506 eq null
          val x532 = if (x530) {          val x531 = throw new NullPointerException()
x531} else {x506}
          val x533 = x532 eq null
          val x534 = if (x533) {Class.forName("java.lang.Thread")} else {x532}
          val x535 = unsafe.getObject(x534,120)
          val x536 = goto 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 3:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x537 = goto 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x538 = x491 eq null
          val x540 = if (x538) {          val x539 = throw new NullPointerException()
x539} else {x491}
          val x541 = x491.asInstanceOf[java.lang.ref.Reference].get().asInstanceOf[Object]
          val x542 = goto 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x543 = x513 eq null
          val x545 = if (x543) {          val x544 = throw new NullPointerException()
x544} else {x513}
          val x546 = x545 eq null
          val x547 = if (x546) {Class.forName("java.lang.Thread")} else {x545}
          val x548 = unsafe.getObject(x547,120)
          val x549 = goto 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x550 = goto 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<InheritableThreadLocal.getMap>(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap; // 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x551 = x516 eq null
          val x553 = if (x551) {          val x552 = throw new NullPointerException()
x552} else {x516}
          val x554 = x553 eq null
          val x555 = if (x554) {Class.forName("java.lang.Thread")} else {x553}
          val x556 = unsafe.getObject(x555,120)
          val x557 = goto 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x558 = checkCast(class java.lang.ThreadLocal,x541)
          val x559 = goto 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x560 = goto 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x561 = goto 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 9:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x562 = goto 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x563 = goto 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x564 = goto 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x565 = x535 eq null
          val x567 = if (x565) {          val x566 = throw new NullPointerException()
x566} else {x535}
          val x568 = goto 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x569 = goto 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x570 = goto 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x571 = x548 eq null
          val x573 = if (x571) {          val x572 = throw new NullPointerException()
x572} else {x548}
          val x574 = goto 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x575 = goto 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x576 = x556 eq null
          val x578 = if (x576) {          val x577 = throw new NullPointerException()
x577} else {x556}
          val x579 = goto 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x580 = 1 + x466
          val x581 = x527 <= x580
          val x584 = if (x581) {          val x582 = goto 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x582} else {          val x583 = goto 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x583}
// *** SEEN 2: 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x585 = goto 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x586 = goto 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x587 = goto 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x588 = goto 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x589 = 1 + x466
          val x590 = goto 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x591 = goto 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x592 = x535 eq null
          val x594 = if (x592) {          val x593 = throw new NullPointerException()
x593} else {x535}
          val x595 = x594 eq null
          val x596 = if (x595) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x594}
          val x597 = unsafe.getObject(x596,24)
          val x598 = x597 eq null
          val x600 = if (x598) {          val x599 = throw new NullPointerException()
x599} else {x597}
          val x601 = java.lang.reflect.Array.getLength(x600)
          val x602 = -1 + x601
          val x603 = x602 & -1936384785
          val x604 = x535 eq null
          val x606 = if (x604) {          val x605 = throw new NullPointerException()
x605} else {x535}
          val x607 = x606 eq null
          val x608 = if (x607) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x606}
          val x609 = unsafe.getObject(x608,24)
          val x610 = x603.toLong
          val x611 = x609 eq null
          val x613 = if (x611) {          val x612 = throw new NullPointerException()
x612} else {x609}
          val x614 = x609.getClass()
          val x615 = !x614.isArray()
          val x617 = if (x615) {          val x616 = throw new ArrayStoreException(x614.getName())
x616} else {()}
          val x618 = x610 < 0
          val x622 = if (x618) {x618} else {          val x619 = java.lang.reflect.Array.getLength(x609)
          val x620 = x619.toLong
          val x621 = x610 >= x620
x621}
          val x625 = if (x622) {          val x623 = x610.toInt
          val x624 = throw new ArrayIndexOutOfBoundsException(x623)
x624} else {()}
          val x626 = 8 * x610
          val x627 = 24 + x626
          val x628 = unsafe.getObject(x609,x627)
          val x629 = goto 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal.access$400>(Ljava/lang/ThreadLocal;)I // 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x630 = goto 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x631 = x523 eq null
          val x633 = if (x631) {          val x632 = throw new NullPointerException()
x632} else {x523}
          val x634 = x523.getClass()
          val x635 = !x634.isArray()
          val x637 = if (x635) {          val x636 = throw new ArrayStoreException(x634.getName())
x636} else {()}
          val x638 = java.lang.reflect.Array.getLength(x523)
          val x639 = x638.toLong
          val x640 = 0 >= x639
          val x642 = if (x640) {          val x641 = throw new ArrayIndexOutOfBoundsException(0)
x641} else {()}
          val x643 = unsafe.getObject(x523,24)
          val x644 = goto 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x645 = goto 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x646 = x548 eq null
          val x648 = if (x646) {          val x647 = throw new NullPointerException()
x647} else {x548}
          val x649 = x648 eq null
          val x650 = if (x649) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x648}
          val x651 = unsafe.getObject(x650,24)
          val x652 = x651 eq null
          val x654 = if (x652) {          val x653 = throw new NullPointerException()
x653} else {x651}
          val x655 = java.lang.reflect.Array.getLength(x654)
          val x656 = -1 + x655
          val x657 = x656 & -1936384785
          val x658 = x548 eq null
          val x660 = if (x658) {          val x659 = throw new NullPointerException()
x659} else {x548}
          val x661 = x660 eq null
          val x662 = if (x661) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x660}
          val x663 = unsafe.getObject(x662,24)
          val x664 = x657.toLong
          val x665 = x663 eq null
          val x667 = if (x665) {          val x666 = throw new NullPointerException()
x666} else {x663}
          val x668 = x663.getClass()
          val x669 = !x668.isArray()
          val x671 = if (x669) {          val x670 = throw new ArrayStoreException(x668.getName())
x670} else {()}
          val x672 = x664 < 0
          val x676 = if (x672) {x672} else {          val x673 = java.lang.reflect.Array.getLength(x663)
          val x674 = x673.toLong
          val x675 = x664 >= x674
x675}
          val x679 = if (x676) {          val x677 = x664.toInt
          val x678 = throw new ArrayIndexOutOfBoundsException(x677)
x678} else {()}
          val x680 = 8 * x664
          val x681 = 24 + x680
          val x682 = unsafe.getObject(x663,x681)
          val x683 = goto 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x684 = x628 eq null
          val x686 = if (x684) {          val x685 = throw new NullPointerException()
x685} else {x628}
          val x687 = x628.asInstanceOf[java.lang.ref.Reference].get().asInstanceOf[Object]
          val x688 = goto 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 4:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x689 = x556 eq null
          val x691 = if (x689) {          val x690 = throw new NullPointerException()
x690} else {x556}
          val x692 = x691 eq null
          val x693 = if (x692) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x691}
          val x694 = unsafe.getObject(x693,24)
          val x695 = x694 eq null
          val x697 = if (x695) {          val x696 = throw new NullPointerException()
x696} else {x694}
          val x698 = java.lang.reflect.Array.getLength(x697)
          val x699 = -1 + x698
          val x700 = x699 & -1936384785
          val x701 = x556 eq null
          val x703 = if (x701) {          val x702 = throw new NullPointerException()
x702} else {x556}
          val x704 = x703 eq null
          val x705 = if (x704) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x703}
          val x706 = unsafe.getObject(x705,24)
          val x707 = x700.toLong
          val x708 = x706 eq null
          val x710 = if (x708) {          val x709 = throw new NullPointerException()
x709} else {x706}
          val x711 = x706.getClass()
          val x712 = !x711.isArray()
          val x714 = if (x712) {          val x713 = throw new ArrayStoreException(x711.getName())
x713} else {()}
          val x715 = x707 < 0
          val x719 = if (x715) {x715} else {          val x716 = java.lang.reflect.Array.getLength(x706)
          val x717 = x716.toLong
          val x718 = x707 >= x717
x718}
          val x722 = if (x719) {          val x720 = x707.toInt
          val x721 = throw new ArrayIndexOutOfBoundsException(x720)
x721} else {()}
          val x723 = 8 * x707
          val x724 = 24 + x723
          val x725 = unsafe.getObject(x706,x724)
          val x726 = goto 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x727 = goto 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x728 = x589.toLong
          val x729 = x523 eq null
          val x731 = if (x729) {          val x730 = throw new NullPointerException()
x730} else {x523}
          val x732 = x523.getClass()
          val x733 = !x732.isArray()
          val x735 = if (x733) {          val x734 = throw new ArrayStoreException(x732.getName())
x734} else {()}
          val x736 = x728 < 0
          val x740 = if (x736) {x736} else {          val x737 = java.lang.reflect.Array.getLength(x523)
          val x738 = x737.toLong
          val x739 = x728 >= x738
x739}
          val x743 = if (x740) {          val x741 = x728.toInt
          val x742 = throw new ArrayIndexOutOfBoundsException(x741)
x742} else {()}
          val x744 = 8 * x728
          val x745 = 24 + x744
          val x746 = unsafe.getObject(x523,x745)
          val x747 = goto 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x748 = x682 eq null
          val x750 = if (x748) {          val x749 = throw new NullPointerException()
x749} else {x682}
          val x751 = x682.asInstanceOf[java.lang.ref.Reference].get().asInstanceOf[Object]
          val x752 = goto 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x753 = goto 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 24:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x754 = x725 eq null
          val x756 = if (x754) {          val x755 = throw new NullPointerException()
x755} else {x725}
          val x757 = x725.asInstanceOf[java.lang.ref.Reference].get().asInstanceOf[Object]
          val x758 = goto 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x759 = x643 eq null
          val x761 = if (x759) {          val x760 = throw new NullPointerException()
x760} else {x643}
          val x762 = x643.asInstanceOf[java.lang.ref.Reference].get().asInstanceOf[Object]
          val x763 = goto 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x764 = goto 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x765 = goto 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x766 = x535 eq null
          val x768 = if (x766) {          val x767 = throw new NullPointerException()
x767} else {x535}
          val x769 = goto 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 28:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x770 = goto 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x771 = checkCast(class java.lang.ThreadLocal,x762)
          val x772 = goto 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x773 = x746 eq null
          val x775 = if (x773) {          val x774 = throw new NullPointerException()
x774} else {x746}
          val x776 = x746.asInstanceOf[java.lang.ref.Reference].get().asInstanceOf[Object]
          val x777 = goto 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x778 = x548 eq null
          val x780 = if (x778) {          val x779 = throw new NullPointerException()
x779} else {x548}
          val x781 = goto 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x782 = x535 eq null
          val x784 = if (x782) {          val x783 = throw new NullPointerException()
x783} else {x535}
          val x785 = x784 eq null
          val x786 = if (x785) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x784}
          val x787 = unsafe.getObject(x786,24)
          val x788 = x787 eq null
          val x790 = if (x788) {          val x789 = throw new NullPointerException()
x789} else {x787}
          val x791 = java.lang.reflect.Array.getLength(x790)
          val x792 = goto 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 34:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x793 = x556 eq null
          val x795 = if (x793) {          val x794 = throw new NullPointerException()
x794} else {x556}
          val x796 = goto 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x797 = goto 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x798 = checkCast(class java.lang.ThreadLocal,x776)
          val x799 = goto 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x800 = x548 eq null
          val x802 = if (x800) {          val x801 = throw new NullPointerException()
x801} else {x548}
          val x803 = x802 eq null
          val x804 = if (x803) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x802}
          val x805 = unsafe.getObject(x804,24)
          val x806 = x805 eq null
          val x808 = if (x806) {          val x807 = throw new NullPointerException()
x807} else {x805}
          val x809 = java.lang.reflect.Array.getLength(x808)
          val x810 = goto 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x811 = x628 eq null
          val x813 = if (x811) {          val x812 = throw new NullPointerException()
x812} else {x628}
          val x814 = x628.asInstanceOf[java.lang.ref.Reference].get().asInstanceOf[Object]
          val x815 = goto 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x816 = x556 eq null
          val x818 = if (x816) {          val x817 = throw new NullPointerException()
x817} else {x556}
          val x819 = x818 eq null
          val x820 = if (x819) {Class.forName("java.lang.ThreadLocal$ThreadLocalMap")} else {x818}
          val x821 = unsafe.getObject(x820,24)
          val x822 = x821 eq null
          val x824 = if (x822) {          val x823 = throw new NullPointerException()
x823} else {x821}
          val x825 = java.lang.reflect.Array.getLength(x824)
          val x826 = goto 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x827 = goto 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x828 = goto 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 4: 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 19:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x829 = checkCast(class java.lang.ThreadLocal,x814)
          val x830 = goto 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 5: 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x831 = x527 <= 1
          val x834 = if (x831) {          val x832 = goto 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x832} else {          val x833 = goto 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x833}
// *** SEEN 2: 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x835 = goto 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 32:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x836 = goto 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x837 = goto 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x838 = goto 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x839 = 1 + x589
          val x840 = x527 <= x839
          val x843 = if (x840) {          val x841 = goto 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x841} else {          val x842 = goto 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x842}
// *** SEEN 3: 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 46:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x844 = goto 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x845 = x523 eq null
          val x847 = if (x845) {          val x846 = throw new NullPointerException()
x846} else {x523}
          val x848 = x523.getClass()
          val x849 = !x848.isArray()
          val x851 = if (x849) {          val x850 = throw new ArrayStoreException(x848.getName())
x850} else {()}
          val x852 = java.lang.reflect.Array.getLength(x523)
          val x853 = x852.toLong
          val x854 = 0 >= x853
          val x856 = if (x854) {          val x855 = throw new ArrayIndexOutOfBoundsException(0)
x855} else {()}
          val x857 = unsafe.getObject(x523,24)
          val x858 = goto 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 1: 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x859 = goto 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x860 = goto 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x861 = 1 + x589
          val x862 = goto 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 0:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x863 = 1 + x603
          val x864 = x791 <= x863
          val x867 = if (x864) {          val x865 = goto 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x865} else {          val x866 = goto 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x866}
// *** SEEN 2: 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x868 = goto 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x869 = x523 eq null
          val x871 = if (x869) {          val x870 = throw new NullPointerException()
x870} else {x523}
          val x872 = x523.getClass()
          val x873 = !x872.isArray()
          val x875 = if (x873) {          val x874 = throw new ArrayStoreException(x872.getName())
x874} else {()}
          val x876 = java.lang.reflect.Array.getLength(x523)
          val x877 = x876.toLong
          val x878 = 1 >= x877
          val x880 = if (x878) {          val x879 = throw new ArrayIndexOutOfBoundsException(1)
x879} else {()}
          val x881 = unsafe.getObject(x523,32)
          val x882 = goto 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 4: 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 2: 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x883 = goto 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 13:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x884 = goto 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 7:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x885 = 1 + x603
          val x886 = goto 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 6: 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 11:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x887 = goto 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 5: 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 6: 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 3: 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** begin block 14:<ThreadLocal$ThreadLocalMap.nextIndex>(II)I // 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x888 = goto 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 7: 15:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
// *** SEEN 7: 52:<ThreadLocal$ThreadLocalMap.getEntryAfterMiss>(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 41:<ThreadLocal$ThreadLocalMap.getEntry>(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 5:<ThreadLocal$ThreadLocalMap.access$000>(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry; // 19:<ThreadLocal.get>()Ljava/lang/Object; // 7:<DynamicVariable.value>()Ljava/lang/Object; // 7:<Console$.out>()Ljava/io/PrintStream; // 4:<Console$.println>(Ljava/lang/Object;)V // 7:<Predef$.println>(Ljava/lang/Object;)V // 28:<TestInterpreter1$$anonfun$testC$1$Foo$3.bar>(I)V // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
}
